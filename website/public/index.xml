<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Talos Linux</title>
    <link>https://talos.dev/</link>
    <description>Recent content on Talos Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://talos.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Philosophy</title>
      <link>https://talos.dev/docs/v0.10/learn-more/philosophy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/learn-more/philosophy/</guid>
      <description>Distributed Talos is intended to be operated in a distributed manner. That is, it is built for a high-availability dataplane first. Its etcd cluster is built in an ad-hoc manner, with each appointed node joining on its own directive (with proper security validations enforced, of course). Like as kubernetes itself, workloads are intended to be distributed across any number of compute nodes.
There should be no single points of failure, and the level of required coordination is as low as each platform allows.</description>
    </item>
    
    <item>
      <title>Philosophy</title>
      <link>https://talos.dev/docs/v0.11/learn-more/philosophy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/learn-more/philosophy/</guid>
      <description>Distributed Talos is intended to be operated in a distributed manner. That is, it is built for a high-availability dataplane first. Its etcd cluster is built in an ad-hoc manner, with each appointed node joining on its own directive (with proper security validations enforced, of course). Like as kubernetes itself, workloads are intended to be distributed across any number of compute nodes.
There should be no single points of failure, and the level of required coordination is as low as each platform allows.</description>
    </item>
    
    <item>
      <title>Philosophy</title>
      <link>https://talos.dev/docs/v0.12/learn-more/philosophy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/learn-more/philosophy/</guid>
      <description>Distributed Talos is intended to be operated in a distributed manner. That is, it is built for a high-availability dataplane first. Its etcd cluster is built in an ad-hoc manner, with each appointed node joining on its own directive (with proper security validations enforced, of course). Like as kubernetes itself, workloads are intended to be distributed across any number of compute nodes.
There should be no single points of failure, and the level of required coordination is as low as each platform allows.</description>
    </item>
    
    <item>
      <title>Philosophy</title>
      <link>https://talos.dev/docs/v0.13/learn-more/philosophy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/learn-more/philosophy/</guid>
      <description>Distributed Talos is intended to be operated in a distributed manner. That is, it is built for a high-availability dataplane first. Its etcd cluster is built in an ad-hoc manner, with each appointed node joining on its own directive (with proper security validations enforced, of course). Like as kubernetes itself, workloads are intended to be distributed across any number of compute nodes.
There should be no single points of failure, and the level of required coordination is as low as each platform allows.</description>
    </item>
    
    <item>
      <title>Philosophy</title>
      <link>https://talos.dev/docs/v0.14/learn-more/philosophy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/learn-more/philosophy/</guid>
      <description>Distributed Talos is intended to be operated in a distributed manner. That is, it is built for a high-availability dataplane first. Its etcd cluster is built in an ad-hoc manner, with each appointed node joining on its own directive (with proper security validations enforced, of course). Like as kubernetes itself, workloads are intended to be distributed across any number of compute nodes.
There should be no single points of failure, and the level of required coordination is as low as each platform allows.</description>
    </item>
    
    <item>
      <title>Philosophy</title>
      <link>https://talos.dev/docs/v0.7/learn-more/philosophy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/learn-more/philosophy/</guid>
      <description>Distributed Talos is intended to be operated in a distributed manner. That is, it is built for a high-availability dataplane first. Its etcd cluster is built in an ad-hoc manner, with each appointed node joining on its own directive (with proper security validations enforced, of course). Like as kubernetes itself, workloads are intended to be distributed across any number of compute nodes.
There should be no single points of failure, and the level of required coordination is as low as each platform allows.</description>
    </item>
    
    <item>
      <title>Philosophy</title>
      <link>https://talos.dev/docs/v0.8/learn-more/philosophy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/learn-more/philosophy/</guid>
      <description>Distributed Talos is intended to be operated in a distributed manner. That is, it is built for a high-availability dataplane first. Its etcd cluster is built in an ad-hoc manner, with each appointed node joining on its own directive (with proper security validations enforced, of course). Like as kubernetes itself, workloads are intended to be distributed across any number of compute nodes.
There should be no single points of failure, and the level of required coordination is as low as each platform allows.</description>
    </item>
    
    <item>
      <title>Philosophy</title>
      <link>https://talos.dev/docs/v0.9/learn-more/philosophy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/learn-more/philosophy/</guid>
      <description>Distributed Talos is intended to be operated in a distributed manner. That is, it is built for a high-availability dataplane first. Its etcd cluster is built in an ad-hoc manner, with each appointed node joining on its own directive (with proper security validations enforced, of course). Like as kubernetes itself, workloads are intended to be distributed across any number of compute nodes.
There should be no single points of failure, and the level of required coordination is as low as each platform allows.</description>
    </item>
    
    <item>
      <title>Philosophy</title>
      <link>https://talos.dev/docs/v1.0/learn-more/philosophy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/learn-more/philosophy/</guid>
      <description>Distributed Talos is intended to be operated in a distributed manner. That is, it is built for a high-availability dataplane first. Its etcd cluster is built in an ad-hoc manner, with each appointed node joining on its own directive (with proper security validations enforced, of course). Like as kubernetes itself, workloads are intended to be distributed across any number of compute nodes.
There should be no single points of failure, and the level of required coordination is as low as each platform allows.</description>
    </item>
    
    <item>
      <title>What is Talos?</title>
      <link>https://talos.dev/docs/v0.10/introduction/what-is-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/introduction/what-is-talos/</guid>
      <description>Talos is a container optimized Linux distro; a reimagining of Linux for distributed systems such as Kubernetes. Designed to be as minimal as possible while still maintaining practicality. For these reasons, Talos has a number of features unique to it:
 it is immutable it is atomic it is ephemeral it is minimal it is secure by default it is managed via a single declarative configuration file and gRPC API  Talos can be deployed on container, cloud, virtualized, and bare metal platforms.</description>
    </item>
    
    <item>
      <title>What is Talos?</title>
      <link>https://talos.dev/docs/v0.11/introduction/what-is-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/introduction/what-is-talos/</guid>
      <description>Talos is a container optimized Linux distro; a reimagining of Linux for distributed systems such as Kubernetes. Designed to be as minimal as possible while still maintaining practicality. For these reasons, Talos has a number of features unique to it:
 it is immutable it is atomic it is ephemeral it is minimal it is secure by default it is managed via a single declarative configuration file and gRPC API  Talos can be deployed on container, cloud, virtualized, and bare metal platforms.</description>
    </item>
    
    <item>
      <title>What is Talos?</title>
      <link>https://talos.dev/docs/v0.12/introduction/what-is-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/introduction/what-is-talos/</guid>
      <description>Talos is a container optimized Linux distro; a reimagining of Linux for distributed systems such as Kubernetes. Designed to be as minimal as possible while still maintaining practicality. For these reasons, Talos has a number of features unique to it:
 it is immutable it is atomic it is ephemeral it is minimal it is secure by default it is managed via a single declarative configuration file and gRPC API  Talos can be deployed on container, cloud, virtualized, and bare metal platforms.</description>
    </item>
    
    <item>
      <title>What is Talos?</title>
      <link>https://talos.dev/docs/v0.13/introduction/what-is-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/introduction/what-is-talos/</guid>
      <description>Talos is a container optimized Linux distro; a reimagining of Linux for distributed systems such as Kubernetes. Designed to be as minimal as possible while still maintaining practicality. For these reasons, Talos has a number of features unique to it:
 it is immutable it is atomic it is ephemeral it is minimal it is secure by default it is managed via a single declarative configuration file and gRPC API  Talos can be deployed on container, cloud, virtualized, and bare metal platforms.</description>
    </item>
    
    <item>
      <title>What is Talos?</title>
      <link>https://talos.dev/docs/v0.14/introduction/what-is-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/introduction/what-is-talos/</guid>
      <description>Talos is a container optimized Linux distro; a reimagining of Linux for distributed systems such as Kubernetes. Designed to be as minimal as possible while still maintaining practicality. For these reasons, Talos has a number of features unique to it:
 it is immutable it is atomic it is ephemeral it is minimal it is secure by default it is managed via a single declarative configuration file and gRPC API  Talos can be deployed on container, cloud, virtualized, and bare metal platforms.</description>
    </item>
    
    <item>
      <title>What is Talos?</title>
      <link>https://talos.dev/docs/v0.6/introduction/what-is-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/introduction/what-is-talos/</guid>
      <description>Talos is an open source platform to host and maintain Kubernetes clusters. It includes a purpose-built operating system and associated management tools. It can run on all major cloud providers, virtualization platforms, and bare metal hardware.
All system management is done via an API, and there is no shell or interactive console. Some of the capabilities and benefits provided by Talos include:
 Security: Talos reduces your attack surface by practicing the Principle of Least Privilege (PoLP) and by securing the API with mutual TLS (mTLS) authentication.</description>
    </item>
    
    <item>
      <title>What is Talos?</title>
      <link>https://talos.dev/docs/v0.7/introduction/what-is-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/introduction/what-is-talos/</guid>
      <description>Talos is a container optimized Linux distro; a reimagining of Linux for distributed systems such as Kubernetes. Designed to be as minimal as possible while still maintaining practicality. For these reasons, Talos has a number of features unique to it:
 it is immutable it is atomic it is ephemeral it is minimal it is secure by default it is managed via a sigle declaritive configuration file and gRPC API  Talos can be deployed on container, cloud, virtualized, and bare metal platforms.</description>
    </item>
    
    <item>
      <title>What is Talos?</title>
      <link>https://talos.dev/docs/v0.8/introduction/what-is-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/introduction/what-is-talos/</guid>
      <description>Talos is a container optimized Linux distro; a reimagining of Linux for distributed systems such as Kubernetes. Designed to be as minimal as possible while still maintaining practicality. For these reasons, Talos has a number of features unique to it:
 it is immutable it is atomic it is ephemeral it is minimal it is secure by default it is managed via a single declarative configuration file and gRPC API  Talos can be deployed on container, cloud, virtualized, and bare metal platforms.</description>
    </item>
    
    <item>
      <title>What is Talos?</title>
      <link>https://talos.dev/docs/v0.9/introduction/what-is-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/introduction/what-is-talos/</guid>
      <description>Talos is a container optimized Linux distro; a reimagining of Linux for distributed systems such as Kubernetes. Designed to be as minimal as possible while still maintaining practicality. For these reasons, Talos has a number of features unique to it:
 it is immutable it is atomic it is ephemeral it is minimal it is secure by default it is managed via a single declarative configuration file and gRPC API  Talos can be deployed on container, cloud, virtualized, and bare metal platforms.</description>
    </item>
    
    <item>
      <title>What is Talos?</title>
      <link>https://talos.dev/docs/v1.0/introduction/what-is-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/introduction/what-is-talos/</guid>
      <description>Talos is a container optimized Linux distro; a reimagining of Linux for distributed systems such as Kubernetes. Designed to be as minimal as possible while still maintaining practicality. For these reasons, Talos has a number of features unique to it:
 it is immutable it is atomic it is ephemeral it is minimal it is secure by default it is managed via a single declarative configuration file and gRPC API  Talos can be deployed on container, cloud, virtualized, and bare metal platforms.</description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>https://talos.dev/docs/v0.10/learn-more/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/learn-more/concepts/</guid>
      <description>Platform Mode Endpoint Node </description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>https://talos.dev/docs/v0.11/learn-more/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/learn-more/concepts/</guid>
      <description>Platform Mode Endpoint Node </description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>https://talos.dev/docs/v0.12/learn-more/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/learn-more/concepts/</guid>
      <description>Platform Mode Endpoint Node </description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>https://talos.dev/docs/v0.13/learn-more/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/learn-more/concepts/</guid>
      <description>Platform Mode Endpoint Node </description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>https://talos.dev/docs/v0.14/learn-more/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/learn-more/concepts/</guid>
      <description>Platform Mode Endpoint Node </description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>https://talos.dev/docs/v0.7/learn-more/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/learn-more/concepts/</guid>
      <description>Platform Mode Endpoint Node </description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>https://talos.dev/docs/v0.8/learn-more/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/learn-more/concepts/</guid>
      <description>Platform Mode Endpoint Node </description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>https://talos.dev/docs/v0.9/learn-more/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/learn-more/concepts/</guid>
      <description>Platform Mode Endpoint Node </description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>https://talos.dev/docs/v1.0/learn-more/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/learn-more/concepts/</guid>
      <description>Platform Mode Endpoint Node </description>
    </item>
    
    <item>
      <title>Quickstart</title>
      <link>https://talos.dev/docs/v0.10/introduction/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/introduction/quickstart/</guid>
      <description>The easiest way to try Talos is by using the CLI (talosctl) to create a cluster on a machine with docker installed.
Prerequisites talosctl Download talosctl:
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl kubectl Download kubectl via one of methods outlined in the documentation.
Create the Cluster Now run the following:
talosctl cluster create Verify that you can reach Kubernetes:
$ kubectl get nodes -o wide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME talos-default-master-1 Ready master 115s v1.</description>
    </item>
    
    <item>
      <title>Quickstart</title>
      <link>https://talos.dev/docs/v0.11/introduction/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/introduction/quickstart/</guid>
      <description>The easiest way to try Talos is by using the CLI (talosctl) to create a cluster on a machine with docker installed.
Prerequisites talosctl Download talosctl:
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl kubectl Download kubectl via one of methods outlined in the documentation.
Create the Cluster Now run the following:
talosctl cluster create Verify that you can reach Kubernetes:
$ kubectl get nodes -o wide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME talos-default-master-1 Ready master 115s v1.</description>
    </item>
    
    <item>
      <title>Quickstart</title>
      <link>https://talos.dev/docs/v0.12/introduction/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/introduction/quickstart/</guid>
      <description>The easiest way to try Talos is by using the CLI (talosctl) to create a cluster on a machine with docker installed.
Prerequisites talosctl Download talosctl:
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl kubectl Download kubectl via one of methods outlined in the documentation.
Create the Cluster Now run the following:
talosctl cluster create Verify that you can reach Kubernetes:
$ kubectl get nodes -o wide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME talos-default-master-1 Ready master 115s v1.</description>
    </item>
    
    <item>
      <title>Quickstart</title>
      <link>https://talos.dev/docs/v0.13/introduction/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/introduction/quickstart/</guid>
      <description>The easiest way to try Talos is by using the CLI (talosctl) to create a cluster on a machine with docker installed.
Prerequisites talosctl Download talosctl:
amd64 curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl arm64 For linux and darwin operating systems talosctl is also available for the arm64 processor architecture.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-arm64 chmod +x /usr/local/bin/talosctl kubectl Download kubectl via one of methods outlined in the documentation.</description>
    </item>
    
    <item>
      <title>Quickstart</title>
      <link>https://talos.dev/docs/v0.14/introduction/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/introduction/quickstart/</guid>
      <description>There are two easy ways to try out Talos Linux. Instructions for each are detailed below.
Katacoda Sandbox First, you can explore a sandbox environment hosted on Katacoda. This approach has the benefit of having no prerequisites and being a bit more guided, so you can quickly learn how to interact with a cluster.
Please visit Katacoda here to try it out.
Local Docker Cluster Another easy way to try Talos is by using the CLI (talosctl) to create a cluster on a machine with docker installed.</description>
    </item>
    
    <item>
      <title>Quickstart</title>
      <link>https://talos.dev/docs/v0.6/introduction/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/introduction/quickstart/</guid>
      <description>In this guide we will create a Kubernetes cluster in Docker, using a containerized version of Talos.
Running Talos in Docker is intended to be used in CI pipelines, and local testing when you need a quick and easy cluster. Furthermore, if you are running Talos in production, it provides an excellent way for developers to develop against the same version of Talos.
Requirements The follow are requirements for running Talos in Docker:</description>
    </item>
    
    <item>
      <title>Quickstart</title>
      <link>https://talos.dev/docs/v0.7/introduction/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/introduction/quickstart/</guid>
      <description>The easiest way to try Talos is by using the CLI (talosctl) to create a cluster on a machine with docker installed.
Prerequisites talosctl Download talosctl:
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl kubectl Download kubectl via one of methods outlined in the documentation.
Create the Cluster Now run the following:
talosctl cluster create Verify that you can reach Kubernetes:
$ kubectl get nodes -o wide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME talos-default-master-1 Ready master 115s v1.</description>
    </item>
    
    <item>
      <title>Quickstart</title>
      <link>https://talos.dev/docs/v0.8/introduction/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/introduction/quickstart/</guid>
      <description>The easiest way to try Talos is by using the CLI (talosctl) to create a cluster on a machine with docker installed.
Prerequisites talosctl Download talosctl:
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl kubectl Download kubectl via one of methods outlined in the documentation.
Create the Cluster Now run the following:
talosctl cluster create Verify that you can reach Kubernetes:
$ kubectl get nodes -o wide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME talos-default-master-1 Ready master 115s v1.</description>
    </item>
    
    <item>
      <title>Quickstart</title>
      <link>https://talos.dev/docs/v0.9/introduction/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/introduction/quickstart/</guid>
      <description>The easiest way to try Talos is by using the CLI (talosctl) to create a cluster on a machine with docker installed.
Prerequisites talosctl Download talosctl:
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl kubectl Download kubectl via one of methods outlined in the documentation.
Create the Cluster Now run the following:
talosctl cluster create Verify that you can reach Kubernetes:
$ kubectl get nodes -o wide NAME STATUS ROLES AGE VERSION INTERNAL-IP EXTERNAL-IP OS-IMAGE KERNEL-VERSION CONTAINER-RUNTIME talos-default-master-1 Ready master 115s v1.</description>
    </item>
    
    <item>
      <title>Quickstart</title>
      <link>https://talos.dev/docs/v1.0/introduction/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/introduction/quickstart/</guid>
      <description>The easiest way to try Talos is by using the CLI (talosctl) to create a cluster on a machine with docker installed.
Prerequisites talosctl Download talosctl:
amd64 curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl arm64 For linux and darwin operating systems talosctl is also available for the arm64 processor architecture.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-arm64 chmod +x /usr/local/bin/talosctl kubectl Download kubectl via one of methods outlined in the documentation.</description>
    </item>
    
    <item>
      <title>Architecture</title>
      <link>https://talos.dev/docs/v0.10/learn-more/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/learn-more/architecture/</guid>
      <description>Talos is designed to be atomic in deployment and modular in composition.
It is atomic in the sense that the entirety of Talos is distributed as a single, self-contained image, which is versioned, signed, and immutable.
It is modular in the sense that it is composed of many separate components which have clearly defined gRPC interfaces which facilitate internal flexibility and external operational guarantees.
There are a number of components which comprise Talos.</description>
    </item>
    
    <item>
      <title>Architecture</title>
      <link>https://talos.dev/docs/v0.11/learn-more/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/learn-more/architecture/</guid>
      <description>Talos is designed to be atomic in deployment and modular in composition.
It is atomic in the sense that the entirety of Talos is distributed as a single, self-contained image, which is versioned, signed, and immutable.
It is modular in the sense that it is composed of many separate components which have clearly defined gRPC interfaces which facilitate internal flexibility and external operational guarantees.
There are a number of components which comprise Talos.</description>
    </item>
    
    <item>
      <title>Architecture</title>
      <link>https://talos.dev/docs/v0.12/learn-more/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/learn-more/architecture/</guid>
      <description>Talos is designed to be atomic in deployment and modular in composition.
It is atomic in the sense that the entirety of Talos is distributed as a single, self-contained image, which is versioned, signed, and immutable.
It is modular in the sense that it is composed of many separate components which have clearly defined gRPC interfaces which facilitate internal flexibility and external operational guarantees.
There are a number of components which comprise Talos.</description>
    </item>
    
    <item>
      <title>Architecture</title>
      <link>https://talos.dev/docs/v0.13/learn-more/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/learn-more/architecture/</guid>
      <description>Talos is designed to be atomic in deployment and modular in composition.
It is atomic in the sense that the entirety of Talos is distributed as a single, self-contained image, which is versioned, signed, and immutable.
It is modular in the sense that it is composed of many separate components which have clearly defined gRPC interfaces which facilitate internal flexibility and external operational guarantees.
There are a number of components which comprise Talos.</description>
    </item>
    
    <item>
      <title>Architecture</title>
      <link>https://talos.dev/docs/v0.14/learn-more/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/learn-more/architecture/</guid>
      <description>Talos is designed to be atomic in deployment and modular in composition.
It is atomic in the sense that the entirety of Talos is distributed as a single, self-contained image, which is versioned, signed, and immutable.
It is modular in the sense that it is composed of many separate components which have clearly defined gRPC interfaces which facilitate internal flexibility and external operational guarantees.
There are a number of components which comprise Talos.</description>
    </item>
    
    <item>
      <title>Architecture</title>
      <link>https://talos.dev/docs/v0.6/learn-more/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/learn-more/architecture/</guid>
      <description>In this section we will discuss the various components of which Talos is comprised.
Components    Component Description     apid When interacting with Talos, the gRPC API endpoint you&amp;rsquo;re interact with directly is provided by apid. apid acts as the gateway for all component interactions and forwards the requests to routerd.   containerd An industry-standard container runtime with an emphasis on simplicity, robustness and portability.</description>
    </item>
    
    <item>
      <title>Architecture</title>
      <link>https://talos.dev/docs/v0.7/learn-more/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/learn-more/architecture/</guid>
      <description>Talos is designed to be atomic in deployment and modular in composition.
It is atomic in the sense that the entirety of Talos is distributed as a single, self-contained image, which is versioned, signed, and immutable.
It is modular in the sense that it is composed of many separate components which have clearly defined gRPC interfaces which facilitate internal flexibility and external operational guarantees.
There are a number of components which comprise Talos.</description>
    </item>
    
    <item>
      <title>Architecture</title>
      <link>https://talos.dev/docs/v0.8/learn-more/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/learn-more/architecture/</guid>
      <description>Talos is designed to be atomic in deployment and modular in composition.
It is atomic in the sense that the entirety of Talos is distributed as a single, self-contained image, which is versioned, signed, and immutable.
It is modular in the sense that it is composed of many separate components which have clearly defined gRPC interfaces which facilitate internal flexibility and external operational guarantees.
There are a number of components which comprise Talos.</description>
    </item>
    
    <item>
      <title>Architecture</title>
      <link>https://talos.dev/docs/v0.9/learn-more/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/learn-more/architecture/</guid>
      <description>Talos is designed to be atomic in deployment and modular in composition.
It is atomic in the sense that the entirety of Talos is distributed as a single, self-contained image, which is versioned, signed, and immutable.
It is modular in the sense that it is composed of many separate components which have clearly defined gRPC interfaces which facilitate internal flexibility and external operational guarantees.
There are a number of components which comprise Talos.</description>
    </item>
    
    <item>
      <title>Architecture</title>
      <link>https://talos.dev/docs/v1.0/learn-more/architecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/learn-more/architecture/</guid>
      <description>Talos is designed to be atomic in deployment and modular in composition.
It is atomic in the sense that the entirety of Talos is distributed as a single, self-contained image, which is versioned, signed, and immutable.
It is modular in the sense that it is composed of many separate components which have clearly defined gRPC interfaces which facilitate internal flexibility and external operational guarantees.
There are a number of components which comprise Talos.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://talos.dev/docs/v0.10/introduction/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/introduction/getting-started/</guid>
      <description>This document will walk you through installing a full Talos Cluster. You may wish to read through the Quickstart first, to quickly create a local virtual cluster on your workstation.
Regardless of where you run Talos, you will find that there is a pattern to deploying it.
In general you will need to:
 acquire the installation image decide on the endpoint for Kubernetes  optionally create a load balancer   configure Talos configure talosctl bootstrap Kubernetes  Prerequisites talosctl The talosctl tool provides a CLI tool which interfaces with the Talos API in an easy manner.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://talos.dev/docs/v0.11/introduction/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/introduction/getting-started/</guid>
      <description>This document will walk you through installing a full Talos Cluster. You may wish to read through the Quickstart first, to quickly create a local virtual cluster on your workstation.
Regardless of where you run Talos, you will find that there is a pattern to deploying it.
In general you will need to:
 acquire the installation image decide on the endpoint for Kubernetes  optionally create a load balancer   configure Talos configure talosctl bootstrap Kubernetes  Prerequisites talosctl The talosctl tool provides a CLI tool which interfaces with the Talos API in an easy manner.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://talos.dev/docs/v0.12/introduction/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/introduction/getting-started/</guid>
      <description>This document will walk you through installing a full Talos Cluster. You may wish to read through the Quickstart first, to quickly create a local virtual cluster on your workstation.
Regardless of where you run Talos, you will find that there is a pattern to deploying it.
In general you will need to:
 acquire the installation image decide on the endpoint for Kubernetes  optionally create a load balancer   configure Talos configure talosctl bootstrap Kubernetes  Prerequisites talosctl The talosctl tool provides a CLI tool which interfaces with the Talos API in an easy manner.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://talos.dev/docs/v0.13/introduction/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/introduction/getting-started/</guid>
      <description>This document will walk you through installing a full Talos Cluster. You may wish to read through the Quickstart first, to quickly create a local virtual cluster on your workstation.
Regardless of where you run Talos, you will find that there is a pattern to deploying it.
In general you will need to:
 acquire the installation image decide on the endpoint for Kubernetes  optionally create a load balancer   configure Talos configure talosctl bootstrap Kubernetes  Prerequisites talosctl The talosctl tool provides a CLI tool which interfaces with the Talos API in an easy manner.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://talos.dev/docs/v0.14/introduction/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/introduction/getting-started/</guid>
      <description>This document will walk you through installing a full Talos Cluster. You may wish to read through the Quickstart first, to quickly create a local virtual cluster on your workstation.
Regardless of where you run Talos, you will find that there is a pattern to deploying it.
In general you will need to:
 acquire the installation image decide on the endpoint for Kubernetes  optionally create a load balancer   configure Talos configure talosctl bootstrap Kubernetes  Prerequisites talosctl The talosctl tool provides a CLI tool which interfaces with the Talos API in an easy manner.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://talos.dev/docs/v0.7/introduction/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/introduction/getting-started/</guid>
      <description>Regardless of where you run Talos, you will find that there is a pattern to deploying it.
In general you will need to:
 identity and create the image optionally create a load balancer for Kubernetes configure Talos create the nodes  Kernel Parameters The following is a list of kernel parameters required by Talos:
 talos.config: the HTTP(S) URL at which the machine data can be found talos.platform: can be one of aws, azure, container, digitalocean, gcp, metal, packet, or vmware page_poison=1: required by KSPP slab_nomerge: required by KSPP slub_debug=P: required by KSPP pti=on: required by KSPP  CLI Installation curl -Lo /usr/local/bin/talosctl https://github.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://talos.dev/docs/v0.8/introduction/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/introduction/getting-started/</guid>
      <description>Regardless of where you run Talos, you will find that there is a pattern to deploying it.
In general you will need to:
 identity and create the image optionally create a load balancer for Kubernetes configure Talos create the nodes  Kernel Parameters The following is a list of kernel parameters required by Talos:
 talos.config: the HTTP(S) URL at which the machine data can be found talos.platform: can be one of aws, azure, container, digitalocean, gcp, metal, packet, or vmware init_on_alloc=1: required by KSPP init_on_free=1: required by KSPP slab_nomerge: required by KSPP pti=on: required by KSPP  CLI Installation curl -Lo /usr/local/bin/talosctl https://github.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://talos.dev/docs/v0.9/introduction/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/introduction/getting-started/</guid>
      <description>This document will walk you through installing a full Talos Cluster. You may wish to read through the Quickstart first, to quickly create a local virtual cluster on your workstation.
Regardless of where you run Talos, you will find that there is a pattern to deploying it.
In general you will need to:
 acquire the installation image decide on the endpoint for Kubernetes  optionally create a load balancer   configure Talos configure talosctl bootstrap Kubernetes  Prerequisites talosctl The talosctl tool provides a CLI tool which interfaces with the Talos API in an easy manner.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://talos.dev/docs/v1.0/introduction/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/introduction/getting-started/</guid>
      <description>This document will walk you through installing a full Talos Cluster. You may wish to read through the Quickstart first, to quickly create a local virtual cluster on your workstation.
Regardless of where you run Talos, you will find that there is a pattern to deploying it.
In general you will need to:
 acquire the installation image decide on the endpoint for Kubernetes  optionally create a load balancer   configure Talos configure talosctl bootstrap Kubernetes  Prerequisites talosctl The talosctl tool provides a CLI tool which interfaces with the Talos API in an easy manner.</description>
    </item>
    
    <item>
      <title>Components</title>
      <link>https://talos.dev/docs/v0.10/learn-more/components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/learn-more/components/</guid>
      <description>In this section, we discuss the various components that underpin Talos.
Components    Component Description     apid When interacting with Talos, the gRPC API endpoint you interact with directly is provided by apid. apid acts as the gateway for all component interactions and forwards the requests to machined.   containerd An industry-standard container runtime with an emphasis on simplicity, robustness, and portability. To learn more, see the containerd website.</description>
    </item>
    
    <item>
      <title>Components</title>
      <link>https://talos.dev/docs/v0.11/learn-more/components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/learn-more/components/</guid>
      <description>In this section, we discuss the various components that underpin Talos.
Components    Component Description     apid When interacting with Talos, the gRPC API endpoint you interact with directly is provided by apid. apid acts as the gateway for all component interactions and forwards the requests to machined.   containerd An industry-standard container runtime with an emphasis on simplicity, robustness, and portability. To learn more, see the containerd website.</description>
    </item>
    
    <item>
      <title>Components</title>
      <link>https://talos.dev/docs/v0.12/learn-more/components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/learn-more/components/</guid>
      <description>In this section, we discuss the various components that underpin Talos.
Components    Component Description     apid When interacting with Talos, the gRPC API endpoint you interact with directly is provided by apid. apid acts as the gateway for all component interactions and forwards the requests to machined.   containerd An industry-standard container runtime with an emphasis on simplicity, robustness, and portability. To learn more, see the containerd website.</description>
    </item>
    
    <item>
      <title>Components</title>
      <link>https://talos.dev/docs/v0.13/learn-more/components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/learn-more/components/</guid>
      <description>In this section, we discuss the various components that underpin Talos.
Components    Component Description     apid When interacting with Talos, the gRPC API endpoint you interact with directly is provided by apid. apid acts as the gateway for all component interactions and forwards the requests to machined.   containerd An industry-standard container runtime with an emphasis on simplicity, robustness, and portability. To learn more, see the containerd website.</description>
    </item>
    
    <item>
      <title>Components</title>
      <link>https://talos.dev/docs/v0.14/learn-more/components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/learn-more/components/</guid>
      <description>In this section, we discuss the various components that underpin Talos.
Components    Component Description     apid When interacting with Talos, the gRPC API endpoint you interact with directly is provided by apid. apid acts as the gateway for all component interactions and forwards the requests to machined.   containerd An industry-standard container runtime with an emphasis on simplicity, robustness, and portability. To learn more, see the containerd website.</description>
    </item>
    
    <item>
      <title>Components</title>
      <link>https://talos.dev/docs/v0.7/learn-more/components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/learn-more/components/</guid>
      <description>In this section we will discuss the various components of which Talos is comprised.
Components    Component Description     apid When interacting with Talos, the gRPC API endpoint you&amp;rsquo;re interact with directly is provided by apid. apid acts as the gateway for all component interactions and forwards the requests to routerd.   containerd An industry-standard container runtime with an emphasis on simplicity, robustness and portability.</description>
    </item>
    
    <item>
      <title>Components</title>
      <link>https://talos.dev/docs/v0.8/learn-more/components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/learn-more/components/</guid>
      <description>In this section we will discuss the various components of which Talos is comprised.
Components    Component Description     apid When interacting with Talos, the gRPC API endpoint you&amp;rsquo;re interact with directly is provided by apid. apid acts as the gateway for all component interactions and forwards the requests to routerd.   containerd An industry-standard container runtime with an emphasis on simplicity, robustness and portability.</description>
    </item>
    
    <item>
      <title>Components</title>
      <link>https://talos.dev/docs/v0.9/learn-more/components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/learn-more/components/</guid>
      <description>In this section, we discuss the various components that underpin Talos.
Components    Component Description     apid When interacting with Talos, the gRPC API endpoint you interact with directly is provided by apid. apid acts as the gateway for all component interactions and forwards the requests to routerd.   containerd An industry-standard container runtime with an emphasis on simplicity, robustness, and portability. To learn more, see the containerd website.</description>
    </item>
    
    <item>
      <title>Components</title>
      <link>https://talos.dev/docs/v1.0/learn-more/components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/learn-more/components/</guid>
      <description>In this section, we discuss the various components that underpin Talos.
Components    Component Description     apid When interacting with Talos, the gRPC API endpoint you interact with directly is provided by apid. apid acts as the gateway for all component interactions and forwards the requests to machined.   containerd An industry-standard container runtime with an emphasis on simplicity, robustness, and portability. To learn more, see the containerd website.</description>
    </item>
    
    <item>
      <title>FAQs</title>
      <link>https://talos.dev/docs/v0.6/learn-more/faqs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/learn-more/faqs/</guid>
      <description>How is Talos different from other container optimized Linux distros? Talos shares a lot of attributes with other distros, but there are some important differences. Talos integrates tightly with Kubernetes, and is not meant to be a general-purpose operating system. The most important difference is that Talos is fully controlled by an API via a gRPC interface, instead of an ordinary shell. We don&amp;rsquo;t ship SSH, and there is no console access.</description>
    </item>
    
    <item>
      <title>System Requirements</title>
      <link>https://talos.dev/docs/v0.10/introduction/system-requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/introduction/system-requirements/</guid>
      <description>Minimum Requirements Recommended These requirements are similar to that of kubernetes.</description>
    </item>
    
    <item>
      <title>System Requirements</title>
      <link>https://talos.dev/docs/v0.11/introduction/system-requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/introduction/system-requirements/</guid>
      <description>Minimum Requirements Recommended These requirements are similar to that of kubernetes.</description>
    </item>
    
    <item>
      <title>System Requirements</title>
      <link>https://talos.dev/docs/v0.12/introduction/system-requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/introduction/system-requirements/</guid>
      <description>Minimum Requirements Recommended These requirements are similar to that of kubernetes.</description>
    </item>
    
    <item>
      <title>System Requirements</title>
      <link>https://talos.dev/docs/v0.13/introduction/system-requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/introduction/system-requirements/</guid>
      <description>Minimum Requirements Recommended These requirements are similar to that of kubernetes.</description>
    </item>
    
    <item>
      <title>System Requirements</title>
      <link>https://talos.dev/docs/v0.14/introduction/system-requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/introduction/system-requirements/</guid>
      <description>Minimum Requirements Recommended These requirements are similar to that of kubernetes.</description>
    </item>
    
    <item>
      <title>System Requirements</title>
      <link>https://talos.dev/docs/v0.6/introduction/system-requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/introduction/system-requirements/</guid>
      <description>Minimum Requirements Recommended These requirements are similar to that of kubernetes.</description>
    </item>
    
    <item>
      <title>System Requirements</title>
      <link>https://talos.dev/docs/v0.7/introduction/system-requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/introduction/system-requirements/</guid>
      <description>Minimum Requirements Recommended These requirements are similar to that of kubernetes.</description>
    </item>
    
    <item>
      <title>System Requirements</title>
      <link>https://talos.dev/docs/v0.8/introduction/system-requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/introduction/system-requirements/</guid>
      <description>Minimum Requirements Recommended These requirements are similar to that of kubernetes.</description>
    </item>
    
    <item>
      <title>System Requirements</title>
      <link>https://talos.dev/docs/v0.9/introduction/system-requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/introduction/system-requirements/</guid>
      <description>Minimum Requirements Recommended These requirements are similar to that of kubernetes.</description>
    </item>
    
    <item>
      <title>System Requirements</title>
      <link>https://talos.dev/docs/v1.0/introduction/system-requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/introduction/system-requirements/</guid>
      <description>Minimum Requirements Recommended These requirements are similar to that of kubernetes.</description>
    </item>
    
    <item>
      <title>Upgrades</title>
      <link>https://talos.dev/docs/v0.10/learn-more/upgrades/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/learn-more/upgrades/</guid>
      <description>Talos The upgrade process for Talos, like everything else, begins with an API call. This call tells a node the installer image to use to perform the upgrade. Each Talos version corresponds to an installer with the same version, such that the version of the installer is the version of Talos which will be installed.
Because Talos is image based, even at run-time, upgrading Talos is almost exactly the same set of operations as installing Talos, with the difference that the system has already been initialized with a configuration.</description>
    </item>
    
    <item>
      <title>Upgrades</title>
      <link>https://talos.dev/docs/v0.11/learn-more/upgrades/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/learn-more/upgrades/</guid>
      <description>Talos The upgrade process for Talos, like everything else, begins with an API call. This call tells a node the installer image to use to perform the upgrade. Each Talos version corresponds to an installer with the same version, such that the version of the installer is the version of Talos which will be installed.
Because Talos is image based, even at run-time, upgrading Talos is almost exactly the same set of operations as installing Talos, with the difference that the system has already been initialized with a configuration.</description>
    </item>
    
    <item>
      <title>Upgrades</title>
      <link>https://talos.dev/docs/v0.12/learn-more/upgrades/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/learn-more/upgrades/</guid>
      <description>Talos The upgrade process for Talos, like everything else, begins with an API call. This call tells a node the installer image to use to perform the upgrade. Each Talos version corresponds to an installer with the same version, such that the version of the installer is the version of Talos which will be installed.
Because Talos is image based, even at run-time, upgrading Talos is almost exactly the same set of operations as installing Talos, with the difference that the system has already been initialized with a configuration.</description>
    </item>
    
    <item>
      <title>Upgrades</title>
      <link>https://talos.dev/docs/v0.13/learn-more/upgrades/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/learn-more/upgrades/</guid>
      <description>Talos The upgrade process for Talos, like everything else, begins with an API call. This call tells a node the installer image to use to perform the upgrade. Each Talos version corresponds to an installer with the same version, such that the version of the installer is the version of Talos which will be installed.
Because Talos is image based, even at run-time, upgrading Talos is almost exactly the same set of operations as installing Talos, with the difference that the system has already been initialized with a configuration.</description>
    </item>
    
    <item>
      <title>Upgrades</title>
      <link>https://talos.dev/docs/v0.14/learn-more/upgrades/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/learn-more/upgrades/</guid>
      <description>Talos The upgrade process for Talos, like everything else, begins with an API call. This call tells a node the installer image to use to perform the upgrade. Each Talos version corresponds to an installer with the same version, such that the version of the installer is the version of Talos which will be installed.
Because Talos is image based, even at run-time, upgrading Talos is almost exactly the same set of operations as installing Talos, with the difference that the system has already been initialized with a configuration.</description>
    </item>
    
    <item>
      <title>Upgrades</title>
      <link>https://talos.dev/docs/v0.7/learn-more/upgrades/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/learn-more/upgrades/</guid>
      <description>Talos The upgrade process for Talos, like everything else, begins with an API call. This call tells a node the installer image to use to perform the upgrade. Each Talos version corresponds to an installer with the same version, such that the version of the installer is the version of Talos which will be installed.
Because Talos is image based, even at run-time, upgrading Talos is almost exactly the same set of operations as installing Talos, with the difference that the system has already been initialized with a configuration.</description>
    </item>
    
    <item>
      <title>Upgrades</title>
      <link>https://talos.dev/docs/v0.8/learn-more/upgrades/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/learn-more/upgrades/</guid>
      <description>Talos The upgrade process for Talos, like everything else, begins with an API call. This call tells a node the installer image to use to perform the upgrade. Each Talos version corresponds to an installer with the same version, such that the version of the installer is the version of Talos which will be installed.
Because Talos is image based, even at run-time, upgrading Talos is almost exactly the same set of operations as installing Talos, with the difference that the system has already been initialized with a configuration.</description>
    </item>
    
    <item>
      <title>Upgrades</title>
      <link>https://talos.dev/docs/v0.9/learn-more/upgrades/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/learn-more/upgrades/</guid>
      <description>Talos The upgrade process for Talos, like everything else, begins with an API call. This call tells a node the installer image to use to perform the upgrade. Each Talos version corresponds to an installer with the same version, such that the version of the installer is the version of Talos which will be installed.
Because Talos is image based, even at run-time, upgrading Talos is almost exactly the same set of operations as installing Talos, with the difference that the system has already been initialized with a configuration.</description>
    </item>
    
    <item>
      <title>Upgrades</title>
      <link>https://talos.dev/docs/v1.0/learn-more/upgrades/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/learn-more/upgrades/</guid>
      <description>Talos The upgrade process for Talos, like everything else, begins with an API call. This call tells a node the installer image to use to perform the upgrade. Each Talos version corresponds to an installer with the same version, such that the version of the installer is the version of Talos which will be installed.
Because Talos is image based, even at run-time, upgrading Talos is almost exactly the same set of operations as installing Talos, with the difference that the system has already been initialized with a configuration.</description>
    </item>
    
    <item>
      <title>What&#39;s New in Talos 0.10</title>
      <link>https://talos.dev/docs/v0.10/introduction/what-is-new/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/introduction/what-is-new/</guid>
      <description>Disaster Recovery Talos now supports etcd snapshots and recovery from the snapshotted state. Periodic snapshots of etcd data can be taken with talosctl etcd snapshot command, and in case of catastrophic control plane failure etcd contents can be recovered from the latest snapshot with talosctl bootstrap --recover-from= command.
Time Synchronization The timed service was replaced with a new time sync controller without any machine configuration changes. There should be no user-visible changes in the way new time synchronization process works, logs are now available via talosctl logs controller-runtime.</description>
    </item>
    
    <item>
      <title>What&#39;s New in Talos 0.11</title>
      <link>https://talos.dev/docs/v0.11/introduction/what-is-new/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/introduction/what-is-new/</guid>
      <description>Networking Configuration Talos networking configuration was completely rewritten to be based on controllers and resources. There are no changes to the machine configuration, but any update to .machine.network can now be applied in immediate mode (without a reboot). Talos should be setting up network configuration much faster on boot now, not blocking on DHCP for unconfigured interfaces and skipping the reset network step.
Talos API RBAC Limited RBAC support in Talos API is now enabled by default for Talos 0.</description>
    </item>
    
    <item>
      <title>What&#39;s New in Talos 0.12</title>
      <link>https://talos.dev/docs/v0.12/introduction/what-is-new/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/introduction/what-is-new/</guid>
      <description>Security  etcd PKI moved to /system/secrets kubelet bootstrap CSR auto-signing scoped to kubelet bootstrap tokens only enforce default seccomp profile on all system containers run system services apid, trustd, and etcd as non-root users  Performance  machined uses less memory and CPU time more disk encryption options are exposed via the machine configuration disk partitions are now aligned properly with minimum I/O size Talos system processes are moved under proper cgroups, resource metrics are now available via the kubelet OOM score is set on the system processes making sure they are killed last under memory pressure  etcd New etcd cluster members are now joined in learner mode, which improves cluster resiliency to member join issues.</description>
    </item>
    
    <item>
      <title>What&#39;s New in Talos 0.13</title>
      <link>https://talos.dev/docs/v0.13/introduction/what-is-new/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/introduction/what-is-new/</guid>
      <description>Cluster Discovery and KubeSpan This release of Talos includes two new closely related features: cluster membership discovery and KubeSpan.
KubeSpan is a feature of Talos that automates the setup and maintenance of a full mesh WireGuard network for your cluster, giving you the ablility to operate hybrid Kubernetes clusters that can span the edge, datacenter, and cloud. Management of keys and discovery of peers can be completely automated for a zero-touch experience that makes it simple and easy to create hybrid clusters.</description>
    </item>
    
    <item>
      <title>What&#39;s New in Talos 0.14</title>
      <link>https://talos.dev/docs/v0.14/introduction/what-is-new/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/introduction/what-is-new/</guid>
      <description>Kubelet Kubelet configuration can be updated without node restart (.machine.kubelet section of machine configuration) with commands talosctl edit mc --immediate, talosctl apply-config --immediate, talosctl patch mc --immediate.
Kubelet service can now be restarted with talosctl service kubelet restart.
Kubelet node IP configuration (.machine.kubelet.nodeIP.validSubnets) can now include negative subnet matches (prefixed with !).
Kubernetes Upgrade Enhancements talosctl upgrade-k8s was improved to:
 sync all boostrap manifest resources in the Kubernetes cluster with versions bundled with current version Talos upgrade kubelet to the version of the control plane components (without node reboot)  So there is no need to update CoreDNS, Flannel container manually after running upgrade-k8s anymore.</description>
    </item>
    
    <item>
      <title>What&#39;s New in Talos 0.9</title>
      <link>https://talos.dev/docs/v0.9/introduction/what-is-new/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/introduction/what-is-new/</guid>
      <description>Control Plane as Static Pods Talos now runs the Kubernetes control plane as static pods managed via machine configuration. This change makes the bootstrap process much more stable and resilient to failures. For single control plane node clusters it eliminates bugs with the control plane being unavailable after a reboot. As the control plane configuration is managed via the Talos API, even if the control plane configuration was wrong and the API server is not available, the change can be rolled back using talosctl to bring the control plane back up.</description>
    </item>
    
    <item>
      <title>What&#39;s New in Talos 1.0</title>
      <link>https://talos.dev/docs/v1.0/introduction/what-is-new/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/introduction/what-is-new/</guid>
      <description>TBD</description>
    </item>
    
    <item>
      <title>FAQs</title>
      <link>https://talos.dev/docs/v0.10/learn-more/faqs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/learn-more/faqs/</guid>
      <description>How is Talos different from other container optimized Linux distros? Talos shares a lot of attributes with other distros, but there are some important differences. Talos integrates tightly with Kubernetes, and is not meant to be a general-purpose operating system. The most important difference is that Talos is fully controlled by an API via a gRPC interface, instead of an ordinary shell. We don&amp;rsquo;t ship SSH, and there is no console access.</description>
    </item>
    
    <item>
      <title>FAQs</title>
      <link>https://talos.dev/docs/v0.11/learn-more/faqs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/learn-more/faqs/</guid>
      <description>How is Talos different from other container optimized Linux distros? Talos shares a lot of attributes with other distros, but there are some important differences. Talos integrates tightly with Kubernetes, and is not meant to be a general-purpose operating system. The most important difference is that Talos is fully controlled by an API via a gRPC interface, instead of an ordinary shell. We don&amp;rsquo;t ship SSH, and there is no console access.</description>
    </item>
    
    <item>
      <title>FAQs</title>
      <link>https://talos.dev/docs/v0.12/learn-more/faqs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/learn-more/faqs/</guid>
      <description>How is Talos different from other container optimized Linux distros? Talos shares a lot of attributes with other distros, but there are some important differences. Talos integrates tightly with Kubernetes, and is not meant to be a general-purpose operating system. The most important difference is that Talos is fully controlled by an API via a gRPC interface, instead of an ordinary shell. We don&amp;rsquo;t ship SSH, and there is no console access.</description>
    </item>
    
    <item>
      <title>FAQs</title>
      <link>https://talos.dev/docs/v0.13/learn-more/faqs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/learn-more/faqs/</guid>
      <description>How is Talos different from other container optimized Linux distros? Talos shares a lot of attributes with other distros, but there are some important differences. Talos integrates tightly with Kubernetes, and is not meant to be a general-purpose operating system. The most important difference is that Talos is fully controlled by an API via a gRPC interface, instead of an ordinary shell. We don&amp;rsquo;t ship SSH, and there is no console access.</description>
    </item>
    
    <item>
      <title>FAQs</title>
      <link>https://talos.dev/docs/v0.14/learn-more/faqs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/learn-more/faqs/</guid>
      <description>How is Talos different from other container optimized Linux distros? Talos shares a lot of attributes with other distros, but there are some important differences. Talos integrates tightly with Kubernetes, and is not meant to be a general-purpose operating system. The most important difference is that Talos is fully controlled by an API via a gRPC interface, instead of an ordinary shell. We don&amp;rsquo;t ship SSH, and there is no console access.</description>
    </item>
    
    <item>
      <title>FAQs</title>
      <link>https://talos.dev/docs/v0.7/learn-more/faqs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/learn-more/faqs/</guid>
      <description>How is Talos different from other container optimized Linux distros? Talos shares a lot of attributes with other distros, but there are some important differences. Talos integrates tightly with Kubernetes, and is not meant to be a general-purpose operating system. The most important difference is that Talos is fully controlled by an API via a gRPC interface, instead of an ordinary shell. We don&amp;rsquo;t ship SSH, and there is no console access.</description>
    </item>
    
    <item>
      <title>FAQs</title>
      <link>https://talos.dev/docs/v0.8/learn-more/faqs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/learn-more/faqs/</guid>
      <description>How is Talos different from other container optimized Linux distros? Talos shares a lot of attributes with other distros, but there are some important differences. Talos integrates tightly with Kubernetes, and is not meant to be a general-purpose operating system. The most important difference is that Talos is fully controlled by an API via a gRPC interface, instead of an ordinary shell. We don&amp;rsquo;t ship SSH, and there is no console access.</description>
    </item>
    
    <item>
      <title>FAQs</title>
      <link>https://talos.dev/docs/v0.9/learn-more/faqs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/learn-more/faqs/</guid>
      <description>How is Talos different from other container optimized Linux distros? Talos shares a lot of attributes with other distros, but there are some important differences. Talos integrates tightly with Kubernetes, and is not meant to be a general-purpose operating system. The most important difference is that Talos is fully controlled by an API via a gRPC interface, instead of an ordinary shell. We don&amp;rsquo;t ship SSH, and there is no console access.</description>
    </item>
    
    <item>
      <title>FAQs</title>
      <link>https://talos.dev/docs/v1.0/learn-more/faqs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/learn-more/faqs/</guid>
      <description>How is Talos different from other container optimized Linux distros? Talos shares a lot of attributes with other distros, but there are some important differences. Talos integrates tightly with Kubernetes, and is not meant to be a general-purpose operating system. The most important difference is that Talos is fully controlled by an API via a gRPC interface, instead of an ordinary shell. We don&amp;rsquo;t ship SSH, and there is no console access.</description>
    </item>
    
    <item>
      <title>Support Matrix</title>
      <link>https://talos.dev/docs/v0.12/introduction/support-matrix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/introduction/support-matrix/</guid>
      <description>Talos Version 0.12 0.11     Release Date 2021-08-30 2021-07-08 (0.11.0)   End of Community Support 2021-10-12 2021-09-15   Enterprise Support offered by Talos Systems Inc.    Kubernetes 1.22, 1.21, 1.20 1.21, 1.20, 1.19   Architecture amd64, arm64    Platforms     - cloud AWS, GCP, Azure, Digital Ocean, OpenStack    - bare metal x86: BIOS, UEFI; arm64: UEFI; boot: ISO, PXE, disk image    - virtualized VMware, Hyper-V, KVM, Proxmox, Xen    - SBCs Raspberry Pi4, Banana Pi M64, Pine64, and other    - local Docker, QEMU    Cluster API     CAPI Bootstrap Provider Talos &amp;gt;= 0.</description>
    </item>
    
    <item>
      <title>Support Matrix</title>
      <link>https://talos.dev/docs/v0.13/introduction/support-matrix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/introduction/support-matrix/</guid>
      <description>Talos Version 0.13 0.12     Release Date 2021-10-12 2021-08-31 (0.12.0)   End of Community Support 0.14.0 release (2021-12-15, TBD) 2021-10-12   Enterprise Support offered by Sidero Labs Inc.    Kubernetes 1.22, 1.21, 1.20 1.22, 1.21, 1.20   Architecture amd64, arm64    Platforms     - cloud AWS, GCP, Azure, Digital Ocean, Hetzner, OpenStack, Scaleway, Vultr, Upcloud AWS, GCP, Azure, Digital Ocean, OpenStack   - bare metal x86: BIOS, UEFI; arm64: UEFI; boot: ISO, PXE, disk image    - virtualized VMware, Hyper-V, KVM, Proxmox, Xen    - SBCs Raspberry Pi4, Banana Pi M64, Pine64, and other    - local Docker, QEMU    Cluster API     CAPI Bootstrap Provider Talos &amp;gt;= 0.</description>
    </item>
    
    <item>
      <title>Support Matrix</title>
      <link>https://talos.dev/docs/v0.14/introduction/support-matrix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/introduction/support-matrix/</guid>
      <description>Talos Version 0.14 0.13     Release Date 2021-12-21 2021-10-11 (0.13.0)   End of Community Support 1.0.0 release (2022-03-27, TBD) 0.14.0 release (2021-12-21)   Enterprise Support offered by Sidero Labs Inc.    Kubernetes 1.23, 1.22, 1.21 1.22, 1.21, 1.20   Architecture amd64, arm64    Platforms     - cloud AWS, GCP, Azure, Digital Ocean, Hetzner, OpenStack, Scaleway, Vultr, Upcloud    - bare metal x86: BIOS, UEFI; arm64: UEFI; boot: ISO, PXE, disk image    - virtualized VMware, Hyper-V, KVM, Proxmox, Xen    - SBCs Raspberry Pi4, Banana Pi M64, Pine64, and other    - local Docker, QEMU    Cluster API     CAPI Bootstrap Provider Talos &amp;gt;= 0.</description>
    </item>
    
    <item>
      <title>Support Matrix</title>
      <link>https://talos.dev/docs/v1.0/introduction/support-matrix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/introduction/support-matrix/</guid>
      <description>Talos Version 0.15 0.14     Release Date 2022-03-01, TBD 2021-12-21 (0.14.0)   End of Community Support 0.16.0 release (2022-06-01, TBD) 0.15.0 release (2022-03-01, TBD)   Enterprise Support offered by Sidero Labs Inc.    Kubernetes 1.23, 1.22, 1.21 1.23, 1.22, 1.21   Architecture amd64, arm64    Platforms     - cloud AWS, GCP, Azure, Digital Ocean, Hetzner, OpenStack, Oracle Cloud, Scaleway, Vultr, Upcloud AWS, GCP, Azure, Digital Ocean, Hetzner, OpenStack, Scaleway, Vultr, Upcloud   - bare metal x86: BIOS, UEFI; arm64: UEFI; boot: ISO, PXE, disk image    - virtualized VMware, Hyper-V, KVM, Proxmox, Xen    - SBCs Banana Pi M64, Jetson Nano, Libre Computer Board ALL-H3-CC, Pine64, Pine64 Rock64, Radxa ROCK Pi 4c, Raspberry Pi 4B    - local Docker, QEMU    Cluster API     CAPI Bootstrap Provider Talos &amp;gt;= 0.</description>
    </item>
    
    <item>
      <title>talosctl</title>
      <link>https://talos.dev/docs/v0.10/learn-more/talosctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/learn-more/talosctl/</guid>
      <description>The talosctl tool packs a lot of power into a small package. It acts as a reference implementation for the Talos API, but it also handles a lot of conveniences for the use of Talos and its clusters.
Video Walkthrough To see some live examples of talosctl usage, view the following video:
Client Configuration Talosctl configuration is located in $XDG_CONFIG_HOME/talos/config.yaml if $XDG_CONFIG_HOME is defined. Otherwise it is in $HOME/.talos/config. The location can always be overridden by the TALOSCONFIG environment variable or the --talosconfig parameter.</description>
    </item>
    
    <item>
      <title>talosctl</title>
      <link>https://talos.dev/docs/v0.11/learn-more/talosctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/learn-more/talosctl/</guid>
      <description>The talosctl tool packs a lot of power into a small package. It acts as a reference implementation for the Talos API, but it also handles a lot of conveniences for the use of Talos and its clusters.
Video Walkthrough To see some live examples of talosctl usage, view the following video:
Client Configuration Talosctl configuration is located in $XDG_CONFIG_HOME/talos/config.yaml if $XDG_CONFIG_HOME is defined. Otherwise it is in $HOME/.talos/config. The location can always be overridden by the TALOSCONFIG environment variable or the --talosconfig parameter.</description>
    </item>
    
    <item>
      <title>talosctl</title>
      <link>https://talos.dev/docs/v0.12/learn-more/talosctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/learn-more/talosctl/</guid>
      <description>The talosctl tool packs a lot of power into a small package. It acts as a reference implementation for the Talos API, but it also handles a lot of conveniences for the use of Talos and its clusters.
Video Walkthrough To see some live examples of talosctl usage, view the following video:
Client Configuration Talosctl configuration is located in $XDG_CONFIG_HOME/talos/config.yaml if $XDG_CONFIG_HOME is defined. Otherwise it is in $HOME/.talos/config. The location can always be overridden by the TALOSCONFIG environment variable or the --talosconfig parameter.</description>
    </item>
    
    <item>
      <title>talosctl</title>
      <link>https://talos.dev/docs/v0.13/learn-more/talosctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/learn-more/talosctl/</guid>
      <description>The talosctl tool packs a lot of power into a small package. It acts as a reference implementation for the Talos API, but it also handles a lot of conveniences for the use of Talos and its clusters.
Video Walkthrough To see some live examples of talosctl usage, view the following video:
Client Configuration Talosctl configuration is located in $XDG_CONFIG_HOME/talos/config.yaml if $XDG_CONFIG_HOME is defined. Otherwise it is in $HOME/.talos/config. The location can always be overridden by the TALOSCONFIG environment variable or the --talosconfig parameter.</description>
    </item>
    
    <item>
      <title>talosctl</title>
      <link>https://talos.dev/docs/v0.14/learn-more/talosctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/learn-more/talosctl/</guid>
      <description>The talosctl tool packs a lot of power into a small package. It acts as a reference implementation for the Talos API, but it also handles a lot of conveniences for the use of Talos and its clusters.
Video Walkthrough To see some live examples of talosctl usage, view the following video:
Client Configuration Talosctl configuration is located in $XDG_CONFIG_HOME/talos/config.yaml if $XDG_CONFIG_HOME is defined. Otherwise it is in $HOME/.talos/config. The location can always be overridden by the TALOSCONFIG environment variable or the --talosconfig parameter.</description>
    </item>
    
    <item>
      <title>talosctl</title>
      <link>https://talos.dev/docs/v0.7/learn-more/talosctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/learn-more/talosctl/</guid>
      <description>The talosctl tool packs a lot of power into a small package. It acts as a reference implementation for the Talos API, but it also handles a lot of conveniences for the use of Talos and its clusters.
Video Walkthrough To see some live examples of talosctl usage, view the following video:
Client Configuration Talosctl configuration is located in $XDG_CONFIG_HOME/talos/config.yaml if $XDG_CONFIG_HOME is defined. Otherwise it is in $HOME/.talos/config. The location can always be overridden by the TALOSCONFIG environment variable or the --talosconfig parameter.</description>
    </item>
    
    <item>
      <title>talosctl</title>
      <link>https://talos.dev/docs/v0.8/learn-more/talosctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/learn-more/talosctl/</guid>
      <description>The talosctl tool packs a lot of power into a small package. It acts as a reference implementation for the Talos API, but it also handles a lot of conveniences for the use of Talos and its clusters.
Video Walkthrough To see some live examples of talosctl usage, view the following video:
Client Configuration Talosctl configuration is located in $XDG_CONFIG_HOME/talos/config.yaml if $XDG_CONFIG_HOME is defined. Otherwise it is in $HOME/.talos/config. The location can always be overridden by the TALOSCONFIG environment variable or the --talosconfig parameter.</description>
    </item>
    
    <item>
      <title>talosctl</title>
      <link>https://talos.dev/docs/v0.9/learn-more/talosctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/learn-more/talosctl/</guid>
      <description>The talosctl tool packs a lot of power into a small package. It acts as a reference implementation for the Talos API, but it also handles a lot of conveniences for the use of Talos and its clusters.
Video Walkthrough To see some live examples of talosctl usage, view the following video:
Client Configuration Talosctl configuration is located in $XDG_CONFIG_HOME/talos/config.yaml if $XDG_CONFIG_HOME is defined. Otherwise it is in $HOME/.talos/config. The location can always be overridden by the TALOSCONFIG environment variable or the --talosconfig parameter.</description>
    </item>
    
    <item>
      <title>talosctl</title>
      <link>https://talos.dev/docs/v1.0/learn-more/talosctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/learn-more/talosctl/</guid>
      <description>The talosctl tool packs a lot of power into a small package. It acts as a reference implementation for the Talos API, but it also handles a lot of conveniences for the use of Talos and its clusters.
Video Walkthrough To see some live examples of talosctl usage, view the following video:
Client Configuration Talosctl configuration is located in $XDG_CONFIG_HOME/talos/config.yaml if $XDG_CONFIG_HOME is defined. Otherwise it is in $HOME/.talos/config. The location can always be overridden by the TALOSCONFIG environment variable or the --talosconfig parameter.</description>
    </item>
    
    <item>
      <title>Control Plane</title>
      <link>https://talos.dev/docs/v0.10/learn-more/control-plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/learn-more/control-plane/</guid>
      <description>This guide provides details on how Talos runs and bootstraps the Kubernetes control plane.
High-level Overview Talos cluster bootstrap flow:
 The etcd service is started on control plane nodes. Instances of etcd on control plane nodes build the etcd cluster. The kubelet service is started. Control plane components are started as static pods via the kubelet, and the kube-apiserver component connects to the local (running on the same node) etcd instance.</description>
    </item>
    
    <item>
      <title>Control Plane</title>
      <link>https://talos.dev/docs/v0.11/learn-more/control-plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/learn-more/control-plane/</guid>
      <description>This guide provides details on how Talos runs and bootstraps the Kubernetes control plane.
High-level Overview Talos cluster bootstrap flow:
 The etcd service is started on control plane nodes. Instances of etcd on control plane nodes build the etcd cluster. The kubelet service is started. Control plane components are started as static pods via the kubelet, and the kube-apiserver component connects to the local (running on the same node) etcd instance.</description>
    </item>
    
    <item>
      <title>Control Plane</title>
      <link>https://talos.dev/docs/v0.12/learn-more/control-plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/learn-more/control-plane/</guid>
      <description>This guide provides details on how Talos runs and bootstraps the Kubernetes control plane.
High-level Overview Talos cluster bootstrap flow:
 The etcd service is started on control plane nodes. Instances of etcd on control plane nodes build the etcd cluster. The kubelet service is started. Control plane components are started as static pods via the kubelet, and the kube-apiserver component connects to the local (running on the same node) etcd instance.</description>
    </item>
    
    <item>
      <title>Control Plane</title>
      <link>https://talos.dev/docs/v0.13/learn-more/control-plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/learn-more/control-plane/</guid>
      <description>This guide provides details on how Talos runs and bootstraps the Kubernetes control plane.
High-level Overview Talos cluster bootstrap flow:
 The etcd service is started on control plane nodes. Instances of etcd on control plane nodes build the etcd cluster. The kubelet service is started. Control plane components are started as static pods via the kubelet, and the kube-apiserver component connects to the local (running on the same node) etcd instance.</description>
    </item>
    
    <item>
      <title>Control Plane</title>
      <link>https://talos.dev/docs/v0.14/learn-more/control-plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/learn-more/control-plane/</guid>
      <description>This guide provides details on how Talos runs and bootstraps the Kubernetes control plane.
High-level Overview Talos cluster bootstrap flow:
 The etcd service is started on control plane nodes. Instances of etcd on control plane nodes build the etcd cluster. The kubelet service is started. Control plane components are started as static pods via the kubelet, and the kube-apiserver component connects to the local (running on the same node) etcd instance.</description>
    </item>
    
    <item>
      <title>Control Plane</title>
      <link>https://talos.dev/docs/v0.9/learn-more/control-plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/learn-more/control-plane/</guid>
      <description>This guide provides details on how Talos runs and bootstraps the Kubernetes control plane.
High-level Overview Talos cluster bootstrap flow:
 The etcd service is started on control plane nodes. Instances of etcd on control plane nodes build the etcd cluster. The kubelet service is started. Control plane components are started as static pods via the kubelet, and the kube-apiserver component connects to the local (running on the same node) etcd instance.</description>
    </item>
    
    <item>
      <title>Control Plane</title>
      <link>https://talos.dev/docs/v1.0/learn-more/control-plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/learn-more/control-plane/</guid>
      <description>This guide provides details on how Talos runs and bootstraps the Kubernetes control plane.
High-level Overview Talos cluster bootstrap flow:
 The etcd service is started on control plane nodes. Instances of etcd on control plane nodes build the etcd cluster. The kubelet service is started. Control plane components are started as static pods via the kubelet, and the kube-apiserver component connects to the local (running on the same node) etcd instance.</description>
    </item>
    
    <item>
      <title>Controllers and Resources</title>
      <link>https://talos.dev/docs/v0.10/learn-more/controllers-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/learn-more/controllers-resources/</guid>
      <description>Talos implements concepts of resources and controllers to facilitate internal operations of the operating system. Talos resources and controllers are very similar to Kubernetes resources and controllers, but there are some differences. The content of this document is not required to operate Talos, but it is useful for troubleshooting.
Starting with Talos 0.9, most of the Kubernetes control plane boostrapping and operations is implemented via controllers and resources which allows Talos to be reactive to configuration changes, environment changes (e.</description>
    </item>
    
    <item>
      <title>Controllers and Resources</title>
      <link>https://talos.dev/docs/v0.11/learn-more/controllers-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/learn-more/controllers-resources/</guid>
      <description>Talos implements concepts of resources and controllers to facilitate internal operations of the operating system. Talos resources and controllers are very similar to Kubernetes resources and controllers, but there are some differences. The content of this document is not required to operate Talos, but it is useful for troubleshooting.
Starting with Talos 0.9, most of the Kubernetes control plane boostrapping and operations is implemented via controllers and resources which allows Talos to be reactive to configuration changes, environment changes (e.</description>
    </item>
    
    <item>
      <title>Controllers and Resources</title>
      <link>https://talos.dev/docs/v0.12/learn-more/controllers-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/learn-more/controllers-resources/</guid>
      <description>Talos implements concepts of resources and controllers to facilitate internal operations of the operating system. Talos resources and controllers are very similar to Kubernetes resources and controllers, but there are some differences. The content of this document is not required to operate Talos, but it is useful for troubleshooting.
Starting with Talos 0.9, most of the Kubernetes control plane boostrapping and operations is implemented via controllers and resources which allows Talos to be reactive to configuration changes, environment changes (e.</description>
    </item>
    
    <item>
      <title>Controllers and Resources</title>
      <link>https://talos.dev/docs/v0.13/learn-more/controllers-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/learn-more/controllers-resources/</guid>
      <description>Talos implements concepts of resources and controllers to facilitate internal operations of the operating system. Talos resources and controllers are very similar to Kubernetes resources and controllers, but there are some differences. The content of this document is not required to operate Talos, but it is useful for troubleshooting.
Starting with Talos 0.9, most of the Kubernetes control plane boostrapping and operations is implemented via controllers and resources which allows Talos to be reactive to configuration changes, environment changes (e.</description>
    </item>
    
    <item>
      <title>Controllers and Resources</title>
      <link>https://talos.dev/docs/v0.14/learn-more/controllers-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/learn-more/controllers-resources/</guid>
      <description>Talos implements concepts of resources and controllers to facilitate internal operations of the operating system. Talos resources and controllers are very similar to Kubernetes resources and controllers, but there are some differences. The content of this document is not required to operate Talos, but it is useful for troubleshooting.
Starting with Talos 0.9, most of the Kubernetes control plane boostrapping and operations is implemented via controllers and resources which allows Talos to be reactive to configuration changes, environment changes (e.</description>
    </item>
    
    <item>
      <title>Controllers and Resources</title>
      <link>https://talos.dev/docs/v0.9/learn-more/controllers-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/learn-more/controllers-resources/</guid>
      <description>Talos implements concepts of resources and controllers to facilitate internal operations of the operating system. Talos resources and controllers are very similar to Kubernetes resources and controllers, but there are some differences. The content of this document is not required to operate Talos, but it is useful for troubleshooting.
Starting with Talos 0.9, most of the Kubernetes control plane boostrapping and operations is implemented via controllers and resources which allows Talos to be reactive to configuration changes, environment changes (e.</description>
    </item>
    
    <item>
      <title>Controllers and Resources</title>
      <link>https://talos.dev/docs/v1.0/learn-more/controllers-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/learn-more/controllers-resources/</guid>
      <description>Talos implements concepts of resources and controllers to facilitate internal operations of the operating system. Talos resources and controllers are very similar to Kubernetes resources and controllers, but there are some differences. The content of this document is not required to operate Talos, but it is useful for troubleshooting.
Starting with Talos 0.9, most of the Kubernetes control plane boostrapping and operations is implemented via controllers and resources which allows Talos to be reactive to configuration changes, environment changes (e.</description>
    </item>
    
    <item>
      <title>Networking Resources</title>
      <link>https://talos.dev/docs/v0.11/learn-more/networking-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/learn-more/networking-resources/</guid>
      <description>Starting with version 0.11, a new implementation of the network configuration subsystem is powered by COSI. The new implementation is still using the same machine configuration file format and external sources to configure a node&amp;rsquo;s network, so there should be no difference in the way Talos works in 0.11.
The most notable change in Talos 0.11 is that all changes to machine configuration .machine.network can be applied now in immediate mode (without a reboot) via talosctl edit mc --immediate or talosctl apply-config --immediate.</description>
    </item>
    
    <item>
      <title>Networking Resources</title>
      <link>https://talos.dev/docs/v0.12/learn-more/networking-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/learn-more/networking-resources/</guid>
      <description>Starting with version 0.11, a new implementation of the network configuration subsystem is powered by COSI. The new implementation is still using the same machine configuration file format and external sources to configure a node&amp;rsquo;s network, so there should be no difference in the way Talos works in 0.11.
The most notable change in Talos 0.11 is that all changes to machine configuration .machine.network can be applied now in immediate mode (without a reboot) via talosctl edit mc --immediate or talosctl apply-config --immediate.</description>
    </item>
    
    <item>
      <title>Networking Resources</title>
      <link>https://talos.dev/docs/v0.13/learn-more/networking-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/learn-more/networking-resources/</guid>
      <description>Starting with version 0.11, a new implementation of the network configuration subsystem is powered by COSI. The new implementation is still using the same machine configuration file format and external sources to configure a node&amp;rsquo;s network, so there should be no difference in the way Talos works in 0.11.
The most notable change in Talos 0.11 is that all changes to machine configuration .machine.network can be applied now in immediate mode (without a reboot) via talosctl edit mc --immediate or talosctl apply-config --immediate.</description>
    </item>
    
    <item>
      <title>Networking Resources</title>
      <link>https://talos.dev/docs/v0.14/learn-more/networking-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/learn-more/networking-resources/</guid>
      <description>Starting with version 0.11, a new implementation of the network configuration subsystem is powered by COSI. The new implementation is still using the same machine configuration file format and external sources to configure a node&amp;rsquo;s network, so there should be no difference in the way Talos works in 0.11.
The most notable change in Talos 0.11 is that all changes to machine configuration .machine.network can be applied now in immediate mode (without a reboot) via talosctl edit mc --immediate or talosctl apply-config --immediate.</description>
    </item>
    
    <item>
      <title>Networking Resources</title>
      <link>https://talos.dev/docs/v1.0/learn-more/networking-resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/learn-more/networking-resources/</guid>
      <description>Starting with version 0.11, a new implementation of the network configuration subsystem is powered by COSI. The new implementation is still using the same machine configuration file format and external sources to configure a node&amp;rsquo;s network, so there should be no difference in the way Talos works in 0.11.
The most notable change in Talos 0.11 is that all changes to machine configuration .machine.network can be applied now in immediate mode (without a reboot) via talosctl edit mc --mode=no-reboot or talosctl apply-config --mode=no-reboot.</description>
    </item>
    
    <item>
      <title>Discovery</title>
      <link>https://talos.dev/docs/v0.13/learn-more/discovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/learn-more/discovery/</guid>
      <description>We maintain a public discovery service whereby members of your cluster can use a common and unique key to coordinate the most basic connection information (i.e. the set of possible &amp;ldquo;endpoints&amp;rdquo;, or IP:port pairs). We call this data &amp;ldquo;affiliate data.&amp;rdquo;
 Note: If KubeSpan is enabled the data has the addition of the WireGuard public key.
 Before sending data to the discovery service, Talos will encrypt the affiliate data with AES-GCM encryption and separately encrypt endpoints with AES in ECB mode so that endpoints coming from different sources can be deduplicated server-side.</description>
    </item>
    
    <item>
      <title>Discovery</title>
      <link>https://talos.dev/docs/v0.14/learn-more/discovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/learn-more/discovery/</guid>
      <description>We maintain a public discovery service whereby members of your cluster can use a common and unique key to coordinate the most basic connection information (i.e. the set of possible &amp;ldquo;endpoints&amp;rdquo;, or IP:port pairs). We call this data &amp;ldquo;affiliate data.&amp;rdquo;
 Note: If KubeSpan is enabled the data has the addition of the WireGuard public key.
 Before sending data to the discovery service, Talos will encrypt the affiliate data with AES-GCM encryption and separately encrypt endpoints with AES in ECB mode so that endpoints coming from different sources can be deduplicated server-side.</description>
    </item>
    
    <item>
      <title>Discovery</title>
      <link>https://talos.dev/docs/v1.0/learn-more/discovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/learn-more/discovery/</guid>
      <description>We maintain a public discovery service whereby members of your cluster can use a common and unique key to coordinate the most basic connection information (i.e. the set of possible &amp;ldquo;endpoints&amp;rdquo;, or IP:port pairs). We call this data &amp;ldquo;affiliate data.&amp;rdquo;
 Note: If KubeSpan is enabled the data has the addition of the WireGuard public key.
 Before sending data to the discovery service, Talos will encrypt the affiliate data with AES-GCM encryption and separately encrypt endpoints with AES in ECB mode so that endpoints coming from different sources can be deduplicated server-side.</description>
    </item>
    
    <item>
      <title>KubeSpan</title>
      <link>https://talos.dev/docs/v0.13/learn-more/kubespan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/learn-more/kubespan/</guid>
      <description>WireGuard Peer Discovery The key pieces of information needed for WireGuard generally are:
 the public key of the host you wish to connect to an IP address and port of the host you wish to connect to  The latter is really only required of one side of the pair. Once traffic is received, that information is known and updated by WireGuard automatically and internally.
For Kubernetes, though, this is not quite sufficient.</description>
    </item>
    
    <item>
      <title>KubeSpan</title>
      <link>https://talos.dev/docs/v0.14/learn-more/kubespan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/learn-more/kubespan/</guid>
      <description>WireGuard Peer Discovery The key pieces of information needed for WireGuard generally are:
 the public key of the host you wish to connect to an IP address and port of the host you wish to connect to  The latter is really only required of one side of the pair. Once traffic is received, that information is known and updated by WireGuard automatically and internally.
For Kubernetes, though, this is not quite sufficient.</description>
    </item>
    
    <item>
      <title>KubeSpan</title>
      <link>https://talos.dev/docs/v1.0/learn-more/kubespan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/learn-more/kubespan/</guid>
      <description>WireGuard Peer Discovery The key pieces of information needed for WireGuard generally are:
 the public key of the host you wish to connect to an IP address and port of the host you wish to connect to  The latter is really only required of one side of the pair. Once traffic is received, that information is known and updated by WireGuard automatically and internally.
For Kubernetes, though, this is not quite sufficient.</description>
    </item>
    
    <item>
      <title>Developing Talos</title>
      <link>https://talos.dev/docs/v0.14/learn-more/developing-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/learn-more/developing-talos/</guid>
      <description>This guide outlines steps and tricks to develop Talos operating systems and related components. The guide assumes Linux operating system on the development host. Some steps might work under Mac OS X, but using Linux is highly advised.
Prepare Check out the Talos repository.
Try running make help to see available make commands. You would need Docker and buildx installed on the host.
 Note: Usually it is better to install up to date Docker from Docker apt repositories, e.</description>
    </item>
    
    <item>
      <title>Developing Talos</title>
      <link>https://talos.dev/docs/v1.0/learn-more/developing-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/learn-more/developing-talos/</guid>
      <description>This guide outlines steps and tricks to develop Talos operating systems and related components. The guide assumes Linux operating system on the development host. Some steps might work under Mac OS X, but using Linux is highly advised.
Prepare Check out the Talos repository.
Try running make help to see available make commands. You would need Docker and buildx installed on the host.
 Note: Usually it is better to install up to date Docker from Docker apt repositories, e.</description>
    </item>
    
    <item>
      <title>Adding a proprietary kernel module to Talos Linux</title>
      <link>https://talos.dev/docs/v0.14/guides/adding-a-proprietary-kernel-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/adding-a-proprietary-kernel-module/</guid>
      <description>Patching and building the kernel image
  Clone the pkgs repository from Github and check out the revision corresponding to your version of Talos Linux
git clone https://github.com/talos-systems/pkgs pkgs &amp;amp;&amp;amp; cd pkgs git checkout v0.8.0   Clone the Linux kernel and check out the revision that pkgs uses (this can be found in kernel/kernel-prepare/pkg.yaml and it will be something like the following: https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-x.xx.x.tar.xz)
git clone https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git &amp;amp;&amp;amp; cd linux git checkout v5.</description>
    </item>
    
    <item>
      <title>Adding a proprietary kernel module to Talos Linux</title>
      <link>https://talos.dev/docs/v1.0/guides/adding-a-proprietary-kernel-module/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/adding-a-proprietary-kernel-module/</guid>
      <description>Patching and building the kernel image
  Clone the pkgs repository from Github and check out the revision corresponding to your version of Talos Linux
git clone https://github.com/talos-systems/pkgs pkgs &amp;amp;&amp;amp; cd pkgs git checkout v0.8.0   Clone the Linux kernel and check out the revision that pkgs uses (this can be found in kernel/kernel-prepare/pkg.yaml and it will be something like the following: https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-x.xx.x.tar.xz)
git clone https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git &amp;amp;&amp;amp; cd linux git checkout v5.</description>
    </item>
    
    <item>
      <title>Advanced Networking</title>
      <link>https://talos.dev/docs/v0.10/guides/advanced-networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/advanced-networking/</guid>
      <description>Static Addressing Static addressing is comprised of specifying cidr, routes ( remember to add your default gateway ), and interface. Most likely you&amp;rsquo;ll also want to define the nameservers so you have properly functioning DNS.
machine:  network:  hostname: talos  nameservers:  - 10.0.0.1  interfaces:  - interface: eth0  cidr: 10.0.0.201/8  mtu: 8765  routes:  - network: 0.0.0.0/0  gateway: 10.0.0.1  - interface: eth1  ignore: true  time:  servers:  - time.</description>
    </item>
    
    <item>
      <title>Advanced Networking</title>
      <link>https://talos.dev/docs/v0.11/guides/advanced-networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/advanced-networking/</guid>
      <description>Static Addressing Static addressing is comprised of specifying cidr, routes ( remember to add your default gateway ), and interface. Most likely you&amp;rsquo;ll also want to define the nameservers so you have properly functioning DNS.
machine:  network:  hostname: talos  nameservers:  - 10.0.0.1  interfaces:  - interface: eth0  cidr: 10.0.0.201/8  mtu: 8765  routes:  - network: 0.0.0.0/0  gateway: 10.0.0.1  - interface: eth1  ignore: true  time:  servers:  - time.</description>
    </item>
    
    <item>
      <title>Advanced Networking</title>
      <link>https://talos.dev/docs/v0.12/guides/advanced-networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/advanced-networking/</guid>
      <description>Static Addressing Static addressing is comprised of specifying addresses, routes ( remember to add your default gateway ), and interface. Most likely you&amp;rsquo;ll also want to define the nameservers so you have properly functioning DNS.
machine:  network:  hostname: talos  nameservers:  - 10.0.0.1  interfaces:  - interface: eth0  addresses:  - 10.0.0.201/8  mtu: 8765  routes:  - network: 0.0.0.0/0  gateway: 10.0.0.1  - interface: eth1  ignore: true  time:  servers:  - time.</description>
    </item>
    
    <item>
      <title>Advanced Networking</title>
      <link>https://talos.dev/docs/v0.13/guides/advanced-networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/advanced-networking/</guid>
      <description>Static Addressing Static addressing is comprised of specifying addresses, routes ( remember to add your default gateway ), and interface. Most likely you&amp;rsquo;ll also want to define the nameservers so you have properly functioning DNS.
machine:  network:  hostname: talos  nameservers:  - 10.0.0.1  interfaces:  - interface: eth0  addresses:  - 10.0.0.201/8  mtu: 8765  routes:  - network: 0.0.0.0/0  gateway: 10.0.0.1  - interface: eth1  ignore: true  time:  servers:  - time.</description>
    </item>
    
    <item>
      <title>Advanced Networking</title>
      <link>https://talos.dev/docs/v0.14/guides/advanced-networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/advanced-networking/</guid>
      <description>Static Addressing Static addressing is comprised of specifying addresses, routes ( remember to add your default gateway ), and interface. Most likely you&amp;rsquo;ll also want to define the nameservers so you have properly functioning DNS.
machine:  network:  hostname: talos  nameservers:  - 10.0.0.1  interfaces:  - interface: eth0  addresses:  - 10.0.0.201/8  mtu: 8765  routes:  - network: 0.0.0.0/0  gateway: 10.0.0.1  - interface: eth1  ignore: true  time:  servers:  - time.</description>
    </item>
    
    <item>
      <title>Advanced Networking</title>
      <link>https://talos.dev/docs/v0.6/guides/advanced-networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/guides/advanced-networking/</guid>
      <description>Static Addressing Static addressing is comprised of specifying cidr, routes ( remember to add your default gateway ), and interface. Most likely you&amp;rsquo;ll also want to define the nameservers so you have properly functioning DNS.
machine:  network:  hostname: talos  nameservers:  - 10.0.0.1  time:  servers:  - time.cloudflare.com  interfaces:  - interface: eth0  cidr: 10.0.0.201/8  mtu: 8765  routes:  - network: 0.</description>
    </item>
    
    <item>
      <title>Advanced Networking</title>
      <link>https://talos.dev/docs/v0.7/guides/advanced-networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/guides/advanced-networking/</guid>
      <description>Static Addressing Static addressing is comprised of specifying cidr, routes ( remember to add your default gateway ), and interface. Most likely you&amp;rsquo;ll also want to define the nameservers so you have properly functioning DNS.
machine:  network:  hostname: talos  nameservers:  - 10.0.0.1  time:  servers:  - time.cloudflare.com  interfaces:  - interface: eth0  cidr: 10.0.0.201/8  mtu: 8765  routes:  - network: 0.</description>
    </item>
    
    <item>
      <title>Advanced Networking</title>
      <link>https://talos.dev/docs/v0.8/guides/advanced-networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/guides/advanced-networking/</guid>
      <description>Static Addressing Static addressing is comprised of specifying cidr, routes ( remember to add your default gateway ), and interface. Most likely you&amp;rsquo;ll also want to define the nameservers so you have properly functioning DNS.
machine:  network:  hostname: talos  nameservers:  - 10.0.0.1  interfaces:  - interface: eth0  cidr: 10.0.0.201/8  mtu: 8765  routes:  - network: 0.0.0.0/0  gateway: 10.0.0.1  - interface: eth1  ignore: true  time:  servers:  - time.</description>
    </item>
    
    <item>
      <title>Advanced Networking</title>
      <link>https://talos.dev/docs/v0.9/guides/advanced-networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/advanced-networking/</guid>
      <description>Static Addressing Static addressing is comprised of specifying cidr, routes ( remember to add your default gateway ), and interface. Most likely you&amp;rsquo;ll also want to define the nameservers so you have properly functioning DNS.
machine:  network:  hostname: talos  nameservers:  - 10.0.0.1  interfaces:  - interface: eth0  cidr: 10.0.0.201/8  mtu: 8765  routes:  - network: 0.0.0.0/0  gateway: 10.0.0.1  - interface: eth1  ignore: true  time:  servers:  - time.</description>
    </item>
    
    <item>
      <title>Advanced Networking</title>
      <link>https://talos.dev/docs/v1.0/guides/advanced-networking/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/advanced-networking/</guid>
      <description>Static Addressing Static addressing is comprised of specifying addresses, routes ( remember to add your default gateway ), and interface. Most likely you&amp;rsquo;ll also want to define the nameservers so you have properly functioning DNS.
machine:  network:  hostname: talos  nameservers:  - 10.0.0.1  interfaces:  - interface: eth0  addresses:  - 10.0.0.201/8  mtu: 8765  routes:  - network: 0.0.0.0/0  gateway: 10.0.0.1  - interface: eth1  ignore: true  time:  servers:  - time.</description>
    </item>
    
    <item>
      <title>Air-gapped Environments</title>
      <link>https://talos.dev/docs/v0.10/guides/air-gapped/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/air-gapped/</guid>
      <description>In this guide we will create a Talos cluster running in an air-gapped environment with all the required images being pulled from an internal registry. We will use the QEMU provisioner available in talosctl to create a local cluster, but the same approach could be used to deploy Talos in bigger air-gapped networks.
Requirements The follow are requirements for this guide:
 Docker 18.03 or greater Requirements for the Talos QEMU cluster  Identifying Images In air-gapped environments, access to the public Internet is restricted, so Talos can&amp;rsquo;t pull images from public Docker registries (docker.</description>
    </item>
    
    <item>
      <title>Air-gapped Environments</title>
      <link>https://talos.dev/docs/v0.11/guides/air-gapped/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/air-gapped/</guid>
      <description>In this guide we will create a Talos cluster running in an air-gapped environment with all the required images being pulled from an internal registry. We will use the QEMU provisioner available in talosctl to create a local cluster, but the same approach could be used to deploy Talos in bigger air-gapped networks.
Requirements The follow are requirements for this guide:
 Docker 18.03 or greater Requirements for the Talos QEMU cluster  Identifying Images In air-gapped environments, access to the public Internet is restricted, so Talos can&amp;rsquo;t pull images from public Docker registries (docker.</description>
    </item>
    
    <item>
      <title>Air-gapped Environments</title>
      <link>https://talos.dev/docs/v0.12/guides/air-gapped/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/air-gapped/</guid>
      <description>In this guide we will create a Talos cluster running in an air-gapped environment with all the required images being pulled from an internal registry. We will use the QEMU provisioner available in talosctl to create a local cluster, but the same approach could be used to deploy Talos in bigger air-gapped networks.
Requirements The follow are requirements for this guide:
 Docker 18.03 or greater Requirements for the Talos QEMU cluster  Identifying Images In air-gapped environments, access to the public Internet is restricted, so Talos can&amp;rsquo;t pull images from public Docker registries (docker.</description>
    </item>
    
    <item>
      <title>Air-gapped Environments</title>
      <link>https://talos.dev/docs/v0.13/guides/air-gapped/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/air-gapped/</guid>
      <description>In this guide we will create a Talos cluster running in an air-gapped environment with all the required images being pulled from an internal registry. We will use the QEMU provisioner available in talosctl to create a local cluster, but the same approach could be used to deploy Talos in bigger air-gapped networks.
Requirements The follow are requirements for this guide:
 Docker 18.03 or greater Requirements for the Talos QEMU cluster  Identifying Images In air-gapped environments, access to the public Internet is restricted, so Talos can&amp;rsquo;t pull images from public Docker registries (docker.</description>
    </item>
    
    <item>
      <title>Air-gapped Environments</title>
      <link>https://talos.dev/docs/v0.14/guides/air-gapped/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/air-gapped/</guid>
      <description>In this guide we will create a Talos cluster running in an air-gapped environment with all the required images being pulled from an internal registry. We will use the QEMU provisioner available in talosctl to create a local cluster, but the same approach could be used to deploy Talos in bigger air-gapped networks.
Requirements The follow are requirements for this guide:
 Docker 18.03 or greater Requirements for the Talos QEMU cluster  Identifying Images In air-gapped environments, access to the public Internet is restricted, so Talos can&amp;rsquo;t pull images from public Docker registries (docker.</description>
    </item>
    
    <item>
      <title>Air-gapped Environments</title>
      <link>https://talos.dev/docs/v0.7/guides/air-gapped/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/guides/air-gapped/</guid>
      <description>In this guide we will create a Talos cluster running in an air-gapped environment with all the required images being pulled from an internal registry. We will use the QEMU provisioner available in talosctl to create a local cluster, but the same approach could be used to deploy Talos in bigger air-gapped networks.
Requirements The follow are requirements for this guide:
 Docker 18.03 or greater Requirements for the Talos QEMU cluster  Identifying Images In air-gapped environments, access to the public Internet is restricted, so Talos can&amp;rsquo;t pull images from public Docker registries (docker.</description>
    </item>
    
    <item>
      <title>Air-gapped Environments</title>
      <link>https://talos.dev/docs/v0.8/guides/air-gapped/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/guides/air-gapped/</guid>
      <description>In this guide we will create a Talos cluster running in an air-gapped environment with all the required images being pulled from an internal registry. We will use the QEMU provisioner available in talosctl to create a local cluster, but the same approach could be used to deploy Talos in bigger air-gapped networks.
Requirements The follow are requirements for this guide:
 Docker 18.03 or greater Requirements for the Talos QEMU cluster  Identifying Images In air-gapped environments, access to the public Internet is restricted, so Talos can&amp;rsquo;t pull images from public Docker registries (docker.</description>
    </item>
    
    <item>
      <title>Air-gapped Environments</title>
      <link>https://talos.dev/docs/v0.9/guides/air-gapped/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/air-gapped/</guid>
      <description>In this guide we will create a Talos cluster running in an air-gapped environment with all the required images being pulled from an internal registry. We will use the QEMU provisioner available in talosctl to create a local cluster, but the same approach could be used to deploy Talos in bigger air-gapped networks.
Requirements The follow are requirements for this guide:
 Docker 18.03 or greater Requirements for the Talos QEMU cluster  Identifying Images In air-gapped environments, access to the public Internet is restricted, so Talos can&amp;rsquo;t pull images from public Docker registries (docker.</description>
    </item>
    
    <item>
      <title>Air-gapped Environments</title>
      <link>https://talos.dev/docs/v1.0/guides/air-gapped/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/air-gapped/</guid>
      <description>In this guide we will create a Talos cluster running in an air-gapped environment with all the required images being pulled from an internal registry. We will use the QEMU provisioner available in talosctl to create a local cluster, but the same approach could be used to deploy Talos in bigger air-gapped networks.
Requirements The follow are requirements for this guide:
 Docker 18.03 or greater Requirements for the Talos QEMU cluster  Identifying Images In air-gapped environments, access to the public Internet is restricted, so Talos can&amp;rsquo;t pull images from public Docker registries (docker.</description>
    </item>
    
    <item>
      <title>AWS</title>
      <link>https://talos.dev/docs/v0.10/cloud-platforms/aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/cloud-platforms/aws/</guid>
      <description>Creating a Cluster via the AWS CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We assume an existing VPC, and some familiarity with AWS. If you need more information on AWS specifics, please see the official AWS documentation.
Create the Subnet aws ec2 create-subnet \  --region $REGION \  --vpc-id $VPC \  --cidr-block ${CIDR_BLOCK} Create the AMI Prepare the Import Prerequisites Create the S3 Bucket aws s3api create-bucket \  --bucket $BUCKET \  --create-bucket-configuration LocationConstraint=$REGION \  --acl private Create the vmimport Role In order to create an AMI, ensure that the vmimport role exists as described in the official AWS documentation.</description>
    </item>
    
    <item>
      <title>AWS</title>
      <link>https://talos.dev/docs/v0.11/cloud-platforms/aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/cloud-platforms/aws/</guid>
      <description>Creating a Cluster via the AWS CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We assume an existing VPC, and some familiarity with AWS. If you need more information on AWS specifics, please see the official AWS documentation.
Create the Subnet aws ec2 create-subnet \  --region $REGION \  --vpc-id $VPC \  --cidr-block ${CIDR_BLOCK} Create the AMI Prepare the Import Prerequisites Create the S3 Bucket aws s3api create-bucket \  --bucket $BUCKET \  --create-bucket-configuration LocationConstraint=$REGION \  --acl private Create the vmimport Role In order to create an AMI, ensure that the vmimport role exists as described in the official AWS documentation.</description>
    </item>
    
    <item>
      <title>AWS</title>
      <link>https://talos.dev/docs/v0.12/cloud-platforms/aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/cloud-platforms/aws/</guid>
      <description>Official AMI Images Official AMI image ID can be found in the cloud-images.json file attached to the Talos release:
curl -sL https://github.com/talos-systems/talos/releases/download/v0.12.0/cloud-images.json | \  jq -r &amp;#39;.[] | select(.region == &amp;#34;us-east-1&amp;#34;) | select (.arch == &amp;#34;amd64&amp;#34;) | .id&amp;#39; Replace us-east-1 and amd64 in the line above with the desired region and architecture.
Creating a Cluster via the AWS CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes.</description>
    </item>
    
    <item>
      <title>AWS</title>
      <link>https://talos.dev/docs/v0.13/cloud-platforms/aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/cloud-platforms/aws/</guid>
      <description>Official AMI Images Official AMI image ID can be found in the cloud-images.json file attached to the Talos release:
curl -sL https://github.com/talos-systems/talos/releases/download/v0.13.0/cloud-images.json | \  jq -r &amp;#39;.[] | select(.region == &amp;#34;us-east-1&amp;#34;) | select (.arch == &amp;#34;amd64&amp;#34;) | .id&amp;#39; Replace us-east-1 and amd64 in the line above with the desired region and architecture.
Creating a Cluster via the AWS CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes.</description>
    </item>
    
    <item>
      <title>AWS</title>
      <link>https://talos.dev/docs/v0.14/cloud-platforms/aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/cloud-platforms/aws/</guid>
      <description>Official AMI Images Official AMI image ID can be found in the cloud-images.json file attached to the Talos release:
curl -sL https://github.com/talos-systems/talos/releases/download/v0.14.0/cloud-images.json | \  jq -r &amp;#39;.[] | select(.region == &amp;#34;us-east-1&amp;#34;) | select (.arch == &amp;#34;amd64&amp;#34;) | .id&amp;#39; Replace us-east-1 and amd64 in the line above with the desired region and architecture.
Creating a Cluster via the AWS CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes.</description>
    </item>
    
    <item>
      <title>AWS</title>
      <link>https://talos.dev/docs/v0.6/cloud-platforms/aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/cloud-platforms/aws/</guid>
      <description>Creating a Cluster via the AWS CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We assume an existing VPC, and some familiarity with AWS. If you need more information on AWS specifics, please see the official AWS documentation.
Create the Subnet aws ec2 create-subnet \  --region $REGION \  --vpc-id $VPC \  --cidr-block ${CIDR_BLOCK} Create the AMI Prepare the Import Prerequisites Create the S3 Bucket aws s3api create-bucket \  --bucket $BUCKET \  --create-bucket-configuration LocationConstraint=$REGION \  --acl private Create the vmimport Role In order to create an AMI, ensure that the vmimport role exists as described in the official AWS documentation.</description>
    </item>
    
    <item>
      <title>AWS</title>
      <link>https://talos.dev/docs/v0.7/cloud-platforms/aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/cloud-platforms/aws/</guid>
      <description>Creating a Cluster via the AWS CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We assume an existing VPC, and some familiarity with AWS. If you need more information on AWS specifics, please see the official AWS documentation.
Create the Subnet aws ec2 create-subnet \  --region $REGION \  --vpc-id $VPC \  --cidr-block ${CIDR_BLOCK} Create the AMI Prepare the Import Prerequisites Create the S3 Bucket aws s3api create-bucket \  --bucket $BUCKET \  --create-bucket-configuration LocationConstraint=$REGION \  --acl private Create the vmimport Role In order to create an AMI, ensure that the vmimport role exists as described in the official AWS documentation.</description>
    </item>
    
    <item>
      <title>AWS</title>
      <link>https://talos.dev/docs/v0.8/cloud-platforms/aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/cloud-platforms/aws/</guid>
      <description>Creating a Cluster via the AWS CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We assume an existing VPC, and some familiarity with AWS. If you need more information on AWS specifics, please see the official AWS documentation.
Create the Subnet aws ec2 create-subnet \  --region $REGION \  --vpc-id $VPC \  --cidr-block ${CIDR_BLOCK} Create the AMI Prepare the Import Prerequisites Create the S3 Bucket aws s3api create-bucket \  --bucket $BUCKET \  --create-bucket-configuration LocationConstraint=$REGION \  --acl private Create the vmimport Role In order to create an AMI, ensure that the vmimport role exists as described in the official AWS documentation.</description>
    </item>
    
    <item>
      <title>AWS</title>
      <link>https://talos.dev/docs/v0.9/cloud-platforms/aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/cloud-platforms/aws/</guid>
      <description>Creating a Cluster via the AWS CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We assume an existing VPC, and some familiarity with AWS. If you need more information on AWS specifics, please see the official AWS documentation.
Create the Subnet aws ec2 create-subnet \  --region $REGION \  --vpc-id $VPC \  --cidr-block ${CIDR_BLOCK} Create the AMI Prepare the Import Prerequisites Create the S3 Bucket aws s3api create-bucket \  --bucket $BUCKET \  --create-bucket-configuration LocationConstraint=$REGION \  --acl private Create the vmimport Role In order to create an AMI, ensure that the vmimport role exists as described in the official AWS documentation.</description>
    </item>
    
    <item>
      <title>AWS</title>
      <link>https://talos.dev/docs/v1.0/cloud-platforms/aws/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/cloud-platforms/aws/</guid>
      <description>Official AMI Images Official AMI image ID can be found in the cloud-images.json file attached to the Talos release:
curl -sL https://github.com/talos-systems/talos/releases/download/v0.15.0/cloud-images.json | \  jq -r &amp;#39;.[] | select(.region == &amp;#34;us-east-1&amp;#34;) | select (.arch == &amp;#34;amd64&amp;#34;) | .id&amp;#39; Replace us-east-1 and amd64 in the line above with the desired region and architecture.
Creating a Cluster via the AWS CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes.</description>
    </item>
    
    <item>
      <title>Azure</title>
      <link>https://talos.dev/docs/v0.10/cloud-platforms/azure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/cloud-platforms/azure/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume existing Blob Storage, and some familiarity with Azure. If you need more information on Azure specifics, please see the official Azure documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.
# Storage account to use export STORAGE_ACCOUNT=&amp;#34;StorageAccountName&amp;#34;  # Storage container to upload to export STORAGE_CONTAINER=&amp;#34;StorageContainerName&amp;#34;  # Resource group name export GROUP=&amp;#34;ResourceGroupName&amp;#34;  # Location export LOCATION=&amp;#34;centralus&amp;#34;  # Get storage account connection string based on info above export CONNECTION=$(az storage account show-connection-string \  -n $STORAGE_ACCOUNT \  -g $GROUP \  -o tsv) Create the Image First, download the Azure image from a Talos release.</description>
    </item>
    
    <item>
      <title>Azure</title>
      <link>https://talos.dev/docs/v0.11/cloud-platforms/azure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/cloud-platforms/azure/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume existing Blob Storage, and some familiarity with Azure. If you need more information on Azure specifics, please see the official Azure documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.
# Storage account to use export STORAGE_ACCOUNT=&amp;#34;StorageAccountName&amp;#34;  # Storage container to upload to export STORAGE_CONTAINER=&amp;#34;StorageContainerName&amp;#34;  # Resource group name export GROUP=&amp;#34;ResourceGroupName&amp;#34;  # Location export LOCATION=&amp;#34;centralus&amp;#34;  # Get storage account connection string based on info above export CONNECTION=$(az storage account show-connection-string \  -n $STORAGE_ACCOUNT \  -g $GROUP \  -o tsv) Create the Image First, download the Azure image from a Talos release.</description>
    </item>
    
    <item>
      <title>Azure</title>
      <link>https://talos.dev/docs/v0.12/cloud-platforms/azure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/cloud-platforms/azure/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume existing Blob Storage, and some familiarity with Azure. If you need more information on Azure specifics, please see the official Azure documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.
# Storage account to use export STORAGE_ACCOUNT=&amp;#34;StorageAccountName&amp;#34;  # Storage container to upload to export STORAGE_CONTAINER=&amp;#34;StorageContainerName&amp;#34;  # Resource group name export GROUP=&amp;#34;ResourceGroupName&amp;#34;  # Location export LOCATION=&amp;#34;centralus&amp;#34;  # Get storage account connection string based on info above export CONNECTION=$(az storage account show-connection-string \  -n $STORAGE_ACCOUNT \  -g $GROUP \  -o tsv) Create the Image First, download the Azure image from a Talos release.</description>
    </item>
    
    <item>
      <title>Azure</title>
      <link>https://talos.dev/docs/v0.13/cloud-platforms/azure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/cloud-platforms/azure/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume existing Blob Storage, and some familiarity with Azure. If you need more information on Azure specifics, please see the official Azure documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.
# Storage account to use export STORAGE_ACCOUNT=&amp;#34;StorageAccountName&amp;#34;  # Storage container to upload to export STORAGE_CONTAINER=&amp;#34;StorageContainerName&amp;#34;  # Resource group name export GROUP=&amp;#34;ResourceGroupName&amp;#34;  # Location export LOCATION=&amp;#34;centralus&amp;#34;  # Get storage account connection string based on info above export CONNECTION=$(az storage account show-connection-string \  -n $STORAGE_ACCOUNT \  -g $GROUP \  -o tsv) Create the Image First, download the Azure image from a Talos release.</description>
    </item>
    
    <item>
      <title>Azure</title>
      <link>https://talos.dev/docs/v0.14/cloud-platforms/azure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/cloud-platforms/azure/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume existing Blob Storage, and some familiarity with Azure. If you need more information on Azure specifics, please see the official Azure documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.
# Storage account to use export STORAGE_ACCOUNT=&amp;#34;StorageAccountName&amp;#34;  # Storage container to upload to export STORAGE_CONTAINER=&amp;#34;StorageContainerName&amp;#34;  # Resource group name export GROUP=&amp;#34;ResourceGroupName&amp;#34;  # Location export LOCATION=&amp;#34;centralus&amp;#34;  # Get storage account connection string based on info above export CONNECTION=$(az storage account show-connection-string \  -n $STORAGE_ACCOUNT \  -g $GROUP \  -o tsv) Create the Image First, download the Azure image from a Talos release.</description>
    </item>
    
    <item>
      <title>Azure</title>
      <link>https://talos.dev/docs/v0.6/cloud-platforms/azure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/cloud-platforms/azure/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume existing Blob Storage, and some familiarity with Azure. If you need more information on Azure specifics, please see the official Azure documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.
# Storage account to use export STORAGE_ACCOUNT=&amp;#34;StorageAccountName&amp;#34;  # Storage container to upload to export STORAGE_CONTAINER=&amp;#34;StorageContainerName&amp;#34;  # Resource group name export GROUP=&amp;#34;ResourceGroupName&amp;#34;  # Location export LOCATION=&amp;#34;centralus&amp;#34;  # Get storage account connection string based on info above export CONNECTION=$(az storage account show-connection-string \  -n $STORAGE_ACCOUNT \  -g $GROUP \  -o tsv) Create the Image First, download the Azure image from a Talos release.</description>
    </item>
    
    <item>
      <title>Azure</title>
      <link>https://talos.dev/docs/v0.7/cloud-platforms/azure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/cloud-platforms/azure/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume existing Blob Storage, and some familiarity with Azure. If you need more information on Azure specifics, please see the official Azure documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.
# Storage account to use export STORAGE_ACCOUNT=&amp;#34;StorageAccountName&amp;#34;  # Storage container to upload to export STORAGE_CONTAINER=&amp;#34;StorageContainerName&amp;#34;  # Resource group name export GROUP=&amp;#34;ResourceGroupName&amp;#34;  # Location export LOCATION=&amp;#34;centralus&amp;#34;  # Get storage account connection string based on info above export CONNECTION=$(az storage account show-connection-string \  -n $STORAGE_ACCOUNT \  -g $GROUP \  -o tsv) Create the Image First, download the Azure image from a Talos release.</description>
    </item>
    
    <item>
      <title>Azure</title>
      <link>https://talos.dev/docs/v0.8/cloud-platforms/azure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/cloud-platforms/azure/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume existing Blob Storage, and some familiarity with Azure. If you need more information on Azure specifics, please see the official Azure documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.
# Storage account to use export STORAGE_ACCOUNT=&amp;#34;StorageAccountName&amp;#34;  # Storage container to upload to export STORAGE_CONTAINER=&amp;#34;StorageContainerName&amp;#34;  # Resource group name export GROUP=&amp;#34;ResourceGroupName&amp;#34;  # Location export LOCATION=&amp;#34;centralus&amp;#34;  # Get storage account connection string based on info above export CONNECTION=$(az storage account show-connection-string \  -n $STORAGE_ACCOUNT \  -g $GROUP \  -o tsv) Create the Image First, download the Azure image from a Talos release.</description>
    </item>
    
    <item>
      <title>Azure</title>
      <link>https://talos.dev/docs/v0.9/cloud-platforms/azure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/cloud-platforms/azure/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume existing Blob Storage, and some familiarity with Azure. If you need more information on Azure specifics, please see the official Azure documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.
# Storage account to use export STORAGE_ACCOUNT=&amp;#34;StorageAccountName&amp;#34;  # Storage container to upload to export STORAGE_CONTAINER=&amp;#34;StorageContainerName&amp;#34;  # Resource group name export GROUP=&amp;#34;ResourceGroupName&amp;#34;  # Location export LOCATION=&amp;#34;centralus&amp;#34;  # Get storage account connection string based on info above export CONNECTION=$(az storage account show-connection-string \  -n $STORAGE_ACCOUNT \  -g $GROUP \  -o tsv) Create the Image First, download the Azure image from a Talos release.</description>
    </item>
    
    <item>
      <title>Azure</title>
      <link>https://talos.dev/docs/v1.0/cloud-platforms/azure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/cloud-platforms/azure/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume existing Blob Storage, and some familiarity with Azure. If you need more information on Azure specifics, please see the official Azure documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.
# Storage account to use export STORAGE_ACCOUNT=&amp;#34;StorageAccountName&amp;#34;  # Storage container to upload to export STORAGE_CONTAINER=&amp;#34;StorageContainerName&amp;#34;  # Resource group name export GROUP=&amp;#34;ResourceGroupName&amp;#34;  # Location export LOCATION=&amp;#34;centralus&amp;#34;  # Get storage account connection string based on info above export CONNECTION=$(az storage account show-connection-string \  -n $STORAGE_ACCOUNT \  -g $GROUP \  -o tsv) Create the Image First, download the Azure image from a Talos release.</description>
    </item>
    
    <item>
      <title>Banana Pi M64</title>
      <link>https://talos.dev/docs/v0.10/single-board-computers/bananapi_m64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/single-board-computers/bananapi_m64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-bananapi_m64-arm64.img.xz xz -d metal-bananapi_m64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Banana Pi M64</title>
      <link>https://talos.dev/docs/v0.11/single-board-computers/bananapi_m64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/single-board-computers/bananapi_m64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-bananapi_m64-arm64.img.xz xz -d metal-bananapi_m64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Banana Pi M64</title>
      <link>https://talos.dev/docs/v0.12/single-board-computers/bananapi_m64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/single-board-computers/bananapi_m64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-bananapi_m64-arm64.img.xz xz -d metal-bananapi_m64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Banana Pi M64</title>
      <link>https://talos.dev/docs/v0.13/single-board-computers/bananapi_m64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/single-board-computers/bananapi_m64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-bananapi_m64-arm64.img.xz xz -d metal-bananapi_m64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Banana Pi M64</title>
      <link>https://talos.dev/docs/v0.14/single-board-computers/bananapi_m64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/single-board-computers/bananapi_m64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-bananapi_m64-arm64.img.xz xz -d metal-bananapi_m64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Banana Pi M64</title>
      <link>https://talos.dev/docs/v0.8/single-board-computers/bananapi_m64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/single-board-computers/bananapi_m64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/download/v0.8.4/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/download/v0.8.4/metal-bananapi_m64-arm64.img.xz xz -d metal-bananapi_m64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on Mac OS. In this example we will assume /dev/mmcblk0.</description>
    </item>
    
    <item>
      <title>Banana Pi M64</title>
      <link>https://talos.dev/docs/v0.9/single-board-computers/bananapi_m64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/single-board-computers/bananapi_m64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-bananapi_m64-arm64.img.xz xz -d metal-bananapi_m64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on Mac OS. In this example we will assume /dev/mmcblk0.</description>
    </item>
    
    <item>
      <title>Banana Pi M64</title>
      <link>https://talos.dev/docs/v1.0/single-board-computers/bananapi_m64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/single-board-computers/bananapi_m64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-bananapi_m64-arm64.img.xz xz -d metal-bananapi_m64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Configuring Certificate Authorities</title>
      <link>https://talos.dev/docs/v0.10/guides/configuring-certificate-authorities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/configuring-certificate-authorities/</guid>
      <description>Appending the Certificate Authority Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append </description>
    </item>
    
    <item>
      <title>Configuring Certificate Authorities</title>
      <link>https://talos.dev/docs/v0.11/guides/configuring-certificate-authorities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/configuring-certificate-authorities/</guid>
      <description>Appending the Certificate Authority Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append </description>
    </item>
    
    <item>
      <title>Configuring Certificate Authorities</title>
      <link>https://talos.dev/docs/v0.12/guides/configuring-certificate-authorities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/configuring-certificate-authorities/</guid>
      <description>Appending the Certificate Authority Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append </description>
    </item>
    
    <item>
      <title>Configuring Certificate Authorities</title>
      <link>https://talos.dev/docs/v0.13/guides/configuring-certificate-authorities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/configuring-certificate-authorities/</guid>
      <description>Appending the Certificate Authority Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append </description>
    </item>
    
    <item>
      <title>Configuring Certificate Authorities</title>
      <link>https://talos.dev/docs/v0.14/guides/configuring-certificate-authorities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/configuring-certificate-authorities/</guid>
      <description>Appending the Certificate Authority Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append </description>
    </item>
    
    <item>
      <title>Configuring Certificate Authorities</title>
      <link>https://talos.dev/docs/v0.8/guides/configuring-certificate-authorities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/guides/configuring-certificate-authorities/</guid>
      <description>Appending the Certificate Authority Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append </description>
    </item>
    
    <item>
      <title>Configuring Certificate Authorities</title>
      <link>https://talos.dev/docs/v0.9/guides/configuring-certificate-authorities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/configuring-certificate-authorities/</guid>
      <description>Appending the Certificate Authority Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append </description>
    </item>
    
    <item>
      <title>Configuring Certificate Authorities</title>
      <link>https://talos.dev/docs/v1.0/guides/configuring-certificate-authorities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/configuring-certificate-authorities/</guid>
      <description>Appending the Certificate Authority Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append </description>
    </item>
    
    <item>
      <title>Configuring Containerd</title>
      <link>https://talos.dev/docs/v0.10/guides/configuring-containerd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/configuring-containerd/</guid>
      <description>The base containerd configuration expects to merge in any additional configs present in /var/cri/conf.d/*.toml.
An example of exposing metrics Into each machine config, add the following:
machine:  ...  files:  - content: |[metrics] address = &amp;#34;0.0.0.0:11234&amp;#34;  path: /var/cri/conf.d/metrics.toml  op: create Create cluster like normal and see that metrics are now present on this port:
$ curl 127.0.0.1:11234/v1/metrics # HELP container_blkio_io_service_bytes_recursive_bytes The blkio io service bytes recursive # TYPE container_blkio_io_service_bytes_recursive_bytes gauge container_blkio_io_service_bytes_recursive_bytes{container_id=&amp;#34;0677d73196f5f4be1d408aab1c4125cf9e6c458a4bea39e590ac779709ffbe14&amp;#34;,device=&amp;#34;/dev/dm-0&amp;#34;,major=&amp;#34;253&amp;#34;,minor=&amp;#34;0&amp;#34;,namespace=&amp;#34;k8s.</description>
    </item>
    
    <item>
      <title>Configuring Containerd</title>
      <link>https://talos.dev/docs/v0.11/guides/configuring-containerd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/configuring-containerd/</guid>
      <description>The base containerd configuration expects to merge in any additional configs present in /var/cri/conf.d/*.toml.
An example of exposing metrics Into each machine config, add the following:
machine:  ...  files:  - content: |[metrics] address = &amp;#34;0.0.0.0:11234&amp;#34;  path: /var/cri/conf.d/metrics.toml  op: create Create cluster like normal and see that metrics are now present on this port:
$ curl 127.0.0.1:11234/v1/metrics # HELP container_blkio_io_service_bytes_recursive_bytes The blkio io service bytes recursive # TYPE container_blkio_io_service_bytes_recursive_bytes gauge container_blkio_io_service_bytes_recursive_bytes{container_id=&amp;#34;0677d73196f5f4be1d408aab1c4125cf9e6c458a4bea39e590ac779709ffbe14&amp;#34;,device=&amp;#34;/dev/dm-0&amp;#34;,major=&amp;#34;253&amp;#34;,minor=&amp;#34;0&amp;#34;,namespace=&amp;#34;k8s.</description>
    </item>
    
    <item>
      <title>Configuring Containerd</title>
      <link>https://talos.dev/docs/v0.12/guides/configuring-containerd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/configuring-containerd/</guid>
      <description>The base containerd configuration expects to merge in any additional configs present in /var/cri/conf.d/*.toml.
An example of exposing metrics Into each machine config, add the following:
machine:  ...  files:  - content: |[metrics] address = &amp;#34;0.0.0.0:11234&amp;#34;  path: /var/cri/conf.d/metrics.toml  op: create Create cluster like normal and see that metrics are now present on this port:
$ curl 127.0.0.1:11234/v1/metrics # HELP container_blkio_io_service_bytes_recursive_bytes The blkio io service bytes recursive # TYPE container_blkio_io_service_bytes_recursive_bytes gauge container_blkio_io_service_bytes_recursive_bytes{container_id=&amp;#34;0677d73196f5f4be1d408aab1c4125cf9e6c458a4bea39e590ac779709ffbe14&amp;#34;,device=&amp;#34;/dev/dm-0&amp;#34;,major=&amp;#34;253&amp;#34;,minor=&amp;#34;0&amp;#34;,namespace=&amp;#34;k8s.</description>
    </item>
    
    <item>
      <title>Configuring Containerd</title>
      <link>https://talos.dev/docs/v0.13/guides/configuring-containerd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/configuring-containerd/</guid>
      <description>The base containerd configuration expects to merge in any additional configs present in /var/cri/conf.d/*.toml.
An example of exposing metrics Into each machine config, add the following:
machine:  ...  files:  - content: |[metrics] address = &amp;#34;0.0.0.0:11234&amp;#34;  path: /var/cri/conf.d/metrics.toml  op: create Create cluster like normal and see that metrics are now present on this port:
$ curl 127.0.0.1:11234/v1/metrics # HELP container_blkio_io_service_bytes_recursive_bytes The blkio io service bytes recursive # TYPE container_blkio_io_service_bytes_recursive_bytes gauge container_blkio_io_service_bytes_recursive_bytes{container_id=&amp;#34;0677d73196f5f4be1d408aab1c4125cf9e6c458a4bea39e590ac779709ffbe14&amp;#34;,device=&amp;#34;/dev/dm-0&amp;#34;,major=&amp;#34;253&amp;#34;,minor=&amp;#34;0&amp;#34;,namespace=&amp;#34;k8s.</description>
    </item>
    
    <item>
      <title>Configuring Containerd</title>
      <link>https://talos.dev/docs/v0.14/guides/configuring-containerd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/configuring-containerd/</guid>
      <description>The base containerd configuration expects to merge in any additional configs present in /var/cri/conf.d/*.toml.
An example of exposing metrics Into each machine config, add the following:
machine:  ...  files:  - content: |[metrics] address = &amp;#34;0.0.0.0:11234&amp;#34;  path: /var/cri/conf.d/metrics.toml  op: create Create cluster like normal and see that metrics are now present on this port:
$ curl 127.0.0.1:11234/v1/metrics # HELP container_blkio_io_service_bytes_recursive_bytes The blkio io service bytes recursive # TYPE container_blkio_io_service_bytes_recursive_bytes gauge container_blkio_io_service_bytes_recursive_bytes{container_id=&amp;#34;0677d73196f5f4be1d408aab1c4125cf9e6c458a4bea39e590ac779709ffbe14&amp;#34;,device=&amp;#34;/dev/dm-0&amp;#34;,major=&amp;#34;253&amp;#34;,minor=&amp;#34;0&amp;#34;,namespace=&amp;#34;k8s.</description>
    </item>
    
    <item>
      <title>Configuring Containerd</title>
      <link>https://talos.dev/docs/v0.6/guides/configuring-containerd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/guides/configuring-containerd/</guid>
      <description>The base containerd configuration expects to merge in any additional configs present in /var/cri/conf.d/*.toml.
An example of exposing metrics Into each machine config, add the following:
machine:  ...  files:  - content: |[metrics] address = &amp;#34;0.0.0.0:11234&amp;#34;  path: /var/cri/conf.d/metrics.toml  op: create Create cluster like normal and see that metrics are now present on this port:
$ curl 127.0.0.1:11234/v1/metrics # HELP container_blkio_io_service_bytes_recursive_bytes The blkio io service bytes recursive # TYPE container_blkio_io_service_bytes_recursive_bytes gauge container_blkio_io_service_bytes_recursive_bytes{container_id=&amp;#34;0677d73196f5f4be1d408aab1c4125cf9e6c458a4bea39e590ac779709ffbe14&amp;#34;,device=&amp;#34;/dev/dm-0&amp;#34;,major=&amp;#34;253&amp;#34;,minor=&amp;#34;0&amp;#34;,namespace=&amp;#34;k8s.</description>
    </item>
    
    <item>
      <title>Configuring Containerd</title>
      <link>https://talos.dev/docs/v0.7/guides/configuring-containerd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/guides/configuring-containerd/</guid>
      <description>The base containerd configuration expects to merge in any additional configs present in /var/cri/conf.d/*.toml.
An example of exposing metrics Into each machine config, add the following:
machine:  ...  files:  - content: |[metrics] address = &amp;#34;0.0.0.0:11234&amp;#34;  path: /var/cri/conf.d/metrics.toml  op: create Create cluster like normal and see that metrics are now present on this port:
$ curl 127.0.0.1:11234/v1/metrics # HELP container_blkio_io_service_bytes_recursive_bytes The blkio io service bytes recursive # TYPE container_blkio_io_service_bytes_recursive_bytes gauge container_blkio_io_service_bytes_recursive_bytes{container_id=&amp;#34;0677d73196f5f4be1d408aab1c4125cf9e6c458a4bea39e590ac779709ffbe14&amp;#34;,device=&amp;#34;/dev/dm-0&amp;#34;,major=&amp;#34;253&amp;#34;,minor=&amp;#34;0&amp;#34;,namespace=&amp;#34;k8s.</description>
    </item>
    
    <item>
      <title>Configuring Containerd</title>
      <link>https://talos.dev/docs/v0.8/guides/configuring-containerd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/guides/configuring-containerd/</guid>
      <description>The base containerd configuration expects to merge in any additional configs present in /var/cri/conf.d/*.toml.
An example of exposing metrics Into each machine config, add the following:
machine:  ...  files:  - content: |[metrics] address = &amp;#34;0.0.0.0:11234&amp;#34;  path: /var/cri/conf.d/metrics.toml  op: create Create cluster like normal and see that metrics are now present on this port:
$ curl 127.0.0.1:11234/v1/metrics # HELP container_blkio_io_service_bytes_recursive_bytes The blkio io service bytes recursive # TYPE container_blkio_io_service_bytes_recursive_bytes gauge container_blkio_io_service_bytes_recursive_bytes{container_id=&amp;#34;0677d73196f5f4be1d408aab1c4125cf9e6c458a4bea39e590ac779709ffbe14&amp;#34;,device=&amp;#34;/dev/dm-0&amp;#34;,major=&amp;#34;253&amp;#34;,minor=&amp;#34;0&amp;#34;,namespace=&amp;#34;k8s.</description>
    </item>
    
    <item>
      <title>Configuring Containerd</title>
      <link>https://talos.dev/docs/v0.9/guides/configuring-containerd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/configuring-containerd/</guid>
      <description>The base containerd configuration expects to merge in any additional configs present in /var/cri/conf.d/*.toml.
An example of exposing metrics Into each machine config, add the following:
machine:  ...  files:  - content: |[metrics] address = &amp;#34;0.0.0.0:11234&amp;#34;  path: /var/cri/conf.d/metrics.toml  op: create Create cluster like normal and see that metrics are now present on this port:
$ curl 127.0.0.1:11234/v1/metrics # HELP container_blkio_io_service_bytes_recursive_bytes The blkio io service bytes recursive # TYPE container_blkio_io_service_bytes_recursive_bytes gauge container_blkio_io_service_bytes_recursive_bytes{container_id=&amp;#34;0677d73196f5f4be1d408aab1c4125cf9e6c458a4bea39e590ac779709ffbe14&amp;#34;,device=&amp;#34;/dev/dm-0&amp;#34;,major=&amp;#34;253&amp;#34;,minor=&amp;#34;0&amp;#34;,namespace=&amp;#34;k8s.</description>
    </item>
    
    <item>
      <title>Configuring Containerd</title>
      <link>https://talos.dev/docs/v1.0/guides/configuring-containerd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/configuring-containerd/</guid>
      <description>The base containerd configuration expects to merge in any additional configs present in /var/cri/conf.d/*.toml.
An example of exposing metrics Into each machine config, add the following:
machine:  ...  files:  - content: |[metrics] address = &amp;#34;0.0.0.0:11234&amp;#34;  path: /var/cri/conf.d/metrics.toml  op: create Create cluster like normal and see that metrics are now present on this port:
$ curl 127.0.0.1:11234/v1/metrics # HELP container_blkio_io_service_bytes_recursive_bytes The blkio io service bytes recursive # TYPE container_blkio_io_service_bytes_recursive_bytes gauge container_blkio_io_service_bytes_recursive_bytes{container_id=&amp;#34;0677d73196f5f4be1d408aab1c4125cf9e6c458a4bea39e590ac779709ffbe14&amp;#34;,device=&amp;#34;/dev/dm-0&amp;#34;,major=&amp;#34;253&amp;#34;,minor=&amp;#34;0&amp;#34;,namespace=&amp;#34;k8s.</description>
    </item>
    
    <item>
      <title>Configuring Corporate Proxies</title>
      <link>https://talos.dev/docs/v0.10/guides/configuring-corporate-proxies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/configuring-corporate-proxies/</guid>
      <description>Appending the Certificate Authority of MITM Proxies Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append Configuring a Machine to Use the Proxy To make use of a proxy:
machine:  env:  http_proxy: &amp;lt;http proxy&amp;gt;  https_proxy: &amp;lt;https proxy&amp;gt;  no_proxy: &amp;lt;no proxy&amp;gt; Additionally, configure the DNS nameservers, and NTP servers:</description>
    </item>
    
    <item>
      <title>Configuring Corporate Proxies</title>
      <link>https://talos.dev/docs/v0.11/guides/configuring-corporate-proxies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/configuring-corporate-proxies/</guid>
      <description>Appending the Certificate Authority of MITM Proxies Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append Configuring a Machine to Use the Proxy To make use of a proxy:
machine:  env:  http_proxy: &amp;lt;http proxy&amp;gt;  https_proxy: &amp;lt;https proxy&amp;gt;  no_proxy: &amp;lt;no proxy&amp;gt; Additionally, configure the DNS nameservers, and NTP servers:</description>
    </item>
    
    <item>
      <title>Configuring Corporate Proxies</title>
      <link>https://talos.dev/docs/v0.12/guides/configuring-corporate-proxies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/configuring-corporate-proxies/</guid>
      <description>Appending the Certificate Authority of MITM Proxies Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append Configuring a Machine to Use the Proxy To make use of a proxy:
machine:  env:  http_proxy: &amp;lt;http proxy&amp;gt;  https_proxy: &amp;lt;https proxy&amp;gt;  no_proxy: &amp;lt;no proxy&amp;gt; Additionally, configure the DNS nameservers, and NTP servers:</description>
    </item>
    
    <item>
      <title>Configuring Corporate Proxies</title>
      <link>https://talos.dev/docs/v0.13/guides/configuring-corporate-proxies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/configuring-corporate-proxies/</guid>
      <description>Appending the Certificate Authority of MITM Proxies Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append Configuring a Machine to Use the Proxy To make use of a proxy:
machine:  env:  http_proxy: &amp;lt;http proxy&amp;gt;  https_proxy: &amp;lt;https proxy&amp;gt;  no_proxy: &amp;lt;no proxy&amp;gt; Additionally, configure the DNS nameservers, and NTP servers:</description>
    </item>
    
    <item>
      <title>Configuring Corporate Proxies</title>
      <link>https://talos.dev/docs/v0.14/guides/configuring-corporate-proxies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/configuring-corporate-proxies/</guid>
      <description>Appending the Certificate Authority of MITM Proxies Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append Configuring a Machine to Use the Proxy To make use of a proxy:
machine:  env:  http_proxy: &amp;lt;http proxy&amp;gt;  https_proxy: &amp;lt;https proxy&amp;gt;  no_proxy: &amp;lt;no proxy&amp;gt; Additionally, configure the DNS nameservers, and NTP servers:</description>
    </item>
    
    <item>
      <title>Configuring Corporate Proxies</title>
      <link>https://talos.dev/docs/v0.6/guides/configuring-corporate-proxies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/guides/configuring-corporate-proxies/</guid>
      <description>Appending the Certificate Authority of MITM Proxies Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append Configuring a Machine to Use the Proxy To make use of a proxy:
machine:  env:  http_proxy: &amp;lt;http proxy&amp;gt;  https_proxy: &amp;lt;https proxy&amp;gt;  no_proxy: &amp;lt;no proxy&amp;gt; Additionally, configure the DNS nameservers, and NTP servers:</description>
    </item>
    
    <item>
      <title>Configuring Corporate Proxies</title>
      <link>https://talos.dev/docs/v0.7/guides/configuring-corporate-proxies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/guides/configuring-corporate-proxies/</guid>
      <description>Appending the Certificate Authority of MITM Proxies Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append Configuring a Machine to Use the Proxy To make use of a proxy:
machine:  env:  http_proxy: &amp;lt;http proxy&amp;gt;  https_proxy: &amp;lt;https proxy&amp;gt;  no_proxy: &amp;lt;no proxy&amp;gt; Additionally, configure the DNS nameservers, and NTP servers:</description>
    </item>
    
    <item>
      <title>Configuring Corporate Proxies</title>
      <link>https://talos.dev/docs/v0.8/guides/configuring-corporate-proxies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/guides/configuring-corporate-proxies/</guid>
      <description>Appending the Certificate Authority of MITM Proxies Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append Configuring a Machine to Use the Proxy To make use of a proxy:
machine:  env:  http_proxy: &amp;lt;http proxy&amp;gt;  https_proxy: &amp;lt;https proxy&amp;gt;  no_proxy: &amp;lt;no proxy&amp;gt; Additionally, configure the DNS nameservers, and NTP servers:</description>
    </item>
    
    <item>
      <title>Configuring Corporate Proxies</title>
      <link>https://talos.dev/docs/v0.9/guides/configuring-corporate-proxies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/configuring-corporate-proxies/</guid>
      <description>Appending the Certificate Authority of MITM Proxies Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append Configuring a Machine to Use the Proxy To make use of a proxy:
machine:  env:  http_proxy: &amp;lt;http proxy&amp;gt;  https_proxy: &amp;lt;https proxy&amp;gt;  no_proxy: &amp;lt;no proxy&amp;gt; Additionally, configure the DNS nameservers, and NTP servers:</description>
    </item>
    
    <item>
      <title>Configuring Corporate Proxies</title>
      <link>https://talos.dev/docs/v1.0/guides/configuring-corporate-proxies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/configuring-corporate-proxies/</guid>
      <description>Appending the Certificate Authority of MITM Proxies Put into each machine the PEM encoded certificate:
machine:  ...  files:  - content: |-----BEGIN CERTIFICATE----- ... -----END CERTIFICATE-----  permissions: 0644  path: /etc/ssl/certs/ca-certificates  op: append Configuring a Machine to Use the Proxy To make use of a proxy:
machine:  env:  http_proxy: &amp;lt;http proxy&amp;gt;  https_proxy: &amp;lt;https proxy&amp;gt;  no_proxy: &amp;lt;no proxy&amp;gt; Additionally, configure the DNS nameservers, and NTP servers:</description>
    </item>
    
    <item>
      <title>Configuring Network Connectivity</title>
      <link>https://talos.dev/docs/v0.10/guides/configuring-network-connectivity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/configuring-network-connectivity/</guid>
      <description>Configuring Network Connectivity The simplest way to deploy Talos is by ensuring that all the remote components of the system (talosctl, the control plane nodes, and worker nodes) all have layer 2 connectivity. This is not always possible, however, so this page lays out the minimal network access that is required to configure and operate a talos cluster.
 Note: These are the ports required for Talos specifically, and should be configured in addition to the ports required by kuberenetes.</description>
    </item>
    
    <item>
      <title>Configuring Network Connectivity</title>
      <link>https://talos.dev/docs/v0.11/guides/configuring-network-connectivity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/configuring-network-connectivity/</guid>
      <description>Configuring Network Connectivity The simplest way to deploy Talos is by ensuring that all the remote components of the system (talosctl, the control plane nodes, and worker nodes) all have layer 2 connectivity. This is not always possible, however, so this page lays out the minimal network access that is required to configure and operate a talos cluster.
 Note: These are the ports required for Talos specifically, and should be configured in addition to the ports required by kuberenetes.</description>
    </item>
    
    <item>
      <title>Configuring Network Connectivity</title>
      <link>https://talos.dev/docs/v0.12/guides/configuring-network-connectivity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/configuring-network-connectivity/</guid>
      <description>Configuring Network Connectivity The simplest way to deploy Talos is by ensuring that all the remote components of the system (talosctl, the control plane nodes, and worker nodes) all have layer 2 connectivity. This is not always possible, however, so this page lays out the minimal network access that is required to configure and operate a talos cluster.
 Note: These are the ports required for Talos specifically, and should be configured in addition to the ports required by kuberenetes.</description>
    </item>
    
    <item>
      <title>Configuring Network Connectivity</title>
      <link>https://talos.dev/docs/v0.13/guides/configuring-network-connectivity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/configuring-network-connectivity/</guid>
      <description>Configuring Network Connectivity The simplest way to deploy Talos is by ensuring that all the remote components of the system (talosctl, the control plane nodes, and worker nodes) all have layer 2 connectivity. This is not always possible, however, so this page lays out the minimal network access that is required to configure and operate a talos cluster.
 Note: These are the ports required for Talos specifically, and should be configured in addition to the ports required by kuberenetes.</description>
    </item>
    
    <item>
      <title>Configuring Network Connectivity</title>
      <link>https://talos.dev/docs/v0.14/guides/configuring-network-connectivity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/configuring-network-connectivity/</guid>
      <description>Configuring Network Connectivity The simplest way to deploy Talos is by ensuring that all the remote components of the system (talosctl, the control plane nodes, and worker nodes) all have layer 2 connectivity. This is not always possible, however, so this page lays out the minimal network access that is required to configure and operate a talos cluster.
 Note: These are the ports required for Talos specifically, and should be configured in addition to the ports required by kuberenetes.</description>
    </item>
    
    <item>
      <title>Configuring Network Connectivity</title>
      <link>https://talos.dev/docs/v0.8/guides/configuring-network-connectivity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/guides/configuring-network-connectivity/</guid>
      <description>Configuring Network Connectivity The simplest way to deploy Talos is by ensuring that all the remote components of the system (talosctl, the control plane nodes, and worker nodes) all have layer 2 connectivity. This is not always possible, however, so this page lays out the minimal network access that is required to configure and operate a talos cluster.
 Note: These are the ports required for Talos specifically, and should be configured in addition to the ports required by kuberenetes.</description>
    </item>
    
    <item>
      <title>Configuring Network Connectivity</title>
      <link>https://talos.dev/docs/v0.9/guides/configuring-network-connectivity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/configuring-network-connectivity/</guid>
      <description>Configuring Network Connectivity The simplest way to deploy Talos is by ensuring that all the remote components of the system (talosctl, the control plane nodes, and worker nodes) all have layer 2 connectivity. This is not always possible, however, so this page lays out the minimal network access that is required to configure and operate a talos cluster.
 Note: These are the ports required for Talos specifically, and should be configured in addition to the ports required by kuberenetes.</description>
    </item>
    
    <item>
      <title>Configuring Network Connectivity</title>
      <link>https://talos.dev/docs/v1.0/guides/configuring-network-connectivity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/configuring-network-connectivity/</guid>
      <description>Configuring Network Connectivity The simplest way to deploy Talos is by ensuring that all the remote components of the system (talosctl, the control plane nodes, and worker nodes) all have layer 2 connectivity. This is not always possible, however, so this page lays out the minimal network access that is required to configure and operate a talos cluster.
 Note: These are the ports required for Talos specifically, and should be configured in addition to the ports required by kuberenetes.</description>
    </item>
    
    <item>
      <title>Configuring Pull Through Cache</title>
      <link>https://talos.dev/docs/v0.10/guides/configuring-pull-through-cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/configuring-pull-through-cache/</guid>
      <description>In this guide we will create a set of local caching Docker registry proxies to minimize local cluster startup time.
When running Talos locally, pulling images from Docker registries might take a significant amount of time. We spin up local caching pass-through registries to cache images and configure a local Talos cluster to use those proxies. A similar approach might be used to run Talos in production in air-gapped environments. It can be also used to verify that all the images are available in local registries.</description>
    </item>
    
    <item>
      <title>Configuring Pull Through Cache</title>
      <link>https://talos.dev/docs/v0.11/guides/configuring-pull-through-cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/configuring-pull-through-cache/</guid>
      <description>In this guide we will create a set of local caching Docker registry proxies to minimize local cluster startup time.
When running Talos locally, pulling images from Docker registries might take a significant amount of time. We spin up local caching pass-through registries to cache images and configure a local Talos cluster to use those proxies. A similar approach might be used to run Talos in production in air-gapped environments. It can be also used to verify that all the images are available in local registries.</description>
    </item>
    
    <item>
      <title>Configuring Pull Through Cache</title>
      <link>https://talos.dev/docs/v0.12/guides/configuring-pull-through-cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/configuring-pull-through-cache/</guid>
      <description>In this guide we will create a set of local caching Docker registry proxies to minimize local cluster startup time.
When running Talos locally, pulling images from Docker registries might take a significant amount of time. We spin up local caching pass-through registries to cache images and configure a local Talos cluster to use those proxies. A similar approach might be used to run Talos in production in air-gapped environments. It can be also used to verify that all the images are available in local registries.</description>
    </item>
    
    <item>
      <title>Configuring Pull Through Cache</title>
      <link>https://talos.dev/docs/v0.13/guides/configuring-pull-through-cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/configuring-pull-through-cache/</guid>
      <description>In this guide we will create a set of local caching Docker registry proxies to minimize local cluster startup time.
When running Talos locally, pulling images from Docker registries might take a significant amount of time. We spin up local caching pass-through registries to cache images and configure a local Talos cluster to use those proxies. A similar approach might be used to run Talos in production in air-gapped environments. It can be also used to verify that all the images are available in local registries.</description>
    </item>
    
    <item>
      <title>Configuring Pull Through Cache</title>
      <link>https://talos.dev/docs/v0.14/guides/configuring-pull-through-cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/configuring-pull-through-cache/</guid>
      <description>In this guide we will create a set of local caching Docker registry proxies to minimize local cluster startup time.
When running Talos locally, pulling images from Docker registries might take a significant amount of time. We spin up local caching pass-through registries to cache images and configure a local Talos cluster to use those proxies. A similar approach might be used to run Talos in production in air-gapped environments. It can be also used to verify that all the images are available in local registries.</description>
    </item>
    
    <item>
      <title>Configuring Pull Through Cache</title>
      <link>https://talos.dev/docs/v0.6/guides/configuring-pull-through-cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/guides/configuring-pull-through-cache/</guid>
      <description>In this guide we will create a set of local caching Docker registry proxies to minimize local cluster startup time.
When running Talos locally, pulling images from Docker registries might take a significant amount of time. We spin up local caching pass-through registries to cache images and configure a local Talos cluster to use those proxies. A similar approach might be used to run Talos in production in air-gapped environments. It can be also used to verify that all the images are available in local registries.</description>
    </item>
    
    <item>
      <title>Configuring Pull Through Cache</title>
      <link>https://talos.dev/docs/v0.7/guides/configuring-pull-through-cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/guides/configuring-pull-through-cache/</guid>
      <description>In this guide we will create a set of local caching Docker registry proxies to minimize local cluster startup time.
When running Talos locally, pulling images from Docker registries might take a significant amount of time. We spin up local caching pass-through registries to cache images and configure a local Talos cluster to use those proxies. A similar approach might be used to run Talos in production in air-gapped environments. It can be also used to verify that all the images are available in local registries.</description>
    </item>
    
    <item>
      <title>Configuring Pull Through Cache</title>
      <link>https://talos.dev/docs/v0.8/guides/configuring-pull-through-cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/guides/configuring-pull-through-cache/</guid>
      <description>In this guide we will create a set of local caching Docker registry proxies to minimize local cluster startup time.
When running Talos locally, pulling images from Docker registries might take a significant amount of time. We spin up local caching pass-through registries to cache images and configure a local Talos cluster to use those proxies. A similar approach might be used to run Talos in production in air-gapped environments. It can be also used to verify that all the images are available in local registries.</description>
    </item>
    
    <item>
      <title>Configuring Pull Through Cache</title>
      <link>https://talos.dev/docs/v0.9/guides/configuring-pull-through-cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/configuring-pull-through-cache/</guid>
      <description>In this guide we will create a set of local caching Docker registry proxies to minimize local cluster startup time.
When running Talos locally, pulling images from Docker registries might take a significant amount of time. We spin up local caching pass-through registries to cache images and configure a local Talos cluster to use those proxies. A similar approach might be used to run Talos in production in air-gapped environments. It can be also used to verify that all the images are available in local registries.</description>
    </item>
    
    <item>
      <title>Configuring Pull Through Cache</title>
      <link>https://talos.dev/docs/v1.0/guides/configuring-pull-through-cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/configuring-pull-through-cache/</guid>
      <description>In this guide we will create a set of local caching Docker registry proxies to minimize local cluster startup time.
When running Talos locally, pulling images from Docker registries might take a significant amount of time. We spin up local caching pass-through registries to cache images and configure a local Talos cluster to use those proxies. A similar approach might be used to run Talos in production in air-gapped environments. It can be also used to verify that all the images are available in local registries.</description>
    </item>
    
    <item>
      <title>Configuring the Cluster Endpoint</title>
      <link>https://talos.dev/docs/v0.10/guides/configuring-the-cluster-endpoint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/configuring-the-cluster-endpoint/</guid>
      <description>In this section, we will step through the configuration of a Talos based Kubernetes cluster. There are three major components we will configure:
 apid and talosctl the master nodes the worker nodes  Talos enforces a high level of security by using mutual TLS for authentication and authorization.
We recommend that the configuration of Talos be performed by a cluster owner. A cluster owner should be a person of authority within an organization, perhaps a director, manager, or senior member of a team.</description>
    </item>
    
    <item>
      <title>Configuring the Cluster Endpoint</title>
      <link>https://talos.dev/docs/v0.11/guides/configuring-the-cluster-endpoint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/configuring-the-cluster-endpoint/</guid>
      <description>In this section, we will step through the configuration of a Talos based Kubernetes cluster. There are three major components we will configure:
 apid and talosctl the master nodes the worker nodes  Talos enforces a high level of security by using mutual TLS for authentication and authorization.
We recommend that the configuration of Talos be performed by a cluster owner. A cluster owner should be a person of authority within an organization, perhaps a director, manager, or senior member of a team.</description>
    </item>
    
    <item>
      <title>Configuring the Cluster Endpoint</title>
      <link>https://talos.dev/docs/v0.12/guides/configuring-the-cluster-endpoint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/configuring-the-cluster-endpoint/</guid>
      <description>In this section, we will step through the configuration of a Talos based Kubernetes cluster. There are three major components we will configure:
 apid and talosctl the master nodes the worker nodes  Talos enforces a high level of security by using mutual TLS for authentication and authorization.
We recommend that the configuration of Talos be performed by a cluster owner. A cluster owner should be a person of authority within an organization, perhaps a director, manager, or senior member of a team.</description>
    </item>
    
    <item>
      <title>Configuring the Cluster Endpoint</title>
      <link>https://talos.dev/docs/v0.13/guides/configuring-the-cluster-endpoint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/configuring-the-cluster-endpoint/</guid>
      <description>In this section, we will step through the configuration of a Talos based Kubernetes cluster. There are three major components we will configure:
 apid and talosctl the master nodes the worker nodes  Talos enforces a high level of security by using mutual TLS for authentication and authorization.
We recommend that the configuration of Talos be performed by a cluster owner. A cluster owner should be a person of authority within an organization, perhaps a director, manager, or senior member of a team.</description>
    </item>
    
    <item>
      <title>Configuring the Cluster Endpoint</title>
      <link>https://talos.dev/docs/v0.14/guides/configuring-the-cluster-endpoint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/configuring-the-cluster-endpoint/</guid>
      <description>In this section, we will step through the configuration of a Talos based Kubernetes cluster. There are three major components we will configure:
 apid and talosctl the master nodes the worker nodes  Talos enforces a high level of security by using mutual TLS for authentication and authorization.
We recommend that the configuration of Talos be performed by a cluster owner. A cluster owner should be a person of authority within an organization, perhaps a director, manager, or senior member of a team.</description>
    </item>
    
    <item>
      <title>Configuring the Cluster Endpoint</title>
      <link>https://talos.dev/docs/v0.6/guides/configuring-the-cluster-endpoint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/guides/configuring-the-cluster-endpoint/</guid>
      <description>In this section, we will step through the configuration of a Talos based Kubernetes cluster. There are three major components we will configure:
 apid and talosctl the master nodes the worker nodes  Talos enforces a high level of security by using mutual TLS for authentication and authorization.
We recommend that the configuration of Talos be performed by a cluster owner. A cluster owner should be a person of authority within an organization, perhaps a director, manager, or senior member of a team.</description>
    </item>
    
    <item>
      <title>Configuring the Cluster Endpoint</title>
      <link>https://talos.dev/docs/v0.7/guides/configuring-the-cluster-endpoint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/guides/configuring-the-cluster-endpoint/</guid>
      <description>In this section, we will step through the configuration of a Talos based Kubernetes cluster. There are three major components we will configure:
 apid and talosctl the master nodes the worker nodes  Talos enforces a high level of security by using mutual TLS for authentication and authorization.
We recommend that the configuration of Talos be performed by a cluster owner. A cluster owner should be a person of authority within an organization, perhaps a director, manager, or senior member of a team.</description>
    </item>
    
    <item>
      <title>Configuring the Cluster Endpoint</title>
      <link>https://talos.dev/docs/v0.8/guides/configuring-the-cluster-endpoint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/guides/configuring-the-cluster-endpoint/</guid>
      <description>In this section, we will step through the configuration of a Talos based Kubernetes cluster. There are three major components we will configure:
 apid and talosctl the master nodes the worker nodes  Talos enforces a high level of security by using mutual TLS for authentication and authorization.
We recommend that the configuration of Talos be performed by a cluster owner. A cluster owner should be a person of authority within an organization, perhaps a director, manager, or senior member of a team.</description>
    </item>
    
    <item>
      <title>Configuring the Cluster Endpoint</title>
      <link>https://talos.dev/docs/v0.9/guides/configuring-the-cluster-endpoint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/configuring-the-cluster-endpoint/</guid>
      <description>In this section, we will step through the configuration of a Talos based Kubernetes cluster. There are three major components we will configure:
 apid and talosctl the master nodes the worker nodes  Talos enforces a high level of security by using mutual TLS for authentication and authorization.
We recommend that the configuration of Talos be performed by a cluster owner. A cluster owner should be a person of authority within an organization, perhaps a director, manager, or senior member of a team.</description>
    </item>
    
    <item>
      <title>Configuring the Cluster Endpoint</title>
      <link>https://talos.dev/docs/v1.0/guides/configuring-the-cluster-endpoint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/configuring-the-cluster-endpoint/</guid>
      <description>In this section, we will step through the configuration of a Talos based Kubernetes cluster. There are three major components we will configure:
 apid and talosctl the master nodes the worker nodes  Talos enforces a high level of security by using mutual TLS for authentication and authorization.
We recommend that the configuration of Talos be performed by a cluster owner. A cluster owner should be a person of authority within an organization, perhaps a director, manager, or senior member of a team.</description>
    </item>
    
    <item>
      <title>Configuring Wireguard Network</title>
      <link>https://talos.dev/docs/v0.10/guides/configuring-wireguard-network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/configuring-wireguard-network/</guid>
      <description>Configuring Wireguard Network Quick Start The quickest way to try out Wireguard is to use talosctl cluster create command:
talosctl cluster create --wireguard-cidr 10.1.0.0/24 It will automatically generate Wireguard network configuration for each node with the following network topology:
Where all controlplane nodes will be used as Wireguard servers which listen on port 51111. All controlplanes and workers will connect to all controlplanes. It also sets PersistentKeepalive to 5 seconds to establish controlplanes to workers connection.</description>
    </item>
    
    <item>
      <title>Configuring Wireguard Network</title>
      <link>https://talos.dev/docs/v0.11/guides/configuring-wireguard-network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/configuring-wireguard-network/</guid>
      <description>Configuring Wireguard Network Quick Start The quickest way to try out Wireguard is to use talosctl cluster create command:
talosctl cluster create --wireguard-cidr 10.1.0.0/24 It will automatically generate Wireguard network configuration for each node with the following network topology:
Where all controlplane nodes will be used as Wireguard servers which listen on port 51111. All controlplanes and workers will connect to all controlplanes. It also sets PersistentKeepalive to 5 seconds to establish controlplanes to workers connection.</description>
    </item>
    
    <item>
      <title>Configuring Wireguard Network</title>
      <link>https://talos.dev/docs/v0.12/guides/configuring-wireguard-network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/configuring-wireguard-network/</guid>
      <description>Configuring Wireguard Network Quick Start The quickest way to try out Wireguard is to use talosctl cluster create command:
talosctl cluster create --wireguard-cidr 10.1.0.0/24 It will automatically generate Wireguard network configuration for each node with the following network topology:
Where all controlplane nodes will be used as Wireguard servers which listen on port 51111. All controlplanes and workers will connect to all controlplanes. It also sets PersistentKeepalive to 5 seconds to establish controlplanes to workers connection.</description>
    </item>
    
    <item>
      <title>Configuring Wireguard Network</title>
      <link>https://talos.dev/docs/v0.13/guides/configuring-wireguard-network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/configuring-wireguard-network/</guid>
      <description>Configuring Wireguard Network Quick Start The quickest way to try out Wireguard is to use talosctl cluster create command:
talosctl cluster create --wireguard-cidr 10.1.0.0/24 It will automatically generate Wireguard network configuration for each node with the following network topology:
Where all controlplane nodes will be used as Wireguard servers which listen on port 51111. All controlplanes and workers will connect to all controlplanes. It also sets PersistentKeepalive to 5 seconds to establish controlplanes to workers connection.</description>
    </item>
    
    <item>
      <title>Configuring Wireguard Network</title>
      <link>https://talos.dev/docs/v0.14/guides/configuring-wireguard-network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/configuring-wireguard-network/</guid>
      <description>Configuring Wireguard Network Quick Start The quickest way to try out Wireguard is to use talosctl cluster create command:
talosctl cluster create --wireguard-cidr 10.1.0.0/24 It will automatically generate Wireguard network configuration for each node with the following network topology:
Where all controlplane nodes will be used as Wireguard servers which listen on port 51111. All controlplanes and workers will connect to all controlplanes. It also sets PersistentKeepalive to 5 seconds to establish controlplanes to workers connection.</description>
    </item>
    
    <item>
      <title>Configuring Wireguard Network</title>
      <link>https://talos.dev/docs/v0.9/guides/configuring-wireguard-network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/configuring-wireguard-network/</guid>
      <description>Configuring Wireguard Network Quick Start The quickest way to try out Wireguard is to use talosctl cluster create command:
talosctl cluster create --wireguard-cidr 10.1.0.0/24 It will automatically generate Wireguard network configuration for each node with the following network topology:
Where all controlplane nodes will be used as Wireguard servers which listen on port 51111. All controlplanes and workers will connect to all controlplanes. It also sets PersistentKeepalive to 5 seconds to establish controlplanes to workers connection.</description>
    </item>
    
    <item>
      <title>Configuring Wireguard Network</title>
      <link>https://talos.dev/docs/v1.0/guides/configuring-wireguard-network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/configuring-wireguard-network/</guid>
      <description>Configuring Wireguard Network Quick Start The quickest way to try out Wireguard is to use talosctl cluster create command:
talosctl cluster create --wireguard-cidr 10.1.0.0/24 It will automatically generate Wireguard network configuration for each node with the following network topology:
Where all controlplane nodes will be used as Wireguard servers which listen on port 51111. All controlplanes and workers will connect to all controlplanes. It also sets PersistentKeepalive to 5 seconds to establish controlplanes to workers connection.</description>
    </item>
    
    <item>
      <title>Converting Control Plane</title>
      <link>https://talos.dev/docs/v0.10/guides/converting-control-plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/converting-control-plane/</guid>
      <description>Talos version 0.9 runs Kubernetes control plane in a new way: static pods managed by Talos. Talos version 0.8 and below runs self-hosted control plane. After Talos OS upgrade to version 0.9 Kubernetes control plane should be converted to run as static pods.
This guide describes automated conversion script and also shows detailed manual conversion process.
Video Walkthrough To see a live demo of this writeup, see the video below:</description>
    </item>
    
    <item>
      <title>Converting Control Plane</title>
      <link>https://talos.dev/docs/v0.11/guides/converting-control-plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/converting-control-plane/</guid>
      <description>Talos version 0.9 runs Kubernetes control plane in a new way: static pods managed by Talos. Talos version 0.8 and below runs self-hosted control plane. After Talos OS upgrade to version 0.9 Kubernetes control plane should be converted to run as static pods.
This guide describes automated conversion script and also shows detailed manual conversion process.
Video Walkthrough To see a live demo of this writeup, see the video below:</description>
    </item>
    
    <item>
      <title>Converting Control Plane</title>
      <link>https://talos.dev/docs/v0.9/guides/converting-control-plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/converting-control-plane/</guid>
      <description>Talos version 0.9 runs Kubernetes control plane in a new way: static pods managed by Talos. Talos version 0.8 and below runs self-hosted control plane. After Talos OS upgrade to version 0.9 Kubernetes control plane should be converted to run as static pods.
This guide describes automated conversion script and also shows detailed manual conversion process.
Video Walkthrough To see a live demo of this writeup, see the video below:</description>
    </item>
    
    <item>
      <title>Customizing the Kernel</title>
      <link>https://talos.dev/docs/v0.10/guides/customizing-the-kernel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/customizing-the-kernel/</guid>
      <description>FROMscratch AS customization COPY --from=&amp;lt;custom kernel image&amp;gt; /lib/modules /lib/modules  FROMdocker.io/andrewrynhard/installer:latest COPY --from=&amp;lt;custom kernel image&amp;gt; /boot/vmlinuz /usr/install/vmlinuz docker build --build-arg RM=&amp;#34;/lib/modules&amp;#34; -t talos-installer .  Note: You can use the --squash flag to create smaller images.
 Now that we have a custom installer we can build Talos for the specific platform we wish to deploy to.</description>
    </item>
    
    <item>
      <title>Customizing the Kernel</title>
      <link>https://talos.dev/docs/v0.11/guides/customizing-the-kernel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/customizing-the-kernel/</guid>
      <description>The installer image contains ONBUILD instructions that handle the following:
 the decompression, and unpacking of the initramfs.xz the unsquashing of the rootfs the copying of new rootfs files the squashing of the new rootfs and the packing, and compression of the new initramfs.xz  When used as a base image, the installer will perform the above steps automatically with the requirement that a customization stage be defined in the Dockerfile.</description>
    </item>
    
    <item>
      <title>Customizing the Kernel</title>
      <link>https://talos.dev/docs/v0.12/guides/customizing-the-kernel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/customizing-the-kernel/</guid>
      <description>The installer image contains ONBUILD instructions that handle the following:
 the decompression, and unpacking of the initramfs.xz the unsquashing of the rootfs the copying of new rootfs files the squashing of the new rootfs and the packing, and compression of the new initramfs.xz  When used as a base image, the installer will perform the above steps automatically with the requirement that a customization stage be defined in the Dockerfile.</description>
    </item>
    
    <item>
      <title>Customizing the Kernel</title>
      <link>https://talos.dev/docs/v0.13/guides/customizing-the-kernel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/customizing-the-kernel/</guid>
      <description>The installer image contains ONBUILD instructions that handle the following:
 the decompression, and unpacking of the initramfs.xz the unsquashing of the rootfs the copying of new rootfs files the squashing of the new rootfs and the packing, and compression of the new initramfs.xz  When used as a base image, the installer will perform the above steps automatically with the requirement that a customization stage be defined in the Dockerfile.</description>
    </item>
    
    <item>
      <title>Customizing the Kernel</title>
      <link>https://talos.dev/docs/v0.14/guides/customizing-the-kernel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/customizing-the-kernel/</guid>
      <description>The installer image contains ONBUILD instructions that handle the following:
 the decompression, and unpacking of the initramfs.xz the unsquashing of the rootfs the copying of new rootfs files the squashing of the new rootfs and the packing, and compression of the new initramfs.xz  When used as a base image, the installer will perform the above steps automatically with the requirement that a customization stage be defined in the Dockerfile.</description>
    </item>
    
    <item>
      <title>Customizing the Kernel</title>
      <link>https://talos.dev/docs/v0.6/guides/customizing-the-kernel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/guides/customizing-the-kernel/</guid>
      <description>FROMscratch AS customization COPY --from=&amp;lt;custom kernel image&amp;gt; /lib/modules /lib/modules  FROMdocker.io/andrewrynhard/installer:latest COPY --from=&amp;lt;custom kernel image&amp;gt; /boot/vmlinuz /usr/install/vmlinuz docker build --build-arg RM=&amp;#34;/lib/modules&amp;#34; -t talos-installer .  Note: You can use the --squash flag to create smaller images.
 Now that we have a custom installer we can build Talos for the specific platform we wish to deploy to.</description>
    </item>
    
    <item>
      <title>Customizing the Kernel</title>
      <link>https://talos.dev/docs/v0.7/guides/customizing-the-kernel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/guides/customizing-the-kernel/</guid>
      <description>FROMscratch AS customization COPY --from=&amp;lt;custom kernel image&amp;gt; /lib/modules /lib/modules  FROMdocker.io/andrewrynhard/installer:latest COPY --from=&amp;lt;custom kernel image&amp;gt; /boot/vmlinuz /usr/install/vmlinuz docker build --build-arg RM=&amp;#34;/lib/modules&amp;#34; -t talos-installer .  Note: You can use the --squash flag to create smaller images.
 Now that we have a custom installer we can build Talos for the specific platform we wish to deploy to.</description>
    </item>
    
    <item>
      <title>Customizing the Kernel</title>
      <link>https://talos.dev/docs/v0.8/guides/customizing-the-kernel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/guides/customizing-the-kernel/</guid>
      <description>FROMscratch AS customization COPY --from=&amp;lt;custom kernel image&amp;gt; /lib/modules /lib/modules  FROMdocker.io/andrewrynhard/installer:latest COPY --from=&amp;lt;custom kernel image&amp;gt; /boot/vmlinuz /usr/install/vmlinuz docker build --build-arg RM=&amp;#34;/lib/modules&amp;#34; -t talos-installer .  Note: You can use the --squash flag to create smaller images.
 Now that we have a custom installer we can build Talos for the specific platform we wish to deploy to.</description>
    </item>
    
    <item>
      <title>Customizing the Kernel</title>
      <link>https://talos.dev/docs/v0.9/guides/customizing-the-kernel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/customizing-the-kernel/</guid>
      <description>FROMscratch AS customization COPY --from=&amp;lt;custom kernel image&amp;gt; /lib/modules /lib/modules  FROMdocker.io/andrewrynhard/installer:latest COPY --from=&amp;lt;custom kernel image&amp;gt; /boot/vmlinuz /usr/install/vmlinuz docker build --build-arg RM=&amp;#34;/lib/modules&amp;#34; -t talos-installer .  Note: You can use the --squash flag to create smaller images.
 Now that we have a custom installer we can build Talos for the specific platform we wish to deploy to.</description>
    </item>
    
    <item>
      <title>Customizing the Kernel</title>
      <link>https://talos.dev/docs/v1.0/guides/customizing-the-kernel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/customizing-the-kernel/</guid>
      <description>The installer image contains ONBUILD instructions that handle the following:
 the decompression, and unpacking of the initramfs.xz the unsquashing of the rootfs the copying of new rootfs files the squashing of the new rootfs and the packing, and compression of the new initramfs.xz  When used as a base image, the installer will perform the above steps automatically with the requirement that a customization stage be defined in the Dockerfile.</description>
    </item>
    
    <item>
      <title>Customizing the Root Filesystem</title>
      <link>https://talos.dev/docs/v0.10/guides/customizing-the-root-filesystem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/customizing-the-root-filesystem/</guid>
      <description>The installer image contains ONBUILD instructions that handle the following:
 the decompression, and unpacking of the initramfs.xz the unsquashing of the rootfs the copying of new rootfs files the squashing of the new rootfs and the packing, and compression of the new initramfs.xz  When used as a base image, the installer will perform the above steps automatically with the requirement that a customization stage be defined in the Dockerfile.</description>
    </item>
    
    <item>
      <title>Customizing the Root Filesystem</title>
      <link>https://talos.dev/docs/v0.11/guides/customizing-the-root-filesystem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/customizing-the-root-filesystem/</guid>
      <description>The installer image contains ONBUILD instructions that handle the following:
 the decompression, and unpacking of the initramfs.xz the unsquashing of the rootfs the copying of new rootfs files the squashing of the new rootfs and the packing, and compression of the new initramfs.xz  When used as a base image, the installer will perform the above steps automatically with the requirement that a customization stage be defined in the Dockerfile.</description>
    </item>
    
    <item>
      <title>Customizing the Root Filesystem</title>
      <link>https://talos.dev/docs/v0.12/guides/customizing-the-root-filesystem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/customizing-the-root-filesystem/</guid>
      <description>The installer image contains ONBUILD instructions that handle the following:
 the decompression, and unpacking of the initramfs.xz the unsquashing of the rootfs the copying of new rootfs files the squashing of the new rootfs and the packing, and compression of the new initramfs.xz  When used as a base image, the installer will perform the above steps automatically with the requirement that a customization stage be defined in the Dockerfile.</description>
    </item>
    
    <item>
      <title>Customizing the Root Filesystem</title>
      <link>https://talos.dev/docs/v0.13/guides/customizing-the-root-filesystem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/customizing-the-root-filesystem/</guid>
      <description>The installer image contains ONBUILD instructions that handle the following:
 the decompression, and unpacking of the initramfs.xz the unsquashing of the rootfs the copying of new rootfs files the squashing of the new rootfs and the packing, and compression of the new initramfs.xz  When used as a base image, the installer will perform the above steps automatically with the requirement that a customization stage be defined in the Dockerfile.</description>
    </item>
    
    <item>
      <title>Customizing the Root Filesystem</title>
      <link>https://talos.dev/docs/v0.14/guides/customizing-the-root-filesystem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/customizing-the-root-filesystem/</guid>
      <description>The installer image contains ONBUILD instructions that handle the following:
 the decompression, and unpacking of the initramfs.xz the unsquashing of the rootfs the copying of new rootfs files the squashing of the new rootfs and the packing, and compression of the new initramfs.xz  When used as a base image, the installer will perform the above steps automatically with the requirement that a customization stage be defined in the Dockerfile.</description>
    </item>
    
    <item>
      <title>Customizing the Root Filesystem</title>
      <link>https://talos.dev/docs/v0.6/guides/customizing-the-root-filesystem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/guides/customizing-the-root-filesystem/</guid>
      <description>The installer image contains ONBUILD instructions that handle the following:
 the decompression, and unpacking of the initramfs.xz the unsquashing of the rootfs the copying of new rootfs files the squashing of the new rootfs and the packing, and compression of the new initramfs.xz  When used as a base image, the installer will perform the above steps automatically with the requirement that a customization stage be defined in the Dockerfile.</description>
    </item>
    
    <item>
      <title>Customizing the Root Filesystem</title>
      <link>https://talos.dev/docs/v0.7/guides/customizing-the-root-filesystem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/guides/customizing-the-root-filesystem/</guid>
      <description>The installer image contains ONBUILD instructions that handle the following:
 the decompression, and unpacking of the initramfs.xz the unsquashing of the rootfs the copying of new rootfs files the squashing of the new rootfs and the packing, and compression of the new initramfs.xz  When used as a base image, the installer will perform the above steps automatically with the requirement that a customization stage be defined in the Dockerfile.</description>
    </item>
    
    <item>
      <title>Customizing the Root Filesystem</title>
      <link>https://talos.dev/docs/v0.8/guides/customizing-the-root-filesystem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/guides/customizing-the-root-filesystem/</guid>
      <description>The installer image contains ONBUILD instructions that handle the following:
 the decompression, and unpacking of the initramfs.xz the unsquashing of the rootfs the copying of new rootfs files the squashing of the new rootfs and the packing, and compression of the new initramfs.xz  When used as a base image, the installer will perform the above steps automatically with the requirement that a customization stage be defined in the Dockerfile.</description>
    </item>
    
    <item>
      <title>Customizing the Root Filesystem</title>
      <link>https://talos.dev/docs/v0.9/guides/customizing-the-root-filesystem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/customizing-the-root-filesystem/</guid>
      <description>The installer image contains ONBUILD instructions that handle the following:
 the decompression, and unpacking of the initramfs.xz the unsquashing of the rootfs the copying of new rootfs files the squashing of the new rootfs and the packing, and compression of the new initramfs.xz  When used as a base image, the installer will perform the above steps automatically with the requirement that a customization stage be defined in the Dockerfile.</description>
    </item>
    
    <item>
      <title>Customizing the Root Filesystem</title>
      <link>https://talos.dev/docs/v1.0/guides/customizing-the-root-filesystem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/customizing-the-root-filesystem/</guid>
      <description>The installer image contains ONBUILD instructions that handle the following:
 the decompression, and unpacking of the initramfs.xz the unsquashing of the rootfs the copying of new rootfs files the squashing of the new rootfs and the packing, and compression of the new initramfs.xz  When used as a base image, the installer will perform the above steps automatically with the requirement that a customization stage be defined in the Dockerfile.</description>
    </item>
    
    <item>
      <title>Deploying Cilium CNI</title>
      <link>https://talos.dev/docs/v0.14/guides/deploying-cilium/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/deploying-cilium/</guid>
      <description>From v1.9 onwards Cilium does no longer provide a one-liner install manifest that can be used to install Cilium on a node via kubectl apply -f or passing it in as an extra url in the urls part in the Talos machine configuration.
 Installing Cilium the new way via the cilium cli is broken, so we&amp;rsquo;ll be using helm to install Cilium. For more information: Install with CLI fails, works with Helm</description>
    </item>
    
    <item>
      <title>Deploying Cilium CNI</title>
      <link>https://talos.dev/docs/v1.0/guides/deploying-cilium/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/deploying-cilium/</guid>
      <description>From v1.9 onwards cilium doesn&amp;rsquo;t provide a one liner install manifest that can be used to install cilium on a node via kubectl apply -f or passing in as extra urls in Talos machine configuration.
 installing Cilium via cilium cli is broken, so we&amp;rsquo;ll be using helm to install cilium.
 Refer Installing with Helm for more information.
First we&amp;rsquo;ll need to add the helm repo for cilium.
helm repo add cilium https://helm.</description>
    </item>
    
    <item>
      <title>Deploying Metrics Server</title>
      <link>https://talos.dev/docs/v0.10/guides/deploy-metrics-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/deploy-metrics-server/</guid>
      <description>Metrics Server enables use of the Horizontal Pod Autoscaler and Vertical Pod Autoscaler. It does this by gathering metrics data from the kubelets in a cluster. By default, the certificates in use by the kubelets will not be recognized by metrics-server. This can be solved by either configuring metrics-server to do no validation of the TLS certificates, or by modifying the kubelet configuration to rotate its certificates and use ones that will be recognized by metrics-server.</description>
    </item>
    
    <item>
      <title>Deploying Metrics Server</title>
      <link>https://talos.dev/docs/v0.11/guides/deploy-metrics-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/deploy-metrics-server/</guid>
      <description>Metrics Server enables use of the Horizontal Pod Autoscaler and Vertical Pod Autoscaler. It does this by gathering metrics data from the kubelets in a cluster. By default, the certificates in use by the kubelets will not be recognized by metrics-server. This can be solved by either configuring metrics-server to do no validation of the TLS certificates, or by modifying the kubelet configuration to rotate its certificates and use ones that will be recognized by metrics-server.</description>
    </item>
    
    <item>
      <title>Deploying Metrics Server</title>
      <link>https://talos.dev/docs/v0.12/guides/deploy-metrics-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/deploy-metrics-server/</guid>
      <description>Metrics Server enables use of the Horizontal Pod Autoscaler and Vertical Pod Autoscaler. It does this by gathering metrics data from the kubelets in a cluster. By default, the certificates in use by the kubelets will not be recognized by metrics-server. This can be solved by either configuring metrics-server to do no validation of the TLS certificates, or by modifying the kubelet configuration to rotate its certificates and use ones that will be recognized by metrics-server.</description>
    </item>
    
    <item>
      <title>Deploying Metrics Server</title>
      <link>https://talos.dev/docs/v0.13/guides/deploy-metrics-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/deploy-metrics-server/</guid>
      <description>Metrics Server enables use of the Horizontal Pod Autoscaler and Vertical Pod Autoscaler. It does this by gathering metrics data from the kubelets in a cluster. By default, the certificates in use by the kubelets will not be recognized by metrics-server. This can be solved by either configuring metrics-server to do no validation of the TLS certificates, or by modifying the kubelet configuration to rotate its certificates and use ones that will be recognized by metrics-server.</description>
    </item>
    
    <item>
      <title>Deploying Metrics Server</title>
      <link>https://talos.dev/docs/v0.14/guides/deploy-metrics-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/deploy-metrics-server/</guid>
      <description>Metrics Server enables use of the Horizontal Pod Autoscaler and Vertical Pod Autoscaler. It does this by gathering metrics data from the kubelets in a cluster. By default, the certificates in use by the kubelets will not be recognized by metrics-server. This can be solved by either configuring metrics-server to do no validation of the TLS certificates, or by modifying the kubelet configuration to rotate its certificates and use ones that will be recognized by metrics-server.</description>
    </item>
    
    <item>
      <title>Deploying Metrics Server</title>
      <link>https://talos.dev/docs/v1.0/guides/deploy-metrics-server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/deploy-metrics-server/</guid>
      <description>Metrics Server enables use of the Horizontal Pod Autoscaler and Vertical Pod Autoscaler. It does this by gathering metrics data from the kubelets in a cluster. By default, the certificates in use by the kubelets will not be recognized by metrics-server. This can be solved by either configuring metrics-server to do no validation of the TLS certificates, or by modifying the kubelet configuration to rotate its certificates and use ones that will be recognized by metrics-server.</description>
    </item>
    
    <item>
      <title>Digital Rebar</title>
      <link>https://talos.dev/docs/v0.10/bare-metal-platforms/digital-rebar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/bare-metal-platforms/digital-rebar/</guid>
      <description>Prerequisites  3 nodes (please see hardware requirements) Loadbalancer Digital Rebar Server Talosctl access (see talosctl setup)  Creating a Cluster In this guide we will create an Kubernetes cluster with 1 worker node, and 2 controlplane nodes. We assume an existing digital rebar deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.</description>
    </item>
    
    <item>
      <title>Digital Rebar</title>
      <link>https://talos.dev/docs/v0.11/bare-metal-platforms/digital-rebar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/bare-metal-platforms/digital-rebar/</guid>
      <description>Prerequisites  3 nodes (please see hardware requirements) Loadbalancer Digital Rebar Server Talosctl access (see talosctl setup)  Creating a Cluster In this guide we will create an Kubernetes cluster with 1 worker node, and 2 controlplane nodes. We assume an existing digital rebar deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.</description>
    </item>
    
    <item>
      <title>Digital Rebar</title>
      <link>https://talos.dev/docs/v0.12/bare-metal-platforms/digital-rebar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/bare-metal-platforms/digital-rebar/</guid>
      <description>Prerequisites  3 nodes (please see hardware requirements) Loadbalancer Digital Rebar Server Talosctl access (see talosctl setup)  Creating a Cluster In this guide we will create an Kubernetes cluster with 1 worker node, and 2 controlplane nodes. We assume an existing digital rebar deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.</description>
    </item>
    
    <item>
      <title>Digital Rebar</title>
      <link>https://talos.dev/docs/v0.13/bare-metal-platforms/digital-rebar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/bare-metal-platforms/digital-rebar/</guid>
      <description>Prerequisites  3 nodes (please see hardware requirements) Loadbalancer Digital Rebar Server Talosctl access (see talosctl setup)  Creating a Cluster In this guide we will create an Kubernetes cluster with 1 worker node, and 2 controlplane nodes. We assume an existing digital rebar deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.</description>
    </item>
    
    <item>
      <title>Digital Rebar</title>
      <link>https://talos.dev/docs/v0.14/bare-metal-platforms/digital-rebar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/bare-metal-platforms/digital-rebar/</guid>
      <description>Prerequisites  3 nodes (please see hardware requirements) Loadbalancer Digital Rebar Server Talosctl access (see talosctl setup)  Creating a Cluster In this guide we will create an Kubernetes cluster with 1 worker node, and 2 controlplane nodes. We assume an existing digital rebar deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.</description>
    </item>
    
    <item>
      <title>Digital Rebar</title>
      <link>https://talos.dev/docs/v0.6/bare-metal-platforms/digital-rebar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/bare-metal-platforms/digital-rebar/</guid>
      <description>Prerequisites  3 nodes (please see hardware requirements) Loadbalancer Digital Rebar Server Talosctl access (see talosctl setup)  Creating a Cluster In this guide we will create an Kubernetes cluster with 1 worker node, and 2 controlplane nodes. We assume an existing digital rebar deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.</description>
    </item>
    
    <item>
      <title>Digital Rebar</title>
      <link>https://talos.dev/docs/v0.7/bare-metal-platforms/digital-rebar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/bare-metal-platforms/digital-rebar/</guid>
      <description>Prerequisites  3 nodes (please see hardware requirements) Loadbalancer Digital Rebar Server Talosctl access (see talosctl setup)  Creating a Cluster In this guide we will create an Kubernetes cluster with 1 worker node, and 2 controlplane nodes. We assume an existing digital rebar deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.</description>
    </item>
    
    <item>
      <title>Digital Rebar</title>
      <link>https://talos.dev/docs/v0.8/bare-metal-platforms/digital-rebar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/bare-metal-platforms/digital-rebar/</guid>
      <description>Prerequisites  3 nodes (please see hardware requirements) Loadbalancer Digital Rebar Server Talosctl access (see talosctl setup)  Creating a Cluster In this guide we will create an Kubernetes cluster with 1 worker node, and 2 controlplane nodes. We assume an existing digital rebar deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.</description>
    </item>
    
    <item>
      <title>Digital Rebar</title>
      <link>https://talos.dev/docs/v0.9/bare-metal-platforms/digital-rebar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/bare-metal-platforms/digital-rebar/</guid>
      <description>Prerequisites  3 nodes (please see hardware requirements) Loadbalancer Digital Rebar Server Talosctl access (see talosctl setup)  Creating a Cluster In this guide we will create an Kubernetes cluster with 1 worker node, and 2 controlplane nodes. We assume an existing digital rebar deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.</description>
    </item>
    
    <item>
      <title>Digital Rebar</title>
      <link>https://talos.dev/docs/v1.0/bare-metal-platforms/digital-rebar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/bare-metal-platforms/digital-rebar/</guid>
      <description>Prerequisites  3 nodes (please see hardware requirements) Loadbalancer Digital Rebar Server Talosctl access (see talosctl setup)  Creating a Cluster In this guide we will create an Kubernetes cluster with 1 worker node, and 2 controlplane nodes. We assume an existing digital rebar deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.</description>
    </item>
    
    <item>
      <title>DigitalOcean</title>
      <link>https://talos.dev/docs/v0.10/cloud-platforms/digitalocean/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/cloud-platforms/digitalocean/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume an existing Space, and some familiarity with DigitalOcean. If you need more information on DigitalOcean specifics, please see the official DigitalOcean documentation.
Create the Image First, download the DigitalOcean image from a Talos release. Extract the archive to get the disk.raw file, compress it using gzip to disk.raw.gz.</description>
    </item>
    
    <item>
      <title>DigitalOcean</title>
      <link>https://talos.dev/docs/v0.11/cloud-platforms/digitalocean/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/cloud-platforms/digitalocean/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume an existing Space, and some familiarity with DigitalOcean. If you need more information on DigitalOcean specifics, please see the official DigitalOcean documentation.
Create the Image First, download the DigitalOcean image from a Talos release. Extract the archive to get the disk.raw file, compress it using gzip to disk.raw.gz.</description>
    </item>
    
    <item>
      <title>DigitalOcean</title>
      <link>https://talos.dev/docs/v0.12/cloud-platforms/digitalocean/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/cloud-platforms/digitalocean/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume an existing Space, and some familiarity with DigitalOcean. If you need more information on DigitalOcean specifics, please see the official DigitalOcean documentation.
Create the Image First, download the DigitalOcean image from a Talos release. Extract the archive to get the disk.raw file, compress it using gzip to disk.raw.gz.</description>
    </item>
    
    <item>
      <title>DigitalOcean</title>
      <link>https://talos.dev/docs/v0.13/cloud-platforms/digitalocean/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/cloud-platforms/digitalocean/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume an existing Space, and some familiarity with DigitalOcean. If you need more information on DigitalOcean specifics, please see the official DigitalOcean documentation.
Create the Image First, download the DigitalOcean image from a Talos release. Extract the archive to get the disk.raw file, compress it using gzip to disk.raw.gz.</description>
    </item>
    
    <item>
      <title>DigitalOcean</title>
      <link>https://talos.dev/docs/v0.14/cloud-platforms/digitalocean/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/cloud-platforms/digitalocean/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume an existing Space, and some familiarity with DigitalOcean. If you need more information on DigitalOcean specifics, please see the official DigitalOcean documentation.
Create the Image First, download the DigitalOcean image from a Talos release. Extract the archive to get the disk.raw file, compress it using gzip to disk.raw.gz.</description>
    </item>
    
    <item>
      <title>DigitalOcean</title>
      <link>https://talos.dev/docs/v0.6/cloud-platforms/digitalocean/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/cloud-platforms/digitalocean/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume an existing Space, and some familiarity with DigitalOcean. If you need more information on DigitalOcean specifics, please see the official DigitalOcean documentation.
Create the Image First, download the DigitalOcean image from a Talos release.
Using an upload method of your choice (doctl does not have Spaces support), upload the image to a space.</description>
    </item>
    
    <item>
      <title>DigitalOcean</title>
      <link>https://talos.dev/docs/v0.7/cloud-platforms/digitalocean/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/cloud-platforms/digitalocean/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume an existing Space, and some familiarity with DigitalOcean. If you need more information on DigitalOcean specifics, please see the official DigitalOcean documentation.
Create the Image First, download the DigitalOcean image from a Talos release. Extract the archive to get the disk.raw file, compress it using gzip to disk.raw.gz.</description>
    </item>
    
    <item>
      <title>DigitalOcean</title>
      <link>https://talos.dev/docs/v0.8/cloud-platforms/digitalocean/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/cloud-platforms/digitalocean/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume an existing Space, and some familiarity with DigitalOcean. If you need more information on DigitalOcean specifics, please see the official DigitalOcean documentation.
Create the Image First, download the DigitalOcean image from a Talos release. Extract the archive to get the disk.raw file, compress it using gzip to disk.raw.gz.</description>
    </item>
    
    <item>
      <title>DigitalOcean</title>
      <link>https://talos.dev/docs/v0.9/cloud-platforms/digitalocean/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/cloud-platforms/digitalocean/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume an existing Space, and some familiarity with DigitalOcean. If you need more information on DigitalOcean specifics, please see the official DigitalOcean documentation.
Create the Image First, download the DigitalOcean image from a Talos release. Extract the archive to get the disk.raw file, compress it using gzip to disk.raw.gz.</description>
    </item>
    
    <item>
      <title>DigitalOcean</title>
      <link>https://talos.dev/docs/v1.0/cloud-platforms/digitalocean/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/cloud-platforms/digitalocean/</guid>
      <description>Creating a Cluster via the CLI In this guide we will create an HA Kubernetes cluster with 1 worker node. We assume an existing Space, and some familiarity with DigitalOcean. If you need more information on DigitalOcean specifics, please see the official DigitalOcean documentation.
Create the Image First, download the DigitalOcean image from a Talos release. Extract the archive to get the disk.raw file, compress it using gzip to disk.raw.gz.</description>
    </item>
    
    <item>
      <title>Disaster Recovery</title>
      <link>https://talos.dev/docs/v0.10/guides/disaster-recovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/disaster-recovery/</guid>
      <description>etcd database backs Kubernetes control plane state, so if the etcd service is unavailable Kubernetes control plane goes down, and the cluster is not recoverable until etcd is recovered with contents. The etcd consistency model builds around the consensus protocol Raft, so for highly-available control plane clusters, loss of one control plane node doesn&amp;rsquo;t impact cluster health. In general, etcd stays up as long as a sufficient number of nodes to maintain quorum are up.</description>
    </item>
    
    <item>
      <title>Disaster Recovery</title>
      <link>https://talos.dev/docs/v0.11/guides/disaster-recovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/disaster-recovery/</guid>
      <description>etcd database backs Kubernetes control plane state, so if the etcd service is unavailable Kubernetes control plane goes down, and the cluster is not recoverable until etcd is recovered with contents. The etcd consistency model builds around the consensus protocol Raft, so for highly-available control plane clusters, loss of one control plane node doesn&amp;rsquo;t impact cluster health. In general, etcd stays up as long as a sufficient number of nodes to maintain quorum are up.</description>
    </item>
    
    <item>
      <title>Disaster Recovery</title>
      <link>https://talos.dev/docs/v0.12/guides/disaster-recovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/disaster-recovery/</guid>
      <description>etcd database backs Kubernetes control plane state, so if the etcd service is unavailable Kubernetes control plane goes down, and the cluster is not recoverable until etcd is recovered with contents. The etcd consistency model builds around the consensus protocol Raft, so for highly-available control plane clusters, loss of one control plane node doesn&amp;rsquo;t impact cluster health. In general, etcd stays up as long as a sufficient number of nodes to maintain quorum are up.</description>
    </item>
    
    <item>
      <title>Disaster Recovery</title>
      <link>https://talos.dev/docs/v0.13/guides/disaster-recovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/disaster-recovery/</guid>
      <description>etcd database backs Kubernetes control plane state, so if the etcd service is unavailable Kubernetes control plane goes down, and the cluster is not recoverable until etcd is recovered with contents. The etcd consistency model builds around the consensus protocol Raft, so for highly-available control plane clusters, loss of one control plane node doesn&amp;rsquo;t impact cluster health. In general, etcd stays up as long as a sufficient number of nodes to maintain quorum are up.</description>
    </item>
    
    <item>
      <title>Disaster Recovery</title>
      <link>https://talos.dev/docs/v0.14/guides/disaster-recovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/disaster-recovery/</guid>
      <description>etcd database backs Kubernetes control plane state, so if the etcd service is unavailable Kubernetes control plane goes down, and the cluster is not recoverable until etcd is recovered with contents. The etcd consistency model builds around the consensus protocol Raft, so for highly-available control plane clusters, loss of one control plane node doesn&amp;rsquo;t impact cluster health. In general, etcd stays up as long as a sufficient number of nodes to maintain quorum are up.</description>
    </item>
    
    <item>
      <title>Disaster Recovery</title>
      <link>https://talos.dev/docs/v1.0/guides/disaster-recovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/disaster-recovery/</guid>
      <description>etcd database backs Kubernetes control plane state, so if the etcd service is unavailable Kubernetes control plane goes down, and the cluster is not recoverable until etcd is recovered with contents. The etcd consistency model builds around the consensus protocol Raft, so for highly-available control plane clusters, loss of one control plane node doesn&amp;rsquo;t impact cluster health. In general, etcd stays up as long as a sufficient number of nodes to maintain quorum are up.</description>
    </item>
    
    <item>
      <title>Discovery</title>
      <link>https://talos.dev/docs/v0.13/guides/discovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/discovery/</guid>
      <description>Video Walkthrough To see a live demo of Cluster Discovery, see the video below:
Registries Peers are aggregated from a number of optional registries. By default, Talos will use the kubernetes and service registries. Either one can be disabled. To disable a registry, set disabled to true (this option is the same for all registries): For example, to disable the service registry:
cluster:  discovery:  enabled: true  registries:  service:  disabled: true Disabling all registries effectively disables member discovery altogether.</description>
    </item>
    
    <item>
      <title>Discovery</title>
      <link>https://talos.dev/docs/v0.14/guides/discovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/discovery/</guid>
      <description>Video Walkthrough To see a live demo of Cluster Discovery, see the video below:
Registries Peers are aggregated from a number of optional registries. By default, Talos will use the kubernetes and service registries. Either one can be disabled. To disable a registry, set disabled to true (this option is the same for all registries): For example, to disable the service registry:
cluster:  discovery:  enabled: true  registries:  service:  disabled: true Disabling all registries effectively disables member discovery altogether.</description>
    </item>
    
    <item>
      <title>Discovery</title>
      <link>https://talos.dev/docs/v1.0/guides/discovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/discovery/</guid>
      <description>Video Walkthrough To see a live demo of Cluster Discovery, see the video below:
Registries Peers are aggregated from a number of optional registries. By default, Talos will use the kubernetes and service registries. Either one can be disabled. To disable a registry, set disabled to true (this option is the same for all registries): For example, to disable the service registry:
cluster:  discovery:  enabled: true  registries:  service:  disabled: true Disabling all registries effectively disables member discovery altogether.</description>
    </item>
    
    <item>
      <title>Disk Encryption</title>
      <link>https://talos.dev/docs/v0.10/guides/disk-encryption/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/disk-encryption/</guid>
      <description>It is possible to enable encryption for system disks at the OS level. As of this writing, only STATE and EPHEMERAL partitions can be encrypted. STATE contains the most sensitive node data: secrets and certs. EPHEMERAL partition may contain some sensitive workload data. Data is encrypted using LUKS2, which is provided by the Linux kernel modules and cryptsetup utility. The operating system will run additional setup steps when encryption is enabled.</description>
    </item>
    
    <item>
      <title>Disk Encryption</title>
      <link>https://talos.dev/docs/v0.11/guides/disk-encryption/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/disk-encryption/</guid>
      <description>It is possible to enable encryption for system disks at the OS level. As of this writing, only STATE and EPHEMERAL partitions can be encrypted. STATE contains the most sensitive node data: secrets and certs. EPHEMERAL partition may contain some sensitive workload data. Data is encrypted using LUKS2, which is provided by the Linux kernel modules and cryptsetup utility. The operating system will run additional setup steps when encryption is enabled.</description>
    </item>
    
    <item>
      <title>Disk Encryption</title>
      <link>https://talos.dev/docs/v0.12/guides/disk-encryption/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/disk-encryption/</guid>
      <description>It is possible to enable encryption for system disks at the OS level. As of this writing, only STATE and EPHEMERAL partitions can be encrypted. STATE contains the most sensitive node data: secrets and certs. EPHEMERAL partition may contain some sensitive workload data. Data is encrypted using LUKS2, which is provided by the Linux kernel modules and cryptsetup utility. The operating system will run additional setup steps when encryption is enabled.</description>
    </item>
    
    <item>
      <title>Disk Encryption</title>
      <link>https://talos.dev/docs/v0.13/guides/disk-encryption/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/disk-encryption/</guid>
      <description>It is possible to enable encryption for system disks at the OS level. As of this writing, only STATE and EPHEMERAL partitions can be encrypted. STATE contains the most sensitive node data: secrets and certs. EPHEMERAL partition may contain some sensitive workload data. Data is encrypted using LUKS2, which is provided by the Linux kernel modules and cryptsetup utility. The operating system will run additional setup steps when encryption is enabled.</description>
    </item>
    
    <item>
      <title>Disk Encryption</title>
      <link>https://talos.dev/docs/v0.14/guides/disk-encryption/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/disk-encryption/</guid>
      <description>It is possible to enable encryption for system disks at the OS level. As of this writing, only STATE and EPHEMERAL partitions can be encrypted. STATE contains the most sensitive node data: secrets and certs. EPHEMERAL partition may contain some sensitive workload data. Data is encrypted using LUKS2, which is provided by the Linux kernel modules and cryptsetup utility. The operating system will run additional setup steps when encryption is enabled.</description>
    </item>
    
    <item>
      <title>Disk Encryption</title>
      <link>https://talos.dev/docs/v0.9/guides/disk-encryption/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/disk-encryption/</guid>
      <description>It is possible to enable encryption for system disks at the OS level. As of this writing, only STATE and EPHEMERAL partitions can be encrypted. STATE contains the most sensitive node data: secrets and certs. EPHEMERAL partition may contain some sensitive workload data. Data is encrypted using LUKS2, which is provided by the Linux kernel modules and cryptsetup utility. The operating system will run additional setup steps when encryption is enabled.</description>
    </item>
    
    <item>
      <title>Disk Encryption</title>
      <link>https://talos.dev/docs/v1.0/guides/disk-encryption/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/disk-encryption/</guid>
      <description>It is possible to enable encryption for system disks at the OS level. As of this writing, only STATE and EPHEMERAL partitions can be encrypted. STATE contains the most sensitive node data: secrets and certs. EPHEMERAL partition may contain some sensitive workload data. Data is encrypted using LUKS2, which is provided by the Linux kernel modules and cryptsetup utility. The operating system will run additional setup steps when encryption is enabled.</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://talos.dev/docs/v0.10/local-platforms/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/local-platforms/docker/</guid>
      <description>In this guide we will create a Kubernetes cluster in Docker, using a containerized version of Talos.
Running Talos in Docker is intended to be used in CI pipelines, and local testing when you need a quick and easy cluster. Furthermore, if you are running Talos in production, it provides an excellent way for developers to develop against the same version of Talos.
Requirements The follow are requirements for running Talos in Docker:</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://talos.dev/docs/v0.11/local-platforms/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/local-platforms/docker/</guid>
      <description>In this guide we will create a Kubernetes cluster in Docker, using a containerized version of Talos.
Running Talos in Docker is intended to be used in CI pipelines, and local testing when you need a quick and easy cluster. Furthermore, if you are running Talos in production, it provides an excellent way for developers to develop against the same version of Talos.
Requirements The follow are requirements for running Talos in Docker:</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://talos.dev/docs/v0.12/local-platforms/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/local-platforms/docker/</guid>
      <description>In this guide we will create a Kubernetes cluster in Docker, using a containerized version of Talos.
Running Talos in Docker is intended to be used in CI pipelines, and local testing when you need a quick and easy cluster. Furthermore, if you are running Talos in production, it provides an excellent way for developers to develop against the same version of Talos.
Requirements The follow are requirements for running Talos in Docker:</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://talos.dev/docs/v0.13/local-platforms/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/local-platforms/docker/</guid>
      <description>In this guide we will create a Kubernetes cluster in Docker, using a containerized version of Talos.
Running Talos in Docker is intended to be used in CI pipelines, and local testing when you need a quick and easy cluster. Furthermore, if you are running Talos in production, it provides an excellent way for developers to develop against the same version of Talos.
Requirements The follow are requirements for running Talos in Docker:</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://talos.dev/docs/v0.14/local-platforms/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/local-platforms/docker/</guid>
      <description>In this guide we will create a Kubernetes cluster in Docker, using a containerized version of Talos.
Running Talos in Docker is intended to be used in CI pipelines, and local testing when you need a quick and easy cluster. Furthermore, if you are running Talos in production, it provides an excellent way for developers to develop against the same version of Talos.
Requirements The follow are requirements for running Talos in Docker:</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://talos.dev/docs/v0.6/local-platforms/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/local-platforms/docker/</guid>
      <description>In this guide we will create a Kubernetes cluster in Docker, using a containerized version of Talos.
Running Talos in Docker is intended to be used in CI pipelines, and local testing when you need a quick and easy cluster. Furthermore, if you are running Talos in production, it provides an excellent way for developers to develop against the same version of Talos.
Requirements The follow are requirements for running Talos in Docker:</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://talos.dev/docs/v0.7/local-platforms/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/local-platforms/docker/</guid>
      <description>In this guide we will create a Kubernetes cluster in Docker, using a containerized version of Talos.
Running Talos in Docker is intended to be used in CI pipelines, and local testing when you need a quick and easy cluster. Furthermore, if you are running Talos in production, it provides an excellent way for developers to develop against the same version of Talos.
Requirements The follow are requirements for running Talos in Docker:</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://talos.dev/docs/v0.8/local-platforms/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/local-platforms/docker/</guid>
      <description>In this guide we will create a Kubernetes cluster in Docker, using a containerized version of Talos.
Running Talos in Docker is intended to be used in CI pipelines, and local testing when you need a quick and easy cluster. Furthermore, if you are running Talos in production, it provides an excellent way for developers to develop against the same version of Talos.
Requirements The follow are requirements for running Talos in Docker:</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://talos.dev/docs/v0.9/local-platforms/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/local-platforms/docker/</guid>
      <description>In this guide we will create a Kubernetes cluster in Docker, using a containerized version of Talos.
Running Talos in Docker is intended to be used in CI pipelines, and local testing when you need a quick and easy cluster. Furthermore, if you are running Talos in production, it provides an excellent way for developers to develop against the same version of Talos.
Requirements The follow are requirements for running Talos in Docker:</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://talos.dev/docs/v1.0/local-platforms/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/local-platforms/docker/</guid>
      <description>In this guide we will create a Kubernetes cluster in Docker, using a containerized version of Talos.
Running Talos in Docker is intended to be used in CI pipelines, and local testing when you need a quick and easy cluster. Furthermore, if you are running Talos in production, it provides an excellent way for developers to develop against the same version of Talos.
Requirements The follow are requirements for running Talos in Docker:</description>
    </item>
    
    <item>
      <title>Editing Machine Configuration</title>
      <link>https://talos.dev/docs/v0.10/guides/editing-machine-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/editing-machine-configuration/</guid>
      <description>Talos node state is fully defined by machine configuration. Initial configuration is delivered to the node at bootstrap time, but configuration can be updated while the node is running.
 Note: Be sure that config is persisted so that configuration updates are not overwritten on reboots. Configuration persistence was enabled by default since Talos 0.5 (persist: true in machine configuration).
 There are three talosctl commands which facilitate machine configuration updates:</description>
    </item>
    
    <item>
      <title>Editing Machine Configuration</title>
      <link>https://talos.dev/docs/v0.11/guides/editing-machine-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/editing-machine-configuration/</guid>
      <description>Talos node state is fully defined by machine configuration. Initial configuration is delivered to the node at bootstrap time, but configuration can be updated while the node is running.
 Note: Be sure that config is persisted so that configuration updates are not overwritten on reboots. Configuration persistence was enabled by default since Talos 0.5 (persist: true in machine configuration).
 There are three talosctl commands which facilitate machine configuration updates:</description>
    </item>
    
    <item>
      <title>Editing Machine Configuration</title>
      <link>https://talos.dev/docs/v0.12/guides/editing-machine-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/editing-machine-configuration/</guid>
      <description>Talos node state is fully defined by machine configuration. Initial configuration is delivered to the node at bootstrap time, but configuration can be updated while the node is running.
 Note: Be sure that config is persisted so that configuration updates are not overwritten on reboots. Configuration persistence was enabled by default since Talos 0.5 (persist: true in machine configuration).
 There are three talosctl commands which facilitate machine configuration updates:</description>
    </item>
    
    <item>
      <title>Editing Machine Configuration</title>
      <link>https://talos.dev/docs/v0.13/guides/editing-machine-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/editing-machine-configuration/</guid>
      <description>Talos node state is fully defined by machine configuration. Initial configuration is delivered to the node at bootstrap time, but configuration can be updated while the node is running.
 Note: Be sure that config is persisted so that configuration updates are not overwritten on reboots. Configuration persistence was enabled by default since Talos 0.5 (persist: true in machine configuration).
 There are three talosctl commands which facilitate machine configuration updates:</description>
    </item>
    
    <item>
      <title>Editing Machine Configuration</title>
      <link>https://talos.dev/docs/v0.14/guides/editing-machine-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/editing-machine-configuration/</guid>
      <description>Talos node state is fully defined by machine configuration. Initial configuration is delivered to the node at bootstrap time, but configuration can be updated while the node is running.
 Note: Be sure that config is persisted so that configuration updates are not overwritten on reboots. Configuration persistence was enabled by default since Talos 0.5 (persist: true in machine configuration).
 There are three talosctl commands which facilitate machine configuration updates:</description>
    </item>
    
    <item>
      <title>Editing Machine Configuration</title>
      <link>https://talos.dev/docs/v0.9/guides/editing-machine-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/editing-machine-configuration/</guid>
      <description>Talos node state is fully defined by machine configuration. Initial configuration is delivered to the node at bootstrap time, but configuration can be updated while the node is running.
 Note: Be sure that config is persisted so that configuration updates are not overwritten on reboots. Configuration persistence was enabled by default since Talos 0.5 (persist: true in machine configuration).
 There are three talosctl commands which facilitate machine configuration updates:</description>
    </item>
    
    <item>
      <title>Editing Machine Configuration</title>
      <link>https://talos.dev/docs/v1.0/guides/editing-machine-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/editing-machine-configuration/</guid>
      <description>Talos node state is fully defined by machine configuration. Initial configuration is delivered to the node at bootstrap time, but configuration can be updated while the node is running.
 Note: Be sure that config is persisted so that configuration updates are not overwritten on reboots. Configuration persistence was enabled by default since Talos 0.5 (persist: true in machine configuration).
 There are three talosctl commands which facilitate machine configuration updates:</description>
    </item>
    
    <item>
      <title>Equinix Metal</title>
      <link>https://talos.dev/docs/v0.10/bare-metal-platforms/equinix-metal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/bare-metal-platforms/equinix-metal/</guid>
      <description>Prerequisites This guide assumes the user has a working API token, the Equinix Metal CLI installed, and some familiarity with the CLI.
Network Booting To install Talos to a server a working TFTP and iPXE server are needed. How this is done varies and is left as an exercise for the user. In general this requires a Talos kernel vmlinuz and initramfs. These assets can be downloaded from a given release.</description>
    </item>
    
    <item>
      <title>Equinix Metal</title>
      <link>https://talos.dev/docs/v0.11/bare-metal-platforms/equinix-metal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/bare-metal-platforms/equinix-metal/</guid>
      <description>Prerequisites This guide assumes the user has a working API token, the Equinix Metal CLI installed, and some familiarity with the CLI.
Network Booting To install Talos to a server a working TFTP and iPXE server are needed. How this is done varies and is left as an exercise for the user. In general this requires a Talos kernel vmlinuz and initramfs. These assets can be downloaded from a given release.</description>
    </item>
    
    <item>
      <title>Equinix Metal</title>
      <link>https://talos.dev/docs/v0.12/bare-metal-platforms/equinix-metal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/bare-metal-platforms/equinix-metal/</guid>
      <description>Prerequisites This guide assumes the user has a working API token, the Equinix Metal CLI installed, and some familiarity with the CLI.
Network Booting To install Talos to a server a working TFTP and iPXE server are needed. How this is done varies and is left as an exercise for the user. In general this requires a Talos kernel vmlinuz and initramfs. These assets can be downloaded from a given release.</description>
    </item>
    
    <item>
      <title>Equinix Metal</title>
      <link>https://talos.dev/docs/v0.13/bare-metal-platforms/equinix-metal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/bare-metal-platforms/equinix-metal/</guid>
      <description>Prerequisites This guide assumes the user has a working API token, the Equinix Metal CLI installed, and some familiarity with the CLI.
Network Booting To install Talos to a server a working TFTP and iPXE server are needed. How this is done varies and is left as an exercise for the user. In general this requires a Talos kernel vmlinuz and initramfs. These assets can be downloaded from a given release.</description>
    </item>
    
    <item>
      <title>Equinix Metal</title>
      <link>https://talos.dev/docs/v0.14/bare-metal-platforms/equinix-metal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/bare-metal-platforms/equinix-metal/</guid>
      <description>Prerequisites This guide assumes the user has a working API token, the Equinix Metal CLI installed, and some familiarity with the CLI.
Network Booting To install Talos to a server a working TFTP and iPXE server are needed. How this is done varies and is left as an exercise for the user. In general this requires a Talos kernel vmlinuz and initramfs. These assets can be downloaded from a given release.</description>
    </item>
    
    <item>
      <title>Equinix Metal</title>
      <link>https://talos.dev/docs/v0.6/bare-metal-platforms/equinix-metal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/bare-metal-platforms/equinix-metal/</guid>
      <description>Talos is known to work on Equinix Metal; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Equinix Metal</title>
      <link>https://talos.dev/docs/v0.7/bare-metal-platforms/equinix-metal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/bare-metal-platforms/equinix-metal/</guid>
      <description>Talos is known to work on Equinix Metal; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Equinix Metal</title>
      <link>https://talos.dev/docs/v0.8/bare-metal-platforms/equinix-metal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/bare-metal-platforms/equinix-metal/</guid>
      <description>Prerequisites This guide assumes the user has a working API token, the Equinix Metal CLI installed, and some familiarity with the CLI.
Network Booting To install Talos to a server a working TFTP and iPXE server are needed. How this is done varies and is left as an exercise for the user. In general this requires a Talos kernel vmlinuz and initramfs. These assets can be downloaded from a given release.</description>
    </item>
    
    <item>
      <title>Equinix Metal</title>
      <link>https://talos.dev/docs/v0.9/bare-metal-platforms/equinix-metal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/bare-metal-platforms/equinix-metal/</guid>
      <description>Prerequisites This guide assumes the user has a working API token, the Equinix Metal CLI installed, and some familiarity with the CLI.
Network Booting To install Talos to a server a working TFTP and iPXE server are needed. How this is done varies and is left as an exercise for the user. In general this requires a Talos kernel vmlinuz and initramfs. These assets can be downloaded from a given release.</description>
    </item>
    
    <item>
      <title>Equinix Metal</title>
      <link>https://talos.dev/docs/v1.0/bare-metal-platforms/equinix-metal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/bare-metal-platforms/equinix-metal/</guid>
      <description>Prerequisites This guide assumes the user has a working API token, the Equinix Metal CLI installed, and some familiarity with the CLI.
Network Booting To install Talos to a server a working TFTP and iPXE server are needed. How this is done varies and is left as an exercise for the user. In general this requires a Talos kernel vmlinuz and initramfs. These assets can be downloaded from a given release.</description>
    </item>
    
    <item>
      <title>Firecracker</title>
      <link>https://talos.dev/docs/v0.10/local-platforms/firecracker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/local-platforms/firecracker/</guid>
      <description>In this guide we will create a Kubernetes cluster using Firecracker.
 Note: Talos on QEMU offers easier way to run Talos in a set of VMs.
 Requirements  Linux a kernel with  KVM enabled (/dev/kvm must exist) CONFIG_NET_SCH_NETEM enabled CONFIG_NET_SCH_INGRESS enabled   at least CAP_SYS_ADMIN and CAP_NET_ADMIN capabilities firecracker (v0.21.0 or higher) bridge, static and firewall CNI plugins from the standard CNI plugins, and tc-redirect-tap CNI plugin from the awslabs tc-redirect-tap installed to /opt/cni/bin iptables /etc/cni/conf.</description>
    </item>
    
    <item>
      <title>Firecracker</title>
      <link>https://talos.dev/docs/v0.11/local-platforms/firecracker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/local-platforms/firecracker/</guid>
      <description>In this guide we will create a Kubernetes cluster using Firecracker.
 Note: Talos on QEMU offers easier way to run Talos in a set of VMs.
 Requirements  Linux a kernel with  KVM enabled (/dev/kvm must exist) CONFIG_NET_SCH_NETEM enabled CONFIG_NET_SCH_INGRESS enabled   at least CAP_SYS_ADMIN and CAP_NET_ADMIN capabilities firecracker (v0.21.0 or higher) bridge, static and firewall CNI plugins from the standard CNI plugins, and tc-redirect-tap CNI plugin from the awslabs tc-redirect-tap installed to /opt/cni/bin iptables /etc/cni/conf.</description>
    </item>
    
    <item>
      <title>Firecracker</title>
      <link>https://talos.dev/docs/v0.12/local-platforms/firecracker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/local-platforms/firecracker/</guid>
      <description>In this guide we will create a Kubernetes cluster using Firecracker.
 Note: Talos on QEMU offers easier way to run Talos in a set of VMs.
 Requirements  Linux a kernel with  KVM enabled (/dev/kvm must exist) CONFIG_NET_SCH_NETEM enabled CONFIG_NET_SCH_INGRESS enabled   at least CAP_SYS_ADMIN and CAP_NET_ADMIN capabilities firecracker (v0.21.0 or higher) bridge, static and firewall CNI plugins from the standard CNI plugins, and tc-redirect-tap CNI plugin from the awslabs tc-redirect-tap installed to /opt/cni/bin iptables /etc/cni/conf.</description>
    </item>
    
    <item>
      <title>Firecracker</title>
      <link>https://talos.dev/docs/v0.6/local-platforms/firecracker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/local-platforms/firecracker/</guid>
      <description>In this guide we will create a Kubernetes cluster using Firecracker.
Requirements  Linux a kernel with  KVM enabled (/dev/kvm must exist) CONFIG_NET_SCH_NETEM enabled CONFIG_NET_SCH_INGRESS enabled   at least CAP_SYS_ADMIN and CAP_NET_ADMIN capabilities firecracker (v0.21.0 or higher) bridge, static and firewall CNI plugins from the standard CNI plugins, and tc-redirect-tap CNI plugin from the awslabs tc-redirect-tap installed to /opt/cni/bin iptables /etc/cni/conf.d directory should exist /var/run/netns directory should exist  Installation How to get firecracker (v0.</description>
    </item>
    
    <item>
      <title>Firecracker</title>
      <link>https://talos.dev/docs/v0.7/local-platforms/firecracker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/local-platforms/firecracker/</guid>
      <description>In this guide we will create a Kubernetes cluster using Firecracker.
 Note: Talos on QEMU offers easier way to run Talos in a set of VMs.
 Requirements  Linux a kernel with  KVM enabled (/dev/kvm must exist) CONFIG_NET_SCH_NETEM enabled CONFIG_NET_SCH_INGRESS enabled   at least CAP_SYS_ADMIN and CAP_NET_ADMIN capabilities firecracker (v0.21.0 or higher) bridge, static and firewall CNI plugins from the standard CNI plugins, and tc-redirect-tap CNI plugin from the awslabs tc-redirect-tap installed to /opt/cni/bin iptables /etc/cni/conf.</description>
    </item>
    
    <item>
      <title>Firecracker</title>
      <link>https://talos.dev/docs/v0.8/local-platforms/firecracker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/local-platforms/firecracker/</guid>
      <description>In this guide we will create a Kubernetes cluster using Firecracker.
 Note: Talos on QEMU offers easier way to run Talos in a set of VMs.
 Requirements  Linux a kernel with  KVM enabled (/dev/kvm must exist) CONFIG_NET_SCH_NETEM enabled CONFIG_NET_SCH_INGRESS enabled   at least CAP_SYS_ADMIN and CAP_NET_ADMIN capabilities firecracker (v0.21.0 or higher) bridge, static and firewall CNI plugins from the standard CNI plugins, and tc-redirect-tap CNI plugin from the awslabs tc-redirect-tap installed to /opt/cni/bin iptables /etc/cni/conf.</description>
    </item>
    
    <item>
      <title>Firecracker</title>
      <link>https://talos.dev/docs/v0.9/local-platforms/firecracker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/local-platforms/firecracker/</guid>
      <description>In this guide we will create a Kubernetes cluster using Firecracker.
 Note: Talos on QEMU offers easier way to run Talos in a set of VMs.
 Requirements  Linux a kernel with  KVM enabled (/dev/kvm must exist) CONFIG_NET_SCH_NETEM enabled CONFIG_NET_SCH_INGRESS enabled   at least CAP_SYS_ADMIN and CAP_NET_ADMIN capabilities firecracker (v0.21.0 or higher) bridge, static and firewall CNI plugins from the standard CNI plugins, and tc-redirect-tap CNI plugin from the awslabs tc-redirect-tap installed to /opt/cni/bin iptables /etc/cni/conf.</description>
    </item>
    
    <item>
      <title>GCP</title>
      <link>https://talos.dev/docs/v0.10/cloud-platforms/gcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/cloud-platforms/gcp/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in GCP with 1 worker node. We will assume an existing Cloud Storage bucket, and some familiarity with Google Cloud. If you need more information on Google Cloud specifics, please see the official Google documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.</description>
    </item>
    
    <item>
      <title>GCP</title>
      <link>https://talos.dev/docs/v0.11/cloud-platforms/gcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/cloud-platforms/gcp/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in GCP with 1 worker node. We will assume an existing Cloud Storage bucket, and some familiarity with Google Cloud. If you need more information on Google Cloud specifics, please see the official Google documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.</description>
    </item>
    
    <item>
      <title>GCP</title>
      <link>https://talos.dev/docs/v0.12/cloud-platforms/gcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/cloud-platforms/gcp/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in GCP with 1 worker node. We will assume an existing Cloud Storage bucket, and some familiarity with Google Cloud. If you need more information on Google Cloud specifics, please see the official Google documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.</description>
    </item>
    
    <item>
      <title>GCP</title>
      <link>https://talos.dev/docs/v0.13/cloud-platforms/gcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/cloud-platforms/gcp/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in GCP with 1 worker node. We will assume an existing Cloud Storage bucket, and some familiarity with Google Cloud. If you need more information on Google Cloud specifics, please see the official Google documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.</description>
    </item>
    
    <item>
      <title>GCP</title>
      <link>https://talos.dev/docs/v0.14/cloud-platforms/gcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/cloud-platforms/gcp/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in GCP with 1 worker node. We will assume an existing Cloud Storage bucket, and some familiarity with Google Cloud. If you need more information on Google Cloud specifics, please see the official Google documentation.
jq and talosctl also needs to be installed
Manual Setup Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup.</description>
    </item>
    
    <item>
      <title>GCP</title>
      <link>https://talos.dev/docs/v0.6/cloud-platforms/gcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/cloud-platforms/gcp/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in GCP with 1 worker node. We will assume an existing Cloud Storage bucket, and some familiarity with Google Cloud. If you need more information on Google Cloud specifics, please see the official Google documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.</description>
    </item>
    
    <item>
      <title>GCP</title>
      <link>https://talos.dev/docs/v0.7/cloud-platforms/gcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/cloud-platforms/gcp/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in GCP with 1 worker node. We will assume an existing Cloud Storage bucket, and some familiarity with Google Cloud. If you need more information on Google Cloud specifics, please see the official Google documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.</description>
    </item>
    
    <item>
      <title>GCP</title>
      <link>https://talos.dev/docs/v0.8/cloud-platforms/gcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/cloud-platforms/gcp/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in GCP with 1 worker node. We will assume an existing Cloud Storage bucket, and some familiarity with Google Cloud. If you need more information on Google Cloud specifics, please see the official Google documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.</description>
    </item>
    
    <item>
      <title>GCP</title>
      <link>https://talos.dev/docs/v0.9/cloud-platforms/gcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/cloud-platforms/gcp/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in GCP with 1 worker node. We will assume an existing Cloud Storage bucket, and some familiarity with Google Cloud. If you need more information on Google Cloud specifics, please see the official Google documentation.
Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup. Edit the variables below with your correct information.</description>
    </item>
    
    <item>
      <title>GCP</title>
      <link>https://talos.dev/docs/v1.0/cloud-platforms/gcp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/cloud-platforms/gcp/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in GCP with 1 worker node. We will assume an existing Cloud Storage bucket, and some familiarity with Google Cloud. If you need more information on Google Cloud specifics, please see the official Google documentation.
jq and talosctl also needs to be installed
Manual Setup Environment Setup We&amp;rsquo;ll make use of the following environment variables throughout the setup.</description>
    </item>
    
    <item>
      <title>Hetzner</title>
      <link>https://talos.dev/docs/v0.13/cloud-platforms/hetzner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/cloud-platforms/hetzner/</guid>
      <description>Upload image Hetzner Cloud does not support uploading custom images. You can email their support to get a Talos ISO uploaded by following issues:3599 or you can prepare image snapshot by yourself.
There are two options to upload your own.
 Run an instance in rescue mode and replaces the system OS with the Talos image Use Hashicorp packer to prepare an image  Rescue mode Create a new Server in the Hetzner console.</description>
    </item>
    
    <item>
      <title>Hetzner</title>
      <link>https://talos.dev/docs/v0.14/cloud-platforms/hetzner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/cloud-platforms/hetzner/</guid>
      <description>Upload image Hetzner Cloud does not support uploading custom images. You can email their support to get a Talos ISO uploaded by following issues:3599 or you can prepare image snapshot by yourself.
There are two options to upload your own.
 Run an instance in rescue mode and replace the system OS with the Talos image Use Hashicorp packer to prepare an image  Rescue mode Create a new Server in the Hetzner console.</description>
    </item>
    
    <item>
      <title>Hetzner</title>
      <link>https://talos.dev/docs/v1.0/cloud-platforms/hetzner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/cloud-platforms/hetzner/</guid>
      <description>Upload image Hetzner Cloud does not support uploading custom images. You can email their support to get a Talos ISO uploaded by following issues:3599 or you can prepare image snapshot by yourself.
There are two options to upload your own.
 Run an instance in rescue mode and replace the system OS with the Talos image Use Hashicorp packer to prepare an image  Rescue mode Create a new Server in the Hetzner console.</description>
    </item>
    
    <item>
      <title>Hyper-V</title>
      <link>https://talos.dev/docs/v0.10/virtualized-platforms/hyper-v/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/virtualized-platforms/hyper-v/</guid>
      <description>Talos is known to work on Hyper-V; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Hyper-V</title>
      <link>https://talos.dev/docs/v0.11/virtualized-platforms/hyper-v/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/virtualized-platforms/hyper-v/</guid>
      <description>Talos is known to work on Hyper-V; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Hyper-V</title>
      <link>https://talos.dev/docs/v0.12/virtualized-platforms/hyper-v/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/virtualized-platforms/hyper-v/</guid>
      <description>Talos is known to work on Hyper-V; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Hyper-V</title>
      <link>https://talos.dev/docs/v0.13/virtualized-platforms/hyper-v/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/virtualized-platforms/hyper-v/</guid>
      <description>Talos is known to work on Hyper-V; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Hyper-V</title>
      <link>https://talos.dev/docs/v0.14/virtualized-platforms/hyper-v/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/virtualized-platforms/hyper-v/</guid>
      <description>Talos is known to work on Hyper-V; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Hyper-V</title>
      <link>https://talos.dev/docs/v0.6/virtualized-platforms/hyper-v/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/virtualized-platforms/hyper-v/</guid>
      <description>Talos is known to work on Hyper-V; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Hyper-V</title>
      <link>https://talos.dev/docs/v0.7/virtualized-platforms/hyper-v/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/virtualized-platforms/hyper-v/</guid>
      <description>Talos is known to work on Hyper-V; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Hyper-V</title>
      <link>https://talos.dev/docs/v0.8/virtualized-platforms/hyper-v/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/virtualized-platforms/hyper-v/</guid>
      <description>Talos is known to work on Hyper-V; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Hyper-V</title>
      <link>https://talos.dev/docs/v0.9/virtualized-platforms/hyper-v/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/virtualized-platforms/hyper-v/</guid>
      <description>Talos is known to work on Hyper-V; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Hyper-V</title>
      <link>https://talos.dev/docs/v1.0/virtualized-platforms/hyper-v/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/virtualized-platforms/hyper-v/</guid>
      <description>Pre-requisities  Download the latest talos-amd64.iso ISO from github releases page Create a New-TalosVM folder in any of your PS Module Path folders $env:PSModulePath -split &#39;;&#39; and save the New-TalosVM.psm1 there  Plan Overview Here we will create a basic 3 node cluster with a single control-plane node and two worker nodes. The only difference between control plane and worker node is the amount of RAM and an additional storage VHD.</description>
    </item>
    
    <item>
      <title>Jetson Nano</title>
      <link>https://talos.dev/docs/v1.0/single-board-computers/jetson_nano/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/single-board-computers/jetson_nano/</guid>
      <description>Prerequisites You will need
 talosctl an SD card/USB drive crane CLI  Download the latest talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Flashing the firmware to on-board SPI flash  Flashing the firmware only needs to be done once.
 We will use the R32.6.1 release for the Jetson Nano. Most of the instructions is similar to this doc except that we&amp;rsquo;d be using a patched version of u-boot so that USB boot also works.</description>
    </item>
    
    <item>
      <title>Kernel</title>
      <link>https://talos.dev/docs/v0.10/reference/kernel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/reference/kernel/</guid>
      <description>Commandline Parameters Talos supports a number of kernel commandline parameters. Some are required for it to operate. Others are optional and useful in certain circumstances.
Several of these are enforced by the Kernel Self Protection Project KSPP.
Required parameters:
 talos.config: the HTTP(S) URL at which the machine configuration data can be found talos.platform: can be one of aws, azure, container, digitalocean, gcp, metal, packet, or vmware init_on_alloc=1: required by KSPP slab_nomerge: required by KSPP pti=on: required by KSPP  Recommended parameters:</description>
    </item>
    
    <item>
      <title>Kernel</title>
      <link>https://talos.dev/docs/v0.11/reference/kernel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/reference/kernel/</guid>
      <description>Commandline Parameters Talos supports a number of kernel commandline parameters. Some are required for it to operate. Others are optional and useful in certain circumstances.
Several of these are enforced by the Kernel Self Protection Project KSPP.
Required parameters:
 talos.config: the HTTP(S) URL at which the machine configuration data can be found talos.platform: can be one of aws, azure, container, digitalocean, gcp, metal, packet, or vmware init_on_alloc=1: required by KSPP slab_nomerge: required by KSPP pti=on: required by KSPP  Recommended parameters:</description>
    </item>
    
    <item>
      <title>Kernel</title>
      <link>https://talos.dev/docs/v0.12/reference/kernel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/reference/kernel/</guid>
      <description>Commandline Parameters Talos supports a number of kernel commandline parameters. Some are required for it to operate. Others are optional and useful in certain circumstances.
Several of these are enforced by the Kernel Self Protection Project KSPP.
Required parameters:
 talos.config: the HTTP(S) URL at which the machine configuration data can be found talos.platform: can be one of aws, azure, container, digitalocean, gcp, metal, packet, or vmware init_on_alloc=1: required by KSPP slab_nomerge: required by KSPP pti=on: required by KSPP  Recommended parameters:</description>
    </item>
    
    <item>
      <title>Kernel</title>
      <link>https://talos.dev/docs/v0.13/reference/kernel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/reference/kernel/</guid>
      <description>Commandline Parameters Talos supports a number of kernel commandline parameters. Some are required for it to operate. Others are optional and useful in certain circumstances.
Several of these are enforced by the Kernel Self Protection Project KSPP.
Required parameters:
 talos.config: the HTTP(S) URL at which the machine configuration data can be found talos.platform: can be one of aws, azure, container, digitalocean, gcp, metal, packet, or vmware init_on_alloc=1: required by KSPP slab_nomerge: required by KSPP pti=on: required by KSPP  Recommended parameters:</description>
    </item>
    
    <item>
      <title>Kernel</title>
      <link>https://talos.dev/docs/v0.14/reference/kernel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/reference/kernel/</guid>
      <description>Commandline Parameters Talos supports a number of kernel commandline parameters. Some are required for it to operate. Others are optional and useful in certain circumstances.
Several of these are enforced by the Kernel Self Protection Project KSPP.
Required parameters:
 talos.config: the HTTP(S) URL at which the machine configuration data can be found talos.platform: can be one of aws, azure, container, digitalocean, gcp, metal, packet, or vmware init_on_alloc=1: required by KSPP slab_nomerge: required by KSPP pti=on: required by KSPP  Recommended parameters:</description>
    </item>
    
    <item>
      <title>Kernel</title>
      <link>https://talos.dev/docs/v0.9/reference/kernel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/reference/kernel/</guid>
      <description>Commandline Parameters Talos supports a number of kernel commandline parameters. Some are required for it to operate. Others are optional and useful in certain circumstances.
Several of these are enforced by the Kernel Self Protection Project KSPP.
Required parameters:
 talos.config: the HTTP(S) URL at which the machine configuration data can be found talos.platform: can be one of aws, azure, container, digitalocean, gcp, metal, packet, or vmware init_on_alloc=1: required by KSPP slab_nomerge: required by KSPP pti=on: required by KSPP  Recommended parameters:</description>
    </item>
    
    <item>
      <title>Kernel</title>
      <link>https://talos.dev/docs/v1.0/reference/kernel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/reference/kernel/</guid>
      <description>Commandline Parameters Talos supports a number of kernel commandline parameters. Some are required for it to operate. Others are optional and useful in certain circumstances.
Several of these are enforced by the Kernel Self Protection Project KSPP.
Required parameters:
 talos.config: the HTTP(S) URL at which the machine configuration data can be found talos.platform: can be one of aws, azure, container, digitalocean, gcp, metal, packet, or vmware init_on_alloc=1: required by KSPP slab_nomerge: required by KSPP pti=on: required by KSPP  Recommended parameters:</description>
    </item>
    
    <item>
      <title>KubeSpan</title>
      <link>https://talos.dev/docs/v0.13/guides/kubespan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/kubespan/</guid>
      <description>KubeSpan is a feature of Talos that automates the setup and maintenance of a full mesh WireGuard network for your cluster, giving you the ablility to operate hybrid Kubernetes clusters that can span the edge, datacenter, and cloud. Management of keys and discovery of peers can be completely automated for a zero-touch experience that makes it simple and easy to create hybrid clusters.
Video Walkthrough To learn more about KubeSpan, see the video below:</description>
    </item>
    
    <item>
      <title>KubeSpan</title>
      <link>https://talos.dev/docs/v0.14/guides/kubespan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/kubespan/</guid>
      <description>KubeSpan is a feature of Talos that automates the setup and maintenance of a full mesh WireGuard network for your cluster, giving you the ability to operate hybrid Kubernetes clusters that can span the edge, datacenter, and cloud. Management of keys and discovery of peers can be completely automated for a zero-touch experience that makes it simple and easy to create hybrid clusters.
Video Walkthrough To learn more about KubeSpan, see the video below:</description>
    </item>
    
    <item>
      <title>KubeSpan</title>
      <link>https://talos.dev/docs/v1.0/guides/kubespan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/kubespan/</guid>
      <description>KubeSpan is a feature of Talos that automates the setup and maintenance of a full mesh WireGuard network for your cluster, giving you the ability to operate hybrid Kubernetes clusters that can span the edge, datacenter, and cloud. Management of keys and discovery of peers can be completely automated for a zero-touch experience that makes it simple and easy to create hybrid clusters.
Video Walkthrough To learn more about KubeSpan, see the video below:</description>
    </item>
    
    <item>
      <title>KVM</title>
      <link>https://talos.dev/docs/v0.10/virtualized-platforms/kvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/virtualized-platforms/kvm/</guid>
      <description>Talos is known to work on KVM; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>KVM</title>
      <link>https://talos.dev/docs/v0.11/virtualized-platforms/kvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/virtualized-platforms/kvm/</guid>
      <description>Talos is known to work on KVM; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>KVM</title>
      <link>https://talos.dev/docs/v0.12/virtualized-platforms/kvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/virtualized-platforms/kvm/</guid>
      <description>Talos is known to work on KVM; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>KVM</title>
      <link>https://talos.dev/docs/v0.13/virtualized-platforms/kvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/virtualized-platforms/kvm/</guid>
      <description>Talos is known to work on KVM; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>KVM</title>
      <link>https://talos.dev/docs/v0.14/virtualized-platforms/kvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/virtualized-platforms/kvm/</guid>
      <description>Talos is known to work on KVM; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>KVM</title>
      <link>https://talos.dev/docs/v0.6/virtualized-platforms/kvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/virtualized-platforms/kvm/</guid>
      <description>Talos is known to work on KVM; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>KVM</title>
      <link>https://talos.dev/docs/v0.7/virtualized-platforms/kvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/virtualized-platforms/kvm/</guid>
      <description>Talos is known to work on KVM; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>KVM</title>
      <link>https://talos.dev/docs/v0.8/virtualized-platforms/kvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/virtualized-platforms/kvm/</guid>
      <description>Talos is known to work on KVM; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>KVM</title>
      <link>https://talos.dev/docs/v0.9/virtualized-platforms/kvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/virtualized-platforms/kvm/</guid>
      <description>Talos is known to work on KVM; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>KVM</title>
      <link>https://talos.dev/docs/v1.0/virtualized-platforms/kvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/virtualized-platforms/kvm/</guid>
      <description>Talos is known to work on KVM; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Libre Computer Board ALL-H3-CC</title>
      <link>https://talos.dev/docs/v0.10/single-board-computers/libretech_all_h3_cc_h5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/single-board-computers/libretech_all_h3_cc_h5/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-libretech_all_h3_cc_h5-arm64.img.xz xz -d metal-libretech_all_h3_cc_h5-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Libre Computer Board ALL-H3-CC</title>
      <link>https://talos.dev/docs/v0.11/single-board-computers/libretech_all_h3_cc_h5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/single-board-computers/libretech_all_h3_cc_h5/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-libretech_all_h3_cc_h5-arm64.img.xz xz -d metal-libretech_all_h3_cc_h5-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Libre Computer Board ALL-H3-CC</title>
      <link>https://talos.dev/docs/v0.12/single-board-computers/libretech_all_h3_cc_h5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/single-board-computers/libretech_all_h3_cc_h5/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-libretech_all_h3_cc_h5-arm64.img.xz xz -d metal-libretech_all_h3_cc_h5-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Libre Computer Board ALL-H3-CC</title>
      <link>https://talos.dev/docs/v0.13/single-board-computers/libretech_all_h3_cc_h5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/single-board-computers/libretech_all_h3_cc_h5/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-libretech_all_h3_cc_h5-arm64.img.xz xz -d metal-libretech_all_h3_cc_h5-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Libre Computer Board ALL-H3-CC</title>
      <link>https://talos.dev/docs/v0.14/single-board-computers/libretech_all_h3_cc_h5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/single-board-computers/libretech_all_h3_cc_h5/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-libretech_all_h3_cc_h5-arm64.img.xz xz -d metal-libretech_all_h3_cc_h5-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Libre Computer Board ALL-H3-CC</title>
      <link>https://talos.dev/docs/v0.8/single-board-computers/libretech_all_h3_cc_h5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/single-board-computers/libretech_all_h3_cc_h5/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/download/v0.8.4/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/download/v0.8.4/metal-libretech_all_h3_cc_h5-arm64.img.xz xz -d metal-libretech_all_h3_cc_h5-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on Mac OS. In this example we will assume /dev/mmcblk0.</description>
    </item>
    
    <item>
      <title>Libre Computer Board ALL-H3-CC</title>
      <link>https://talos.dev/docs/v0.9/single-board-computers/libretech_all_h3_cc_h5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/single-board-computers/libretech_all_h3_cc_h5/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-libretech_all_h3_cc_h5-arm64.img.xz xz -d metal-libretech_all_h3_cc_h5-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on Mac OS. In this example we will assume /dev/mmcblk0.</description>
    </item>
    
    <item>
      <title>Libre Computer Board ALL-H3-CC</title>
      <link>https://talos.dev/docs/v1.0/single-board-computers/libretech_all_h3_cc_h5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/single-board-computers/libretech_all_h3_cc_h5/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-libretech_all_h3_cc_h5-arm64.img.xz xz -d metal-libretech_all_h3_cc_h5-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Logging</title>
      <link>https://talos.dev/docs/v0.14/guides/logging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/logging/</guid>
      <description>Viewing logs Kernel messages can be retrieved with talosctl dmesg command:
$ talosctl -n 172.20.1.2 dmesg  172.20.1.2: kern: info: [2021-11-10T10:09:37.662764956Z]: Command line: init_on_alloc=1 slab_nomerge pti=on consoleblank=0 nvme_core.io_timeout=4294967295 random.trust_cpu=on printk.devkmsg=on ima_template=ima-ng ima_appraise=fix ima_hash=sha512 console=ttyS0 reboot=k panic=1 talos.shutdown=halt talos.platform=metal talos.config=http://172.20.1.1:40101/config.yaml [...] Service logs can be retrieved with talosctl logs command:
$ talosctl -n 172.20.1.2 services  NODE SERVICE STATE HEALTH LAST CHANGE LAST EVENT 172.20.1.2 apid Running OK 19m27s ago Health check successful 172.</description>
    </item>
    
    <item>
      <title>Logging</title>
      <link>https://talos.dev/docs/v1.0/guides/logging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/logging/</guid>
      <description>Viewing logs Kernel messages can be retrieved with talosctl dmesg command:
$ talosctl -n 172.20.1.2 dmesg  172.20.1.2: kern: info: [2021-11-10T10:09:37.662764956Z]: Command line: init_on_alloc=1 slab_nomerge pti=on consoleblank=0 nvme_core.io_timeout=4294967295 random.trust_cpu=on printk.devkmsg=on ima_template=ima-ng ima_appraise=fix ima_hash=sha512 console=ttyS0 reboot=k panic=1 talos.shutdown=halt talos.platform=metal talos.config=http://172.20.1.1:40101/config.yaml [...] Service logs can be retrieved with talosctl logs command:
$ talosctl -n 172.20.1.2 services  NODE SERVICE STATE HEALTH LAST CHANGE LAST EVENT 172.20.1.2 apid Running OK 19m27s ago Health check successful 172.</description>
    </item>
    
    <item>
      <title>Managing PKI</title>
      <link>https://talos.dev/docs/v0.10/guides/managing-pki/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/managing-pki/</guid>
      <description>Generating an Administrator Key Pair In order to create a key pair, you will need the root CA.
Save the the CA public key, and CA private key as ca.crt, and ca.key respectively. Now, run the following commands to generate a certificate:
talosctl gen key --name admin talosctl gen csr --key admin.key --ip 127.0.0.1 talosctl gen crt --ca ca --csr admin.csr --name admin Now, base64 encode admin.crt, and admin.key:
cat admin.</description>
    </item>
    
    <item>
      <title>Managing PKI</title>
      <link>https://talos.dev/docs/v0.11/guides/managing-pki/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/managing-pki/</guid>
      <description>Generating an Administrator Key Pair In order to create a key pair, you will need the root CA.
Save the the CA public key, and CA private key as ca.crt, and ca.key respectively. Now, run the following commands to generate a certificate:
talosctl gen key --name admin talosctl gen csr --key admin.key --ip 127.0.0.1 talosctl gen crt --ca ca --csr admin.csr --name admin Now, base64 encode admin.crt, and admin.key:
cat admin.</description>
    </item>
    
    <item>
      <title>Managing PKI</title>
      <link>https://talos.dev/docs/v0.12/guides/managing-pki/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/managing-pki/</guid>
      <description>Generating an Administrator Key Pair In order to create a key pair, you will need the root CA.
Save the the CA public key, and CA private key as ca.crt, and ca.key respectively. Now, run the following commands to generate a certificate:
talosctl gen key --name admin talosctl gen csr --key admin.key --ip 127.0.0.1 talosctl gen crt --ca ca --csr admin.csr --name admin Now, base64 encode admin.crt, and admin.key:
cat admin.</description>
    </item>
    
    <item>
      <title>Managing PKI</title>
      <link>https://talos.dev/docs/v0.13/guides/managing-pki/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/managing-pki/</guid>
      <description>Generating an Administrator Key Pair In order to create a key pair, you will need the root CA.
Save the the CA public key, and CA private key as ca.crt, and ca.key respectively. Now, run the following commands to generate a certificate:
talosctl gen key --name admin talosctl gen csr --key admin.key --ip 127.0.0.1 talosctl gen crt --ca ca --csr admin.csr --name admin Now, base64 encode admin.crt, and admin.key:
cat admin.</description>
    </item>
    
    <item>
      <title>Managing PKI</title>
      <link>https://talos.dev/docs/v0.14/guides/managing-pki/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/managing-pki/</guid>
      <description>Generating an Administrator Key Pair In order to create a key pair, you will need the root CA.
Save the the CA public key, and CA private key as ca.crt, and ca.key respectively. Now, run the following commands to generate a certificate:
talosctl gen key --name admin talosctl gen csr --key admin.key --ip 127.0.0.1 talosctl gen crt --ca ca --csr admin.csr --name admin Now, base64 encode admin.crt, and admin.key:
cat admin.</description>
    </item>
    
    <item>
      <title>Managing PKI</title>
      <link>https://talos.dev/docs/v0.6/guides/managing-pki/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/guides/managing-pki/</guid>
      <description>Generating an Administrator Key Pair In order to create a key pair, you will need the root CA.
Save the the CA public key, and CA private key as ca.crt, and ca.key respectively. Now, run the following commands to generate a certificate:
talosctl gen key --name admin talosctl gen csr --key admin.key --ip 127.0.0.1 talosctl gen crt --ca ca --csr admin.csr --name admin Now, base64 encode admin.crt, and admin.key:
cat admin.</description>
    </item>
    
    <item>
      <title>Managing PKI</title>
      <link>https://talos.dev/docs/v0.7/guides/managing-pki/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/guides/managing-pki/</guid>
      <description>Generating an Administrator Key Pair In order to create a key pair, you will need the root CA.
Save the the CA public key, and CA private key as ca.crt, and ca.key respectively. Now, run the following commands to generate a certificate:
talosctl gen key --name admin talosctl gen csr --key admin.key --ip 127.0.0.1 talosctl gen crt --ca ca --csr admin.csr --name admin Now, base64 encode admin.crt, and admin.key:
cat admin.</description>
    </item>
    
    <item>
      <title>Managing PKI</title>
      <link>https://talos.dev/docs/v0.8/guides/managing-pki/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/guides/managing-pki/</guid>
      <description>Generating an Administrator Key Pair In order to create a key pair, you will need the root CA.
Save the the CA public key, and CA private key as ca.crt, and ca.key respectively. Now, run the following commands to generate a certificate:
talosctl gen key --name admin talosctl gen csr --key admin.key --ip 127.0.0.1 talosctl gen crt --ca ca --csr admin.csr --name admin Now, base64 encode admin.crt, and admin.key:
cat admin.</description>
    </item>
    
    <item>
      <title>Managing PKI</title>
      <link>https://talos.dev/docs/v0.9/guides/managing-pki/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/managing-pki/</guid>
      <description>Generating an Administrator Key Pair In order to create a key pair, you will need the root CA.
Save the the CA public key, and CA private key as ca.crt, and ca.key respectively. Now, run the following commands to generate a certificate:
talosctl gen key --name admin talosctl gen csr --key admin.key --ip 127.0.0.1 talosctl gen crt --ca ca --csr admin.csr --name admin Now, base64 encode admin.crt, and admin.key:
cat admin.</description>
    </item>
    
    <item>
      <title>Managing PKI</title>
      <link>https://talos.dev/docs/v1.0/guides/managing-pki/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/managing-pki/</guid>
      <description>Generating an Administrator Key Pair In order to create a key pair, you will need the root CA.
Save the the CA public key, and CA private key as ca.crt, and ca.key respectively. Now, run the following commands to generate a certificate:
talosctl gen key --name admin talosctl gen csr --key admin.key --ip 127.0.0.1 talosctl gen crt --ca ca --csr admin.csr --name admin Now, base64 encode admin.crt, and admin.key:
cat admin.</description>
    </item>
    
    <item>
      <title>Matchbox</title>
      <link>https://talos.dev/docs/v0.10/bare-metal-platforms/matchbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/bare-metal-platforms/matchbox/</guid>
      <description>Creating a Cluster In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We assume an existing load balancer, matchbox deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.
Create the Machine Configuration Files Generating Base Configurations Using the DNS name of the load balancer, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>Matchbox</title>
      <link>https://talos.dev/docs/v0.11/bare-metal-platforms/matchbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/bare-metal-platforms/matchbox/</guid>
      <description>Creating a Cluster In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We assume an existing load balancer, matchbox deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.
Create the Machine Configuration Files Generating Base Configurations Using the DNS name of the load balancer, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>Matchbox</title>
      <link>https://talos.dev/docs/v0.12/bare-metal-platforms/matchbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/bare-metal-platforms/matchbox/</guid>
      <description>Creating a Cluster In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We assume an existing load balancer, matchbox deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.
Create the Machine Configuration Files Generating Base Configurations Using the DNS name of the load balancer, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>Matchbox</title>
      <link>https://talos.dev/docs/v0.13/bare-metal-platforms/matchbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/bare-metal-platforms/matchbox/</guid>
      <description>Creating a Cluster In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We assume an existing load balancer, matchbox deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.
Create the Machine Configuration Files Generating Base Configurations Using the DNS name of the load balancer, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>Matchbox</title>
      <link>https://talos.dev/docs/v0.14/bare-metal-platforms/matchbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/bare-metal-platforms/matchbox/</guid>
      <description>Creating a Cluster In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We assume an existing load balancer, matchbox deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.
Create the Machine Configuration Files Generating Base Configurations Using the DNS name of the load balancer, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>Matchbox</title>
      <link>https://talos.dev/docs/v0.6/bare-metal-platforms/matchbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/bare-metal-platforms/matchbox/</guid>
      <description>Creating a Cluster In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We assume an existing load balancer, matchbox deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.
Create the Machine Configuration Files Generating Base Configurations Using the DNS name of the load balancer, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>Matchbox</title>
      <link>https://talos.dev/docs/v0.7/bare-metal-platforms/matchbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/bare-metal-platforms/matchbox/</guid>
      <description>Creating a Cluster In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We assume an existing load balancer, matchbox deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.
Create the Machine Configuration Files Generating Base Configurations Using the DNS name of the load balancer, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>Matchbox</title>
      <link>https://talos.dev/docs/v0.8/bare-metal-platforms/matchbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/bare-metal-platforms/matchbox/</guid>
      <description>Creating a Cluster In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We assume an existing load balancer, matchbox deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.
Create the Machine Configuration Files Generating Base Configurations Using the DNS name of the load balancer, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>Matchbox</title>
      <link>https://talos.dev/docs/v0.9/bare-metal-platforms/matchbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/bare-metal-platforms/matchbox/</guid>
      <description>Creating a Cluster In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We assume an existing load balancer, matchbox deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.
Create the Machine Configuration Files Generating Base Configurations Using the DNS name of the load balancer, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>Matchbox</title>
      <link>https://talos.dev/docs/v1.0/bare-metal-platforms/matchbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/bare-metal-platforms/matchbox/</guid>
      <description>Creating a Cluster In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We assume an existing load balancer, matchbox deployment, and some familiarity with iPXE.
We leave it up to the user to decide if they would like to use static networking, or DHCP. The setup and configuration of DHCP will not be covered.
Create the Machine Configuration Files Generating Base Configurations Using the DNS name of the load balancer, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>Nocloud</title>
      <link>https://talos.dev/docs/v0.13/cloud-platforms/nocloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/cloud-platforms/nocloud/</guid>
      <description>Talos supports nocloud data source implementation.
There are two ways to configure Talos server with nocloud platform:
 via SMBIOS &amp;ldquo;serial number&amp;rdquo; option using CDROM or USB-flash filesystem  SMBIOS Serial Number This method requires the network connection to be up (e.g. via DHCP). Configuration is delivered from the HTTP server.
ds=nocloud-net;s=http://10.10.0.1/configs/;h=HOSTNAME After the network initialization is complete, Talos fetches:
 the machine config from http://10.10.0.1/configs/user-data the network config (if available) from http://10.</description>
    </item>
    
    <item>
      <title>Nocloud</title>
      <link>https://talos.dev/docs/v0.14/cloud-platforms/nocloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/cloud-platforms/nocloud/</guid>
      <description>Talos supports nocloud data source implementation.
There are two ways to configure Talos server with nocloud platform:
 via SMBIOS &amp;ldquo;serial number&amp;rdquo; option using CDROM or USB-flash filesystem  SMBIOS Serial Number This method requires the network connection to be up (e.g. via DHCP). Configuration is delivered from the HTTP server.
ds=nocloud-net;s=http://10.10.0.1/configs/;h=HOSTNAME After the network initialization is complete, Talos fetches:
 the machine config from http://10.10.0.1/configs/user-data the network config (if available) from http://10.</description>
    </item>
    
    <item>
      <title>Nocloud</title>
      <link>https://talos.dev/docs/v1.0/cloud-platforms/nocloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/cloud-platforms/nocloud/</guid>
      <description>Talos supports nocloud data source implementation.
There are two ways to configure Talos server with nocloud platform:
 via SMBIOS &amp;ldquo;serial number&amp;rdquo; option using CDROM or USB-flash filesystem  SMBIOS Serial Number This method requires the network connection to be up (e.g. via DHCP). Configuration is delivered from the HTTP server.
ds=nocloud-net;s=http://10.10.0.1/configs/;h=HOSTNAME After the network initialization is complete, Talos fetches:
 the machine config from http://10.10.0.1/configs/user-data the network config (if available) from http://10.</description>
    </item>
    
    <item>
      <title>Openstack</title>
      <link>https://talos.dev/docs/v0.10/cloud-platforms/openstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/cloud-platforms/openstack/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in Openstack with 1 worker node. We will assume an existing some familiarity with Openstack. If you need more information on Openstack specifics, please see the official Openstack documentation.
Environment Setup You should have an existing openrc file. This file will provide environment variables necessary to talk to your Openstack cloud. See here for instructions on fetching this file.</description>
    </item>
    
    <item>
      <title>Openstack</title>
      <link>https://talos.dev/docs/v0.11/cloud-platforms/openstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/cloud-platforms/openstack/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in Openstack with 1 worker node. We will assume an existing some familiarity with Openstack. If you need more information on Openstack specifics, please see the official Openstack documentation.
Environment Setup You should have an existing openrc file. This file will provide environment variables necessary to talk to your Openstack cloud. See here for instructions on fetching this file.</description>
    </item>
    
    <item>
      <title>Openstack</title>
      <link>https://talos.dev/docs/v0.12/cloud-platforms/openstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/cloud-platforms/openstack/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in Openstack with 1 worker node. We will assume an existing some familiarity with Openstack. If you need more information on Openstack specifics, please see the official Openstack documentation.
Environment Setup You should have an existing openrc file. This file will provide environment variables necessary to talk to your Openstack cloud. See here for instructions on fetching this file.</description>
    </item>
    
    <item>
      <title>Openstack</title>
      <link>https://talos.dev/docs/v0.13/cloud-platforms/openstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/cloud-platforms/openstack/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in Openstack with 1 worker node. We will assume an existing some familiarity with Openstack. If you need more information on Openstack specifics, please see the official Openstack documentation.
Environment Setup You should have an existing openrc file. This file will provide environment variables necessary to talk to your Openstack cloud. See here for instructions on fetching this file.</description>
    </item>
    
    <item>
      <title>Openstack</title>
      <link>https://talos.dev/docs/v0.14/cloud-platforms/openstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/cloud-platforms/openstack/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in Openstack with 1 worker node. We will assume an existing some familiarity with Openstack. If you need more information on Openstack specifics, please see the official Openstack documentation.
Environment Setup You should have an existing openrc file. This file will provide environment variables necessary to talk to your Openstack cloud. See here for instructions on fetching this file.</description>
    </item>
    
    <item>
      <title>Openstack</title>
      <link>https://talos.dev/docs/v0.8/cloud-platforms/openstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/cloud-platforms/openstack/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in Openstack with 1 worker node. We will assume an existing some familiarity with Openstack. If you need more information on Openstack specifics, please see the official Openstack documentation.
Environment Setup You should have an existing openrc file. This file will provide environment variables necessary to talk to your Openstack cloud. See here for instructions on fetching this file.</description>
    </item>
    
    <item>
      <title>Openstack</title>
      <link>https://talos.dev/docs/v0.9/cloud-platforms/openstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/cloud-platforms/openstack/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in Openstack with 1 worker node. We will assume an existing some familiarity with Openstack. If you need more information on Openstack specifics, please see the official Openstack documentation.
Environment Setup You should have an existing openrc file. This file will provide environment variables necessary to talk to your Openstack cloud. See here for instructions on fetching this file.</description>
    </item>
    
    <item>
      <title>Openstack</title>
      <link>https://talos.dev/docs/v1.0/cloud-platforms/openstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/cloud-platforms/openstack/</guid>
      <description>Creating a Cluster via the CLI In this guide, we will create an HA Kubernetes cluster in Openstack with 1 worker node. We will assume an existing some familiarity with Openstack. If you need more information on Openstack specifics, please see the official Openstack documentation.
Environment Setup You should have an existing openrc file. This file will provide environment variables necessary to talk to your Openstack cloud. See here for instructions on fetching this file.</description>
    </item>
    
    <item>
      <title>Oracle</title>
      <link>https://talos.dev/docs/v1.0/cloud-platforms/oracle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/cloud-platforms/oracle/</guid>
      <description>Upload image Oracle Cloud at the moment does not have a Talos official image. So you can use Bring Your Own Image (BYOI) approach.
Once the image is uploaded, set the Boot volume type to Paravirtualized mode.
OracleCloud has highly available NTP service, it can be enabled in Talos machine config with:
machine:  time:  servers:  - 169.254.169.254 Creating a Cluster via the CLI Login to the console. And open the Cloud Shell.</description>
    </item>
    
    <item>
      <title>Pine64</title>
      <link>https://talos.dev/docs/v0.11/single-board-computers/pine64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/single-board-computers/pine64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-pine64-arm64.img.xz xz -d metal-pine64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Pine64</title>
      <link>https://talos.dev/docs/v0.12/single-board-computers/pine64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/single-board-computers/pine64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-pine64-arm64.img.xz xz -d metal-pine64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Pine64</title>
      <link>https://talos.dev/docs/v0.13/single-board-computers/pine64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/single-board-computers/pine64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-pine64-arm64.img.xz xz -d metal-pine64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Pine64</title>
      <link>https://talos.dev/docs/v0.14/single-board-computers/pine64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/single-board-computers/pine64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-pine64-arm64.img.xz xz -d metal-pine64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Pine64</title>
      <link>https://talos.dev/docs/v1.0/single-board-computers/pine64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/single-board-computers/pine64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-pine64-arm64.img.xz xz -d metal-pine64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Pine64 Rock64</title>
      <link>https://talos.dev/docs/v0.10/single-board-computers/rock64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/single-board-computers/rock64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-rock64-arm64.img.xz xz -d metal-rock64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Pine64 Rock64</title>
      <link>https://talos.dev/docs/v0.11/single-board-computers/rock64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/single-board-computers/rock64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-rock64-arm64.img.xz xz -d metal-rock64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Pine64 Rock64</title>
      <link>https://talos.dev/docs/v0.12/single-board-computers/rock64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/single-board-computers/rock64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-rock64-arm64.img.xz xz -d metal-rock64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Pine64 Rock64</title>
      <link>https://talos.dev/docs/v0.13/single-board-computers/rock64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/single-board-computers/rock64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-rock64-arm64.img.xz xz -d metal-rock64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Pine64 Rock64</title>
      <link>https://talos.dev/docs/v0.14/single-board-computers/rock64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/single-board-computers/rock64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-rock64-arm64.img.xz xz -d metal-rock64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Pine64 Rock64</title>
      <link>https://talos.dev/docs/v0.8/single-board-computers/rock64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/single-board-computers/rock64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/download/v0.8.4/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/download/v0.8.4/metal-rock64-arm64.img.xz xz -d metal-rock64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on Mac OS. In this example we will assume /dev/mmcblk0.</description>
    </item>
    
    <item>
      <title>Pine64 Rock64</title>
      <link>https://talos.dev/docs/v0.9/single-board-computers/rock64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/single-board-computers/rock64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-rock64-arm64.img.xz xz -d metal-rock64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on Mac OS. In this example we will assume /dev/mmcblk0.</description>
    </item>
    
    <item>
      <title>Pine64 Rock64</title>
      <link>https://talos.dev/docs/v1.0/single-board-computers/rock64/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/single-board-computers/rock64/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-rock64-arm64.img.xz xz -d metal-rock64-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Platform</title>
      <link>https://talos.dev/docs/v0.10/reference/platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/reference/platform/</guid>
      <description>Metal Below is a image to visualize the process of bootstrapping nodes.</description>
    </item>
    
    <item>
      <title>Platform</title>
      <link>https://talos.dev/docs/v0.11/reference/platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/reference/platform/</guid>
      <description>Metal Below is a image to visualize the process of bootstrapping nodes.</description>
    </item>
    
    <item>
      <title>Platform</title>
      <link>https://talos.dev/docs/v0.12/reference/platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/reference/platform/</guid>
      <description>Metal Below is a image to visualize the process of bootstrapping nodes.</description>
    </item>
    
    <item>
      <title>Platform</title>
      <link>https://talos.dev/docs/v0.13/reference/platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/reference/platform/</guid>
      <description>Metal Below is a image to visualize the process of bootstrapping nodes.</description>
    </item>
    
    <item>
      <title>Platform</title>
      <link>https://talos.dev/docs/v0.14/reference/platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/reference/platform/</guid>
      <description>Metal Below is a image to visualize the process of bootstrapping nodes.</description>
    </item>
    
    <item>
      <title>Platform</title>
      <link>https://talos.dev/docs/v0.7/reference/platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/reference/platform/</guid>
      <description>Metal Below is a image to visualize the process of bootstrapping nodes.</description>
    </item>
    
    <item>
      <title>Platform</title>
      <link>https://talos.dev/docs/v0.8/reference/platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/reference/platform/</guid>
      <description>Metal Below is a image to visualize the process of bootstrapping nodes.</description>
    </item>
    
    <item>
      <title>Platform</title>
      <link>https://talos.dev/docs/v0.9/reference/platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/reference/platform/</guid>
      <description>Metal Below is a image to visualize the process of bootstrapping nodes.</description>
    </item>
    
    <item>
      <title>Platform</title>
      <link>https://talos.dev/docs/v1.0/reference/platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/reference/platform/</guid>
      <description>Metal Below is a image to visualize the process of bootstrapping nodes.</description>
    </item>
    
    <item>
      <title>Proxmox</title>
      <link>https://talos.dev/docs/v0.10/virtualized-platforms/proxmox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/virtualized-platforms/proxmox/</guid>
      <description>In this guide we will create a Kubernetes cluster using Proxmox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get Proxmox It is assumed that you have already installed Proxmox onto the server you wish to create Talos VMs on. Visit the Proxmox downloads page if necessary.
Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.</description>
    </item>
    
    <item>
      <title>Proxmox</title>
      <link>https://talos.dev/docs/v0.11/virtualized-platforms/proxmox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/virtualized-platforms/proxmox/</guid>
      <description>In this guide we will create a Kubernetes cluster using Proxmox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get Proxmox It is assumed that you have already installed Proxmox onto the server you wish to create Talos VMs on. Visit the Proxmox downloads page if necessary.
Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.</description>
    </item>
    
    <item>
      <title>Proxmox</title>
      <link>https://talos.dev/docs/v0.12/virtualized-platforms/proxmox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/virtualized-platforms/proxmox/</guid>
      <description>In this guide we will create a Kubernetes cluster using Proxmox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get Proxmox It is assumed that you have already installed Proxmox onto the server you wish to create Talos VMs on. Visit the Proxmox downloads page if necessary.
Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.</description>
    </item>
    
    <item>
      <title>Proxmox</title>
      <link>https://talos.dev/docs/v0.13/virtualized-platforms/proxmox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/virtualized-platforms/proxmox/</guid>
      <description>In this guide we will create a Kubernetes cluster using Proxmox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get Proxmox It is assumed that you have already installed Proxmox onto the server you wish to create Talos VMs on. Visit the Proxmox downloads page if necessary.
Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.</description>
    </item>
    
    <item>
      <title>Proxmox</title>
      <link>https://talos.dev/docs/v0.14/virtualized-platforms/proxmox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/virtualized-platforms/proxmox/</guid>
      <description>In this guide we will create a Kubernetes cluster using Proxmox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get Proxmox It is assumed that you have already installed Proxmox onto the server you wish to create Talos VMs on. Visit the Proxmox downloads page if necessary.
Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.</description>
    </item>
    
    <item>
      <title>Proxmox</title>
      <link>https://talos.dev/docs/v0.6/virtualized-platforms/proxmox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/virtualized-platforms/proxmox/</guid>
      <description>Talos is known to work on Proxmox; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Proxmox</title>
      <link>https://talos.dev/docs/v0.7/virtualized-platforms/proxmox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/virtualized-platforms/proxmox/</guid>
      <description>In this guide we will create a Kubernetes cluster using Proxmox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get Proxmox It is assumed that you have already installed Proxmox onto the server you wish to create Talos VMs on. Visit the Proxmox downloads page if necessary.
Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.</description>
    </item>
    
    <item>
      <title>Proxmox</title>
      <link>https://talos.dev/docs/v0.8/virtualized-platforms/proxmox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/virtualized-platforms/proxmox/</guid>
      <description>In this guide we will create a Kubernetes cluster using Proxmox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get Proxmox It is assumed that you have already installed Proxmox onto the server you wish to create Talos VMs on. Visit the Proxmox downloads page if necessary.
Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.</description>
    </item>
    
    <item>
      <title>Proxmox</title>
      <link>https://talos.dev/docs/v0.9/virtualized-platforms/proxmox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/virtualized-platforms/proxmox/</guid>
      <description>In this guide we will create a Kubernetes cluster using Proxmox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get Proxmox It is assumed that you have already installed Proxmox onto the server you wish to create Talos VMs on. Visit the Proxmox downloads page if necessary.
Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.</description>
    </item>
    
    <item>
      <title>Proxmox</title>
      <link>https://talos.dev/docs/v1.0/virtualized-platforms/proxmox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/virtualized-platforms/proxmox/</guid>
      <description>In this guide we will create a Kubernetes cluster using Proxmox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get Proxmox It is assumed that you have already installed Proxmox onto the server you wish to create Talos VMs on. Visit the Proxmox downloads page if necessary.
Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.</description>
    </item>
    
    <item>
      <title>QEMU</title>
      <link>https://talos.dev/docs/v0.10/local-platforms/qemu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/local-platforms/qemu/</guid>
      <description>In this guide we will create a Kubernetes cluster using QEMU.
Video Walkthrough To see a live demo of this writeup, see the video below:
Requirements  Linux a kernel with  KVM enabled (/dev/kvm must exist) CONFIG_NET_SCH_NETEM enabled CONFIG_NET_SCH_INGRESS enabled   at least CAP_SYS_ADMIN and CAP_NET_ADMIN capabilities QEMU bridge, static and firewall CNI plugins from the standard CNI plugins, and tc-redirect-tap CNI plugin from the awslabs tc-redirect-tap installed to /opt/cni/bin (installed automatically by talosctl) iptables /var/run/netns directory should exist  Installation How to get QEMU Install QEMU with your operating system package manager.</description>
    </item>
    
    <item>
      <title>QEMU</title>
      <link>https://talos.dev/docs/v0.11/local-platforms/qemu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/local-platforms/qemu/</guid>
      <description>In this guide we will create a Kubernetes cluster using QEMU.
Video Walkthrough To see a live demo of this writeup, see the video below:
Requirements  Linux a kernel with  KVM enabled (/dev/kvm must exist) CONFIG_NET_SCH_NETEM enabled CONFIG_NET_SCH_INGRESS enabled   at least CAP_SYS_ADMIN and CAP_NET_ADMIN capabilities QEMU bridge, static and firewall CNI plugins from the standard CNI plugins, and tc-redirect-tap CNI plugin from the awslabs tc-redirect-tap installed to /opt/cni/bin (installed automatically by talosctl) iptables /var/run/netns directory should exist  Installation How to get QEMU Install QEMU with your operating system package manager.</description>
    </item>
    
    <item>
      <title>QEMU</title>
      <link>https://talos.dev/docs/v0.12/local-platforms/qemu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/local-platforms/qemu/</guid>
      <description>In this guide we will create a Kubernetes cluster using QEMU.
Video Walkthrough To see a live demo of this writeup, see the video below:
Requirements  Linux a kernel with  KVM enabled (/dev/kvm must exist) CONFIG_NET_SCH_NETEM enabled CONFIG_NET_SCH_INGRESS enabled   at least CAP_SYS_ADMIN and CAP_NET_ADMIN capabilities QEMU bridge, static and firewall CNI plugins from the standard CNI plugins, and tc-redirect-tap CNI plugin from the awslabs tc-redirect-tap installed to /opt/cni/bin (installed automatically by talosctl) iptables /var/run/netns directory should exist  Installation How to get QEMU Install QEMU with your operating system package manager.</description>
    </item>
    
    <item>
      <title>QEMU</title>
      <link>https://talos.dev/docs/v0.13/local-platforms/qemu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/local-platforms/qemu/</guid>
      <description>In this guide we will create a Kubernetes cluster using QEMU.
Video Walkthrough To see a live demo of this writeup, see the video below:
Requirements  Linux a kernel with  KVM enabled (/dev/kvm must exist) CONFIG_NET_SCH_NETEM enabled CONFIG_NET_SCH_INGRESS enabled   at least CAP_SYS_ADMIN and CAP_NET_ADMIN capabilities QEMU bridge, static and firewall CNI plugins from the standard CNI plugins, and tc-redirect-tap CNI plugin from the awslabs tc-redirect-tap installed to /opt/cni/bin (installed automatically by talosctl) iptables /var/run/netns directory should exist  Installation How to get QEMU Install QEMU with your operating system package manager.</description>
    </item>
    
    <item>
      <title>QEMU</title>
      <link>https://talos.dev/docs/v0.14/local-platforms/qemu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/local-platforms/qemu/</guid>
      <description>In this guide we will create a Kubernetes cluster using QEMU.
Video Walkthrough To see a live demo of this writeup, see the video below:
Requirements  Linux a kernel with  KVM enabled (/dev/kvm must exist) CONFIG_NET_SCH_NETEM enabled CONFIG_NET_SCH_INGRESS enabled   at least CAP_SYS_ADMIN and CAP_NET_ADMIN capabilities QEMU bridge, static and firewall CNI plugins from the standard CNI plugins, and tc-redirect-tap CNI plugin from the awslabs tc-redirect-tap installed to /opt/cni/bin (installed automatically by talosctl) iptables /var/run/netns directory should exist  Installation How to get QEMU Install QEMU with your operating system package manager.</description>
    </item>
    
    <item>
      <title>QEMU</title>
      <link>https://talos.dev/docs/v0.6/local-platforms/qemu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/local-platforms/qemu/</guid>
      <description>In this guide we will create a Kubernetes cluster using QEMU.
Requirements  Linux a kernel with  KVM enabled (/dev/kvm must exist) CONFIG_NET_SCH_NETEM enabled CONFIG_NET_SCH_INGRESS enabled   at least CAP_SYS_ADMIN and CAP_NET_ADMIN capabilities QEMU bridge, static and firewall CNI plugins from the standard CNI plugins, and tc-redirect-tap CNI plugin from the awslabs tc-redirect-tap installed to /opt/cni/bin iptables /etc/cni/conf.d directory should exist /var/run/netns directory should exist  Installation How to get QEMU Install QEMU with your operating system package manager.</description>
    </item>
    
    <item>
      <title>QEMU</title>
      <link>https://talos.dev/docs/v0.7/local-platforms/qemu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/local-platforms/qemu/</guid>
      <description>In this guide we will create a Kubernetes cluster using QEMU.
Video Walkthrough To see a live demo of this writeup, see the video below:
Requirements  Linux a kernel with  KVM enabled (/dev/kvm must exist) CONFIG_NET_SCH_NETEM enabled CONFIG_NET_SCH_INGRESS enabled   at least CAP_SYS_ADMIN and CAP_NET_ADMIN capabilities QEMU bridge, static and firewall CNI plugins from the standard CNI plugins, and tc-redirect-tap CNI plugin from the awslabs tc-redirect-tap installed to /opt/cni/bin (installed automatically by talosctl) iptables /var/run/netns directory should exist  Installation How to get QEMU Install QEMU with your operating system package manager.</description>
    </item>
    
    <item>
      <title>QEMU</title>
      <link>https://talos.dev/docs/v0.8/local-platforms/qemu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/local-platforms/qemu/</guid>
      <description>In this guide we will create a Kubernetes cluster using QEMU.
Video Walkthrough To see a live demo of this writeup, see the video below:
Requirements  Linux a kernel with  KVM enabled (/dev/kvm must exist) CONFIG_NET_SCH_NETEM enabled CONFIG_NET_SCH_INGRESS enabled   at least CAP_SYS_ADMIN and CAP_NET_ADMIN capabilities QEMU bridge, static and firewall CNI plugins from the standard CNI plugins, and tc-redirect-tap CNI plugin from the awslabs tc-redirect-tap installed to /opt/cni/bin (installed automatically by talosctl) iptables /var/run/netns directory should exist  Installation How to get QEMU Install QEMU with your operating system package manager.</description>
    </item>
    
    <item>
      <title>QEMU</title>
      <link>https://talos.dev/docs/v0.9/local-platforms/qemu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/local-platforms/qemu/</guid>
      <description>In this guide we will create a Kubernetes cluster using QEMU.
Video Walkthrough To see a live demo of this writeup, see the video below:
Requirements  Linux a kernel with  KVM enabled (/dev/kvm must exist) CONFIG_NET_SCH_NETEM enabled CONFIG_NET_SCH_INGRESS enabled   at least CAP_SYS_ADMIN and CAP_NET_ADMIN capabilities QEMU bridge, static and firewall CNI plugins from the standard CNI plugins, and tc-redirect-tap CNI plugin from the awslabs tc-redirect-tap installed to /opt/cni/bin (installed automatically by talosctl) iptables /var/run/netns directory should exist  Installation How to get QEMU Install QEMU with your operating system package manager.</description>
    </item>
    
    <item>
      <title>QEMU</title>
      <link>https://talos.dev/docs/v1.0/local-platforms/qemu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/local-platforms/qemu/</guid>
      <description>In this guide we will create a Kubernetes cluster using QEMU.
Video Walkthrough To see a live demo of this writeup, see the video below:
Requirements  Linux a kernel with  KVM enabled (/dev/kvm must exist) CONFIG_NET_SCH_NETEM enabled CONFIG_NET_SCH_INGRESS enabled   at least CAP_SYS_ADMIN and CAP_NET_ADMIN capabilities QEMU bridge, static and firewall CNI plugins from the standard CNI plugins, and tc-redirect-tap CNI plugin from the awslabs tc-redirect-tap installed to /opt/cni/bin (installed automatically by talosctl) iptables /var/run/netns directory should exist  Installation How to get QEMU Install QEMU with your operating system package manager.</description>
    </item>
    
    <item>
      <title>Radxa ROCK PI 4c</title>
      <link>https://talos.dev/docs/v0.10/single-board-computers/rockpi_4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/single-board-computers/rockpi_4/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-rockpi_4-arm64.img.xz xz -d metal-rockpi_4-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Radxa ROCK PI 4c</title>
      <link>https://talos.dev/docs/v0.11/single-board-computers/rockpi_4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/single-board-computers/rockpi_4/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-rockpi_4-arm64.img.xz xz -d metal-rockpi_4-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Radxa ROCK PI 4c</title>
      <link>https://talos.dev/docs/v0.12/single-board-computers/rockpi_4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/single-board-computers/rockpi_4/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-rockpi_4-arm64.img.xz xz -d metal-rockpi_4-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Radxa ROCK PI 4c</title>
      <link>https://talos.dev/docs/v0.13/single-board-computers/rockpi_4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/single-board-computers/rockpi_4/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-rockpi_4-arm64.img.xz xz -d metal-rockpi_4-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Radxa ROCK PI 4c</title>
      <link>https://talos.dev/docs/v0.14/single-board-computers/rockpi_4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/single-board-computers/rockpi_4/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-rockpi_4-arm64.img.xz xz -d metal-rockpi_4-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Radxa ROCK PI 4c</title>
      <link>https://talos.dev/docs/v0.9/single-board-computers/rockpi_4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/single-board-computers/rockpi_4/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-rockpi_4-arm64.img.xz xz -d metal-rockpi_4-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on Mac OS. In this example we will assume /dev/mmcblk0.</description>
    </item>
    
    <item>
      <title>Radxa ROCK PI 4c</title>
      <link>https://talos.dev/docs/v1.0/single-board-computers/rockpi_4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/single-board-computers/rockpi_4/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Download the Image Download the image and decompress it:
curl -LO https://github.com/talos-systems/talos/releases/latest/download/metal-rockpi_4-arm64.img.xz xz -d metal-rockpi_4-arm64.img.xz Writing the Image The path to your SD card can be found using fdisk on Linux or diskutil on macOS. In this example, we will assume /dev/mmcblk0.
Now dd the image to your SD card:</description>
    </item>
    
    <item>
      <title>Raspberry Pi 4 Model B</title>
      <link>https://talos.dev/docs/v0.10/single-board-computers/rpi_4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/single-board-computers/rpi_4/</guid>
      <description>Video Walkthrough To see a live demo of this writeup, see the video below:
Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Updating the EEPROM At least version v2020.09.03-138a1 of the bootloader (rpi-eeprom) is required. To update the bootloader we will need an SD card. Insert the SD card into your computer and use Raspberry Pi Imager to install the bootloader on it (select Operating System &amp;gt; Misc utility images &amp;gt; Bootloader &amp;gt; SD Card Boot).</description>
    </item>
    
    <item>
      <title>Raspberry Pi 4 Model B</title>
      <link>https://talos.dev/docs/v0.11/single-board-computers/rpi_4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/single-board-computers/rpi_4/</guid>
      <description>Video Walkthrough To see a live demo of this writeup, see the video below:
Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Updating the EEPROM At least version v2020.09.03-138a1 of the bootloader (rpi-eeprom) is required. To update the bootloader we will need an SD card. Insert the SD card into your computer and use Raspberry Pi Imager to install the bootloader on it (select Operating System &amp;gt; Misc utility images &amp;gt; Bootloader &amp;gt; SD Card Boot).</description>
    </item>
    
    <item>
      <title>Raspberry Pi 4 Model B</title>
      <link>https://talos.dev/docs/v0.12/single-board-computers/rpi_4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/single-board-computers/rpi_4/</guid>
      <description>Video Walkthrough To see a live demo of this writeup, see the video below:
Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Updating the EEPROM At least version v2020.09.03-138a1 of the bootloader (rpi-eeprom) is required. To update the bootloader we will need an SD card. Insert the SD card into your computer and use Raspberry Pi Imager to install the bootloader on it (select Operating System &amp;gt; Misc utility images &amp;gt; Bootloader &amp;gt; SD Card Boot).</description>
    </item>
    
    <item>
      <title>Raspberry Pi 4 Model B</title>
      <link>https://talos.dev/docs/v0.13/single-board-computers/rpi_4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/single-board-computers/rpi_4/</guid>
      <description>Video Walkthrough To see a live demo of this writeup, see the video below:
Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Updating the EEPROM At least version v2020.09.03-138a1 of the bootloader (rpi-eeprom) is required. To update the bootloader we will need an SD card. Insert the SD card into your computer and use Raspberry Pi Imager to install the bootloader on it (select Operating System &amp;gt; Misc utility images &amp;gt; Bootloader &amp;gt; SD Card Boot).</description>
    </item>
    
    <item>
      <title>Raspberry Pi 4 Model B</title>
      <link>https://talos.dev/docs/v0.14/single-board-computers/rpi_4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/single-board-computers/rpi_4/</guid>
      <description>Video Walkthrough To see a live demo of this writeup, see the video below:
Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Updating the EEPROM At least version v2020.09.03-138a1 of the bootloader (rpi-eeprom) is required. To update the bootloader we will need an SD card. Insert the SD card into your computer and use Raspberry Pi Imager to install the bootloader on it (select Operating System &amp;gt; Misc utility images &amp;gt; Bootloader &amp;gt; SD Card Boot).</description>
    </item>
    
    <item>
      <title>Raspberry Pi 4 Model B</title>
      <link>https://talos.dev/docs/v0.8/single-board-computers/rpi_4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/single-board-computers/rpi_4/</guid>
      <description>Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/download/v0.8.4/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Updating the EEPROM At least version v2020.09.03-138a1 of the bootloader (rpi-eeprom) is required. To update the bootloader we will need an SD card. Insert the SD card into your computer and run the following: The path to your SD card can be found using fdisk on Linux or diskutil on Mac OS.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 4 Model B</title>
      <link>https://talos.dev/docs/v0.9/single-board-computers/rpi_4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/single-board-computers/rpi_4/</guid>
      <description>Video Walkthrough To see a live demo of this writeup, see the video below:
Prerequisites You will need
 talosctl an SD card  Download the latest alpha talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Updating the EEPROM At least version v2020.09.03-138a1 of the bootloader (rpi-eeprom) is required. To update the bootloader we will need an SD card. Insert the SD card into your computer and run the following: The path to your SD card can be found using fdisk on Linux or diskutil on Mac OS.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 4 Model B</title>
      <link>https://talos.dev/docs/v1.0/single-board-computers/rpi_4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/single-board-computers/rpi_4/</guid>
      <description>Video Walkthrough To see a live demo of this writeup, see the video below:
Prerequisites You will need
 talosctl an SD card  Download the latest talosctl.
curl -Lo /usr/local/bin/talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-$(uname -s | tr &amp;#34;[:upper:]&amp;#34; &amp;#34;[:lower:]&amp;#34;)-amd64 chmod +x /usr/local/bin/talosctl Updating the EEPROM At least version v2020.09.03-138a1 of the bootloader (rpi-eeprom) is required. To update the bootloader we will need an SD card. Insert the SD card into your computer and use Raspberry Pi Imager to install the bootloader on it (select Operating System &amp;gt; Misc utility images &amp;gt; Bootloader &amp;gt; SD Card Boot).</description>
    </item>
    
    <item>
      <title>Resetting a Machine</title>
      <link>https://talos.dev/docs/v0.10/guides/resetting-a-machine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/resetting-a-machine/</guid>
      <description>From time to time, it may be beneficial to reset a Talos machine to its &amp;ldquo;original&amp;rdquo; state. Bear in mind that this is a destructive action for the given machine. Doing this means removing the machine from Kubernetes, Etcd (if applicable), and clears any data on the machine that would normally persist a reboot.
The API command for doing this is talosctl reset. There are a couple of flags as part of this command:</description>
    </item>
    
    <item>
      <title>Resetting a Machine</title>
      <link>https://talos.dev/docs/v0.11/guides/resetting-a-machine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/resetting-a-machine/</guid>
      <description>From time to time, it may be beneficial to reset a Talos machine to its &amp;ldquo;original&amp;rdquo; state. Bear in mind that this is a destructive action for the given machine. Doing this means removing the machine from Kubernetes, Etcd (if applicable), and clears any data on the machine that would normally persist a reboot.
The API command for doing this is talosctl reset. There are a couple of flags as part of this command:</description>
    </item>
    
    <item>
      <title>Resetting a Machine</title>
      <link>https://talos.dev/docs/v0.12/guides/resetting-a-machine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/resetting-a-machine/</guid>
      <description>From time to time, it may be beneficial to reset a Talos machine to its &amp;ldquo;original&amp;rdquo; state. Bear in mind that this is a destructive action for the given machine. Doing this means removing the machine from Kubernetes, Etcd (if applicable), and clears any data on the machine that would normally persist a reboot.
The API command for doing this is talosctl reset. There are a couple of flags as part of this command:</description>
    </item>
    
    <item>
      <title>Resetting a Machine</title>
      <link>https://talos.dev/docs/v0.13/guides/resetting-a-machine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/resetting-a-machine/</guid>
      <description>From time to time, it may be beneficial to reset a Talos machine to its &amp;ldquo;original&amp;rdquo; state. Bear in mind that this is a destructive action for the given machine. Doing this means removing the machine from Kubernetes, Etcd (if applicable), and clears any data on the machine that would normally persist a reboot.
The API command for doing this is talosctl reset. There are a couple of flags as part of this command:</description>
    </item>
    
    <item>
      <title>Resetting a Machine</title>
      <link>https://talos.dev/docs/v0.14/guides/resetting-a-machine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/resetting-a-machine/</guid>
      <description>From time to time, it may be beneficial to reset a Talos machine to its &amp;ldquo;original&amp;rdquo; state. Bear in mind that this is a destructive action for the given machine. Doing this means removing the machine from Kubernetes, Etcd (if applicable), and clears any data on the machine that would normally persist a reboot.
 WARNING: Running a talosctl reset on cloud VM&amp;rsquo;s might result in the VM being unable to boot as this wipes the entire disk.</description>
    </item>
    
    <item>
      <title>Resetting a Machine</title>
      <link>https://talos.dev/docs/v0.6/guides/resetting-a-machine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/guides/resetting-a-machine/</guid>
      <description>From time to time, it may be beneficial to reset a Talos machine to its &amp;ldquo;original&amp;rdquo; state. Bear in mind that this is a destructive action for the given machine. Doing this means removing the machine from Kubernetes, Etcd (if applicable), and clears any data on the machine that would normally persist a reboot.
The API command for doing this is talosctl reset. There are a couple of flags as part of this command:</description>
    </item>
    
    <item>
      <title>Resetting a Machine</title>
      <link>https://talos.dev/docs/v0.7/guides/resetting-a-machine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/guides/resetting-a-machine/</guid>
      <description>From time to time, it may be beneficial to reset a Talos machine to its &amp;ldquo;original&amp;rdquo; state. Bear in mind that this is a destructive action for the given machine. Doing this means removing the machine from Kubernetes, Etcd (if applicable), and clears any data on the machine that would normally persist a reboot.
The API command for doing this is talosctl reset. There are a couple of flags as part of this command:</description>
    </item>
    
    <item>
      <title>Resetting a Machine</title>
      <link>https://talos.dev/docs/v0.8/guides/resetting-a-machine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/guides/resetting-a-machine/</guid>
      <description>From time to time, it may be beneficial to reset a Talos machine to its &amp;ldquo;original&amp;rdquo; state. Bear in mind that this is a destructive action for the given machine. Doing this means removing the machine from Kubernetes, Etcd (if applicable), and clears any data on the machine that would normally persist a reboot.
The API command for doing this is talosctl reset. There are a couple of flags as part of this command:</description>
    </item>
    
    <item>
      <title>Resetting a Machine</title>
      <link>https://talos.dev/docs/v0.9/guides/resetting-a-machine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/resetting-a-machine/</guid>
      <description>From time to time, it may be beneficial to reset a Talos machine to its &amp;ldquo;original&amp;rdquo; state. Bear in mind that this is a destructive action for the given machine. Doing this means removing the machine from Kubernetes, Etcd (if applicable), and clears any data on the machine that would normally persist a reboot.
The API command for doing this is talosctl reset. There are a couple of flags as part of this command:</description>
    </item>
    
    <item>
      <title>Resetting a Machine</title>
      <link>https://talos.dev/docs/v1.0/guides/resetting-a-machine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/resetting-a-machine/</guid>
      <description>From time to time, it may be beneficial to reset a Talos machine to its &amp;ldquo;original&amp;rdquo; state. Bear in mind that this is a destructive action for the given machine. Doing this means removing the machine from Kubernetes, Etcd (if applicable), and clears any data on the machine that would normally persist a reboot.
CLI  WARNING: Running a talosctl reset on cloud VM&amp;rsquo;s might result in the VM being unable to boot as this wipes the entire disk.</description>
    </item>
    
    <item>
      <title>Role-based access control (RBAC)</title>
      <link>https://talos.dev/docs/v0.11/guides/rbac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/rbac/</guid>
      <description>Talos v0.11 introduced initial support for role-based access control (RBAC). This guide will explain what that is and how to enable it without losing access to the cluster.
RBAC in Talos Talos uses certificates to authorize users. The certificate subject&amp;rsquo;s organization field is used to encode user roles. There is a set of predefined roles that allow access to different API methods:
 os:admin grants access to all methods; os:reader grants access to &amp;ldquo;safe&amp;rdquo; methods (for example, that includes the ability to list files, but does not include the ability to read files content); os:etcd:backup grants access to /machine.</description>
    </item>
    
    <item>
      <title>Role-based access control (RBAC)</title>
      <link>https://talos.dev/docs/v0.12/guides/rbac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/rbac/</guid>
      <description>Talos v0.11 introduced initial support for role-based access control (RBAC). This guide will explain what that is and how to enable it without losing access to the cluster.
RBAC in Talos Talos uses certificates to authorize users. The certificate subject&amp;rsquo;s organization field is used to encode user roles. There is a set of predefined roles that allow access to different API methods:
 os:admin grants access to all methods; os:reader grants access to &amp;ldquo;safe&amp;rdquo; methods (for example, that includes the ability to list files, but does not include the ability to read files content); os:etcd:backup grants access to /machine.</description>
    </item>
    
    <item>
      <title>Role-based access control (RBAC)</title>
      <link>https://talos.dev/docs/v0.13/guides/rbac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/rbac/</guid>
      <description>Talos v0.11 introduced initial support for role-based access control (RBAC). This guide will explain what that is and how to enable it without losing access to the cluster.
RBAC in Talos Talos uses certificates to authorize users. The certificate subject&amp;rsquo;s organization field is used to encode user roles. There is a set of predefined roles that allow access to different API methods:
 os:admin grants access to all methods; os:reader grants access to &amp;ldquo;safe&amp;rdquo; methods (for example, that includes the ability to list files, but does not include the ability to read files content); os:etcd:backup grants access to /machine.</description>
    </item>
    
    <item>
      <title>Role-based access control (RBAC)</title>
      <link>https://talos.dev/docs/v0.14/guides/rbac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/rbac/</guid>
      <description>Talos v0.11 introduced initial support for role-based access control (RBAC). This guide will explain what that is and how to enable it without losing access to the cluster.
RBAC in Talos Talos uses certificates to authorize users. The certificate subject&amp;rsquo;s organization field is used to encode user roles. There is a set of predefined roles that allow access to different API methods:
 os:admin grants access to all methods; os:reader grants access to &amp;ldquo;safe&amp;rdquo; methods (for example, that includes the ability to list files, but does not include the ability to read files content); os:etcd:backup grants access to /machine.</description>
    </item>
    
    <item>
      <title>Role-based access control (RBAC)</title>
      <link>https://talos.dev/docs/v1.0/guides/rbac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/rbac/</guid>
      <description>Talos v0.11 introduced initial support for role-based access control (RBAC). This guide will explain what that is and how to enable it without losing access to the cluster.
RBAC in Talos Talos uses certificates to authorize users. The certificate subject&amp;rsquo;s organization field is used to encode user roles. There is a set of predefined roles that allow access to different API methods:
 os:admin grants access to all methods; os:reader grants access to &amp;ldquo;safe&amp;rdquo; methods (for example, that includes the ability to list files, but does not include the ability to read files content); os:etcd:backup grants access to /machine.</description>
    </item>
    
    <item>
      <title>Scaleway</title>
      <link>https://talos.dev/docs/v0.13/cloud-platforms/scaleway/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/cloud-platforms/scaleway/</guid>
      <description>Talos is known to work on scaleway.com; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Scaleway</title>
      <link>https://talos.dev/docs/v0.14/cloud-platforms/scaleway/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/cloud-platforms/scaleway/</guid>
      <description>Talos is known to work on scaleway.com; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Scaleway</title>
      <link>https://talos.dev/docs/v1.0/cloud-platforms/scaleway/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/cloud-platforms/scaleway/</guid>
      <description>Talos is known to work on scaleway.com; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Sidero</title>
      <link>https://talos.dev/docs/v0.10/bare-metal-platforms/sidero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/bare-metal-platforms/sidero/</guid>
      <description>Sidero is a project created by the Talos team that has native support for Talos. The best way to get started with Sidero is to visit the website.</description>
    </item>
    
    <item>
      <title>Sidero</title>
      <link>https://talos.dev/docs/v0.11/bare-metal-platforms/sidero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/bare-metal-platforms/sidero/</guid>
      <description>Sidero is a project created by the Talos team that has native support for Talos. The best way to get started with Sidero is to visit the website.</description>
    </item>
    
    <item>
      <title>Sidero</title>
      <link>https://talos.dev/docs/v0.12/bare-metal-platforms/sidero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/bare-metal-platforms/sidero/</guid>
      <description>Sidero is a project created by the Talos team that has native support for Talos. The best way to get started with Sidero is to visit the website.</description>
    </item>
    
    <item>
      <title>Sidero</title>
      <link>https://talos.dev/docs/v0.13/bare-metal-platforms/sidero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/bare-metal-platforms/sidero/</guid>
      <description>Sidero is a project created by the Talos team that has native support for Talos. The best way to get started with Sidero is to visit the website.</description>
    </item>
    
    <item>
      <title>Sidero</title>
      <link>https://talos.dev/docs/v0.14/bare-metal-platforms/sidero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/bare-metal-platforms/sidero/</guid>
      <description>Sidero is a project created by the Talos team that has native support for Talos. The best way to get started with Sidero is to visit the website.</description>
    </item>
    
    <item>
      <title>Sidero</title>
      <link>https://talos.dev/docs/v0.6/bare-metal-platforms/sidero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/bare-metal-platforms/sidero/</guid>
      <description>Sidero is a project created by the Talos team that has native support for Talos. The best way to get started with Sidero is to visit the website.</description>
    </item>
    
    <item>
      <title>Sidero</title>
      <link>https://talos.dev/docs/v0.7/bare-metal-platforms/sidero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/bare-metal-platforms/sidero/</guid>
      <description>Sidero is a project created by the Talos team that has native support for Talos. The best way to get started with Sidero is to visit the website.</description>
    </item>
    
    <item>
      <title>Sidero</title>
      <link>https://talos.dev/docs/v0.8/bare-metal-platforms/sidero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/bare-metal-platforms/sidero/</guid>
      <description>Sidero is a project created by the Talos team that has native support for Talos. The best way to get started with Sidero is to visit the website.</description>
    </item>
    
    <item>
      <title>Sidero</title>
      <link>https://talos.dev/docs/v0.9/bare-metal-platforms/sidero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/bare-metal-platforms/sidero/</guid>
      <description>Sidero is a project created by the Talos team that has native support for Talos. The best way to get started with Sidero is to visit the website.</description>
    </item>
    
    <item>
      <title>Sidero</title>
      <link>https://talos.dev/docs/v1.0/bare-metal-platforms/sidero/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/bare-metal-platforms/sidero/</guid>
      <description>Sidero is a project created by the Talos team that has native support for Talos. The best way to get started with Sidero is to visit the website.</description>
    </item>
    
    <item>
      <title>Storage</title>
      <link>https://talos.dev/docs/v0.10/guides/storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/storage/</guid>
      <description>Talos is known to work with Rook, Mayastor (OpenEBS) and NFS.
Rook We recommend at least Rook v1.5.
NFS The NFS client is part of the kubelet image maintained by the Talos team. This means that the version installed in your running kubelet is the version of NFS supported by Talos.
Mayastor (OpenEBS) Video Walkthrough To see a live demo of this section, see the video below:
Prep Nodes Either during initial cluster creation or on running worker nodes, several machine config values should be edited.</description>
    </item>
    
    <item>
      <title>Storage</title>
      <link>https://talos.dev/docs/v0.11/guides/storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/storage/</guid>
      <description>In Kubernetes, using storage in the right way is well-facilitated by the API.
However, unless you are running in a major public cloud, that API may not be hooked up to anything. This frequently sends users down a rabbit hole of researching all the various options for storage backends for their platform, for Kubernetes, and for their workloads. There are a lot of options out there, and it can be fairly bewildering.</description>
    </item>
    
    <item>
      <title>Storage</title>
      <link>https://talos.dev/docs/v0.12/guides/storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/storage/</guid>
      <description>In Kubernetes, using storage in the right way is well-facilitated by the API.
However, unless you are running in a major public cloud, that API may not be hooked up to anything. This frequently sends users down a rabbit hole of researching all the various options for storage backends for their platform, for Kubernetes, and for their workloads. There are a lot of options out there, and it can be fairly bewildering.</description>
    </item>
    
    <item>
      <title>Storage</title>
      <link>https://talos.dev/docs/v0.13/guides/storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/storage/</guid>
      <description>In Kubernetes, using storage in the right way is well-facilitated by the API.
However, unless you are running in a major public cloud, that API may not be hooked up to anything. This frequently sends users down a rabbit hole of researching all the various options for storage backends for their platform, for Kubernetes, and for their workloads. There are a lot of options out there, and it can be fairly bewildering.</description>
    </item>
    
    <item>
      <title>Storage</title>
      <link>https://talos.dev/docs/v0.14/guides/storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/storage/</guid>
      <description>In Kubernetes, using storage in the right way is well-facilitated by the API.
However, unless you are running in a major public cloud, that API may not be hooked up to anything. This frequently sends users down a rabbit hole of researching all the various options for storage backends for their platform, for Kubernetes, and for their workloads. There are a lot of options out there, and it can be fairly bewildering.</description>
    </item>
    
    <item>
      <title>Storage</title>
      <link>https://talos.dev/docs/v0.8/guides/storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/guides/storage/</guid>
      <description>Talos is known to work with Rook and NFS.
Rook We recommend at least Rook v1.5.
NFS The NFS client is part of the kubelet image maintained by the Talos team. This means that the version installed in your running kubelet is the version of NFS supported by Talos.</description>
    </item>
    
    <item>
      <title>Storage</title>
      <link>https://talos.dev/docs/v0.9/guides/storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/storage/</guid>
      <description>Talos is known to work with Rook and NFS.
Rook We recommend at least Rook v1.5.
NFS The NFS client is part of the kubelet image maintained by the Talos team. This means that the version installed in your running kubelet is the version of NFS supported by Talos.</description>
    </item>
    
    <item>
      <title>Storage</title>
      <link>https://talos.dev/docs/v1.0/guides/storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/storage/</guid>
      <description>In Kubernetes, using storage in the right way is well-facilitated by the API.
However, unless you are running in a major public cloud, that API may not be hooked up to anything. This frequently sends users down a rabbit hole of researching all the various options for storage backends for their platform, for Kubernetes, and for their workloads. There are a lot of options out there, and it can be fairly bewildering.</description>
    </item>
    
    <item>
      <title>Troubleshooting Control Plane</title>
      <link>https://talos.dev/docs/v0.10/guides/troubleshooting-control-plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/troubleshooting-control-plane/</guid>
      <description>This guide is written as series of topics and detailed answers for each topic. It starts with basics of control plane and goes into Talos specifics.
This document mostly applies only to Talos 0.9 control plane based on static pods. If Talos was upgraded from version 0.8, it might be still running self-hosted control plane, current status can be checked with the command talosctl get bootstrapstatus:
$ talosctl -n &amp;lt;IP&amp;gt; get bs NODE NAMESPACE TYPE ID VERSION SELF HOSTED 172.</description>
    </item>
    
    <item>
      <title>Troubleshooting Control Plane</title>
      <link>https://talos.dev/docs/v0.11/guides/troubleshooting-control-plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/troubleshooting-control-plane/</guid>
      <description>This guide is written as series of topics and detailed answers for each topic. It starts with basics of control plane and goes into Talos specifics.
This document mostly applies only to Talos 0.9 control plane based on static pods. If Talos was upgraded from version 0.8, it might be still running self-hosted control plane, current status can be checked with the command talosctl get bootstrapstatus:
$ talosctl -n &amp;lt;IP&amp;gt; get bs NODE NAMESPACE TYPE ID VERSION SELF HOSTED 172.</description>
    </item>
    
    <item>
      <title>Troubleshooting Control Plane</title>
      <link>https://talos.dev/docs/v0.12/guides/troubleshooting-control-plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/troubleshooting-control-plane/</guid>
      <description>This guide is written as series of topics and detailed answers for each topic. It starts with basics of control plane and goes into Talos specifics.
In this guide we assume that Talos client config is available and Talos API access is available. Kubernetes client configuration can be pulled from control plane nodes with talosctl -n &amp;lt;IP&amp;gt; kubeconfig (this command works before Kubernetes is fully booted).
What is a control plane node?</description>
    </item>
    
    <item>
      <title>Troubleshooting Control Plane</title>
      <link>https://talos.dev/docs/v0.13/guides/troubleshooting-control-plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/troubleshooting-control-plane/</guid>
      <description>This guide is written as series of topics and detailed answers for each topic. It starts with basics of control plane and goes into Talos specifics.
In this guide we assume that Talos client config is available and Talos API access is available. Kubernetes client configuration can be pulled from control plane nodes with talosctl -n &amp;lt;IP&amp;gt; kubeconfig (this command works before Kubernetes is fully booted).
What is a control plane node?</description>
    </item>
    
    <item>
      <title>Troubleshooting Control Plane</title>
      <link>https://talos.dev/docs/v0.14/guides/troubleshooting-control-plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/troubleshooting-control-plane/</guid>
      <description>This guide is written as series of topics and detailed answers for each topic. It starts with basics of control plane and goes into Talos specifics.
In this guide we assume that Talos client config is available and Talos API access is available. Kubernetes client configuration can be pulled from control plane nodes with talosctl -n &amp;lt;IP&amp;gt; kubeconfig (this command works before Kubernetes is fully booted).
What is a control plane node?</description>
    </item>
    
    <item>
      <title>Troubleshooting Control Plane</title>
      <link>https://talos.dev/docs/v0.9/guides/troubleshooting-control-plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/troubleshooting-control-plane/</guid>
      <description>This guide is written as series of topics and detailed answers for each topic. It starts with basics of control plane and goes into Talos specifics.
This document mostly applies only to Talos 0.9 control plane based on static pods. If Talos was upgraded from version 0.8, it might be still running self-hosted control plane, current status can be checked with the command talosctl get bootstrapstatus:
$ talosctl -n &amp;lt;IP&amp;gt; get bs NODE NAMESPACE TYPE ID VERSION SELF HOSTED 172.</description>
    </item>
    
    <item>
      <title>Troubleshooting Control Plane</title>
      <link>https://talos.dev/docs/v1.0/guides/troubleshooting-control-plane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/troubleshooting-control-plane/</guid>
      <description>This guide is written as series of topics and detailed answers for each topic. It starts with basics of control plane and goes into Talos specifics.
In this guide we assume that Talos client config is available and Talos API access is available. Kubernetes client configuration can be pulled from control plane nodes with talosctl -n &amp;lt;IP&amp;gt; kubeconfig (this command works before Kubernetes is fully booted).
What is a control plane node?</description>
    </item>
    
    <item>
      <title>UpCloud</title>
      <link>https://talos.dev/docs/v0.13/cloud-platforms/upcloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/cloud-platforms/upcloud/</guid>
      <description>Talos is known to work on UpCloud.com; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>UpCloud</title>
      <link>https://talos.dev/docs/v0.14/cloud-platforms/upcloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/cloud-platforms/upcloud/</guid>
      <description>Talos is known to work on UpCloud.com; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>UpCloud</title>
      <link>https://talos.dev/docs/v1.0/cloud-platforms/upcloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/cloud-platforms/upcloud/</guid>
      <description>Talos is known to work on UpCloud.com; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Upgrading Kubernetes</title>
      <link>https://talos.dev/docs/v0.10/guides/upgrading-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/upgrading-kubernetes/</guid>
      <description>This guide covers Kubernetes control plane upgrade for clusters running Talos-managed control plane. If the cluster is still running self-hosted control plane (after upgrade from Talos 0.8), please refer to 0.8 docs.
Video Walkthrough To see a live demo of this writeup, see the video below:
Automated Kubernetes Upgrade To upgrade from Kubernetes v1.20.1 to v1.20.4 run:
$ talosctl --nodes &amp;lt;master node&amp;gt; upgrade-k8s --from 1.20.1 --to 1.20.4 discovered master nodes [&amp;#34;172.</description>
    </item>
    
    <item>
      <title>Upgrading Kubernetes</title>
      <link>https://talos.dev/docs/v0.11/guides/upgrading-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/upgrading-kubernetes/</guid>
      <description>This guide covers Kubernetes control plane upgrade for clusters running Talos-managed control plane. If the cluster is still running self-hosted control plane (after upgrade from Talos 0.8), please refer to 0.8 docs.
Video Walkthrough To see a live demo of this writeup, see the video below:
Automated Kubernetes Upgrade To upgrade from Kubernetes v1.20.1 to v1.20.4 run:
$ talosctl --nodes &amp;lt;master node&amp;gt; upgrade-k8s --from 1.20.1 --to 1.20.4 discovered master nodes [&amp;#34;172.</description>
    </item>
    
    <item>
      <title>Upgrading Kubernetes</title>
      <link>https://talos.dev/docs/v0.12/guides/upgrading-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/upgrading-kubernetes/</guid>
      <description>This guide covers Kubernetes control plane upgrade for clusters running Talos-managed control plane. If the cluster is still running self-hosted control plane (after upgrade from Talos 0.8), please refer to 0.8 docs.
Video Walkthrough To see a live demo of this writeup, see the video below:
Automated Kubernetes Upgrade To check what is going to be upgraded you can run talosctl upgrade-k8s with --dry-run flag:
$ talosctl --nodes &amp;lt;master node&amp;gt; upgrade-k8s --from 1.</description>
    </item>
    
    <item>
      <title>Upgrading Kubernetes</title>
      <link>https://talos.dev/docs/v0.13/guides/upgrading-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/upgrading-kubernetes/</guid>
      <description>This guide covers Kubernetes control plane upgrade for clusters running Talos-managed control plane. If the cluster is still running self-hosted control plane (after upgrade from Talos 0.8), please refer to 0.8 docs.
Video Walkthrough To see a live demo of this writeup, see the video below:
Automated Kubernetes Upgrade To check what is going to be upgraded you can run talosctl upgrade-k8s with --dry-run flag:
$ talosctl --nodes &amp;lt;master node&amp;gt; upgrade-k8s --from 1.</description>
    </item>
    
    <item>
      <title>Upgrading Kubernetes</title>
      <link>https://talos.dev/docs/v0.14/guides/upgrading-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/upgrading-kubernetes/</guid>
      <description>This guide covers Kubernetes control plane upgrade for clusters running Talos-managed control plane. If the cluster is still running self-hosted control plane (after upgrade from Talos 0.8), please refer to 0.8 docs.
Video Walkthrough To see a live demo of this writeup, see the video below:
Automated Kubernetes Upgrade To check what is going to be upgraded you can run talosctl upgrade-k8s with --dry-run flag:
$ talosctl --nodes &amp;lt;master node&amp;gt; upgrade-k8s --to 1.</description>
    </item>
    
    <item>
      <title>Upgrading Kubernetes</title>
      <link>https://talos.dev/docs/v0.6/guides/upgrading-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/guides/upgrading-kubernetes/</guid>
      <description>Video Walkthrough To see a live demo of this writeup, see the video below:
Kubelet Image In Kubernetes 1.19, the official hyperkube image was removed. This means that in order to upgrade Kubernetes, Talos users will have to change the command, and image fields of each control plane component. The kubelet image will also have to be updated, if you wish to specify the kubelet image explicitly. The default used by Talos is sufficient in most cases.</description>
    </item>
    
    <item>
      <title>Upgrading Kubernetes</title>
      <link>https://talos.dev/docs/v0.7/guides/upgrading-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/guides/upgrading-kubernetes/</guid>
      <description>Video Walkthrough To see a live demo of this writeup, see the video below:
Kubeconfig In order to edit the control plane, we will need a working kubectl config. If you don&amp;rsquo;t already have one, you can get one by running:
talosctl --nodes &amp;lt;master node&amp;gt; kubeconfig Automated Kubernetes Upgrade To upgrade from Kubernetes v1.18.6 to v1.19.0 run:
$ talosctl --nodes &amp;lt;master node&amp;gt; upgrade-k8s --from 1.18.6 --to 1.19.0 updating pod-checkpointer grace period to &amp;#34;0m&amp;#34; sleeping 5m0s to let the pod-checkpointer self-checkpoint be updated temporarily taking &amp;#34;kube-apiserver&amp;#34; out of pod-checkpointer control updating daemonset &amp;#34;kube-apiserver&amp;#34; to version &amp;#34;1.</description>
    </item>
    
    <item>
      <title>Upgrading Kubernetes</title>
      <link>https://talos.dev/docs/v0.8/guides/upgrading-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/guides/upgrading-kubernetes/</guid>
      <description>Video Walkthrough To see a live demo of this writeup, see the video below:
Kubeconfig In order to edit the control plane, we will need a working kubectl config. If you don&amp;rsquo;t already have one, you can get one by running:
talosctl --nodes &amp;lt;master node&amp;gt; kubeconfig Automated Kubernetes Upgrade To upgrade from Kubernetes v1.19.4 to v1.20.1 run:
$ talosctl --nodes &amp;lt;master node&amp;gt; upgrade-k8s --from 1.19.4 --to 1.20.1 patched kube-apiserver secrets for &amp;#34;service-account.</description>
    </item>
    
    <item>
      <title>Upgrading Kubernetes</title>
      <link>https://talos.dev/docs/v0.9/guides/upgrading-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/upgrading-kubernetes/</guid>
      <description>This guide covers Kubernetes control plane upgrade for clusters running Talos-managed control plane. If the cluster is still running self-hosted control plane (after upgrade from Talos 0.8), please refer to 0.8 docs.
Video Walkthrough To see a live demo of this writeup, see the video below:
Automated Kubernetes Upgrade To upgrade from Kubernetes v1.20.1 to v1.20.4 run:
$ talosctl --nodes &amp;lt;master node&amp;gt; upgrade-k8s --from 1.20.1 --to 1.20.4 discovered master nodes [&amp;#34;172.</description>
    </item>
    
    <item>
      <title>Upgrading Kubernetes</title>
      <link>https://talos.dev/docs/v1.0/guides/upgrading-kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/upgrading-kubernetes/</guid>
      <description>This guide covers Kubernetes control plane upgrade for clusters running Talos-managed control plane. If the cluster is still running self-hosted control plane (after upgrade from Talos 0.8), please refer to 0.8 docs.
Video Walkthrough To see a live demo of this writeup, see the video below:
Automated Kubernetes Upgrade To check what is going to be upgraded you can run talosctl upgrade-k8s with --dry-run flag:
$ talosctl --nodes &amp;lt;master node&amp;gt; upgrade-k8s --to 1.</description>
    </item>
    
    <item>
      <title>Upgrading Talos</title>
      <link>https://talos.dev/docs/v0.10/guides/upgrading-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/upgrading-talos/</guid>
      <description>Talos upgrades are effected by an API call. The talosctl CLI utility will facilitate this.
Video Walkthrough To see a live demo of this writeup, see the video below:
Upgrading from Talos 0.9 TBD
After Upgrade to 0.10 TBD
talosctl Upgrade To manually upgrade a Talos node, you will specify the node&amp;rsquo;s IP address and the installer container image for the version of Talos to which you wish to upgrade.</description>
    </item>
    
    <item>
      <title>Upgrading Talos</title>
      <link>https://talos.dev/docs/v0.11/guides/upgrading-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/upgrading-talos/</guid>
      <description>Talos upgrades are effected by an API call. The talosctl CLI utility will facilitate this.
Video Walkthrough To see a live demo of this writeup, see the video below:
Upgrading from Talos 0.9 TBD
After Upgrade to 0.10 TBD
After Upgrade to 0.11 TBD
talosctl Upgrade To manually upgrade a Talos node, you will specify the node&amp;rsquo;s IP address and the installer container image for the version of Talos to which you wish to upgrade.</description>
    </item>
    
    <item>
      <title>Upgrading Talos</title>
      <link>https://talos.dev/docs/v0.12/guides/upgrading-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/upgrading-talos/</guid>
      <description>Talos upgrades are effected by an API call. The talosctl CLI utility will facilitate this.
Video Walkthrough To see a live demo of this writeup, see the video below:
Upgrading from Talos 0.11 Only for clusters bootstrapped with Talos &amp;lt;= 0.8: please make sure control plane was converted to use static pods (first introduced in Talos 0.9), as Talos 0.12 drops support for self-hosted control plane.
After Upgrade to 0.12 There are no special items to follow after the upgrade to Talos 0.</description>
    </item>
    
    <item>
      <title>Upgrading Talos</title>
      <link>https://talos.dev/docs/v0.13/guides/upgrading-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/upgrading-talos/</guid>
      <description>Talos upgrades are effected by an API call. The talosctl CLI utility will facilitate this.
Video Walkthrough To see a live demo of this writeup, see the video below:
After Upgrade to 0.13 No actions required.
talosctl Upgrade To manually upgrade a Talos node, you will specify the node&amp;rsquo;s IP address and the installer container image for the version of Talos to which you wish to upgrade.
For instance, if your Talos node has the IP address 10.</description>
    </item>
    
    <item>
      <title>Upgrading Talos</title>
      <link>https://talos.dev/docs/v0.14/guides/upgrading-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/upgrading-talos/</guid>
      <description>Talos upgrades are effected by an API call. The talosctl CLI utility will facilitate this.
Video Walkthrough To see a live demo of this writeup, see the video below:
After Upgrade to 0.14 No actions required.
talosctl Upgrade To manually upgrade a Talos node, you will specify the node&amp;rsquo;s IP address and the installer container image for the version of Talos to which you wish to upgrade.
For instance, if your Talos node has the IP address 10.</description>
    </item>
    
    <item>
      <title>Upgrading Talos</title>
      <link>https://talos.dev/docs/v0.6/guides/upgrading-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/guides/upgrading-talos/</guid>
      <description>Video Walkthrough To see a live demo of this writeup, see the video below:
Talos In an effort to create more production ready clusters, Talos will now taint control plane nodes as unschedulable. This means that any application you might have deployed must tolerate this taint if you intend on running the application on control plane nodes.
Another feature you will notice is the automatic uncordoning of nodes that have been upgraded.</description>
    </item>
    
    <item>
      <title>Upgrading Talos</title>
      <link>https://talos.dev/docs/v0.7/guides/upgrading-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/guides/upgrading-talos/</guid>
      <description>Talos upgrades are effected by an API call. The talosctl CLI utility will facilitate this, or you can use the automatic upgrade features provided by the talos controller manager.
Video Walkthrough To see a live demo of this writeup, see the video below:
talosctl Upgrade To manually upgrade a Talos node, you will specify the node&amp;rsquo;s IP address and the installer container image for the version of Talos to which you wish to upgrade.</description>
    </item>
    
    <item>
      <title>Upgrading Talos</title>
      <link>https://talos.dev/docs/v0.8/guides/upgrading-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/guides/upgrading-talos/</guid>
      <description>Talos upgrades are effected by an API call. The talosctl CLI utility will facilitate this, or you can use the automatic upgrade features provided by the talos controller manager.
Video Walkthrough To see a live demo of this writeup, see the video below:
talosctl Upgrade To manually upgrade a Talos node, you will specify the node&amp;rsquo;s IP address and the installer container image for the version of Talos to which you wish to upgrade.</description>
    </item>
    
    <item>
      <title>Upgrading Talos</title>
      <link>https://talos.dev/docs/v0.9/guides/upgrading-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/upgrading-talos/</guid>
      <description>Talos upgrades are effected by an API call. The talosctl CLI utility will facilitate this.
Video Walkthrough To see a live demo of this writeup, see the video below:
Upgrading from Talos 0.8 Talos 0.9 drops support for bootkube and self-hosted control plane.
Please make sure Talos is upgraded to the latest minor release of 0.8 first (0.8.4 at the moment of this writing), then proceed with upgrading to the latest minor release of 0.</description>
    </item>
    
    <item>
      <title>Upgrading Talos</title>
      <link>https://talos.dev/docs/v1.0/guides/upgrading-talos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/upgrading-talos/</guid>
      <description>Talos upgrades are effected by an API call. The talosctl CLI utility will facilitate this.
Video Walkthrough To see a live demo of this writeup, see the video below:
After Upgrade to 0.15 TBD
talosctl Upgrade To manually upgrade a Talos node, you will specify the node&amp;rsquo;s IP address and the installer container image for the version of Talos to which you wish to upgrade.
For instance, if your Talos node has the IP address 10.</description>
    </item>
    
    <item>
      <title>Virtual (shared) IP</title>
      <link>https://talos.dev/docs/v0.10/guides/vip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/guides/vip/</guid>
      <description>One of the biggest pain points when building a high-availability controlplane is giving clients a single IP or URL at which they can reach any of the controlplane nodes. The most common approaches all require external resources: reverse proxy, load balancer, BGP, and DNS.
Using a &amp;ldquo;Virtual&amp;rdquo; IP address, on the other hand, provides high availability without external coordination or resources, so long as the controlplane members share a layer 2 network.</description>
    </item>
    
    <item>
      <title>Virtual (shared) IP</title>
      <link>https://talos.dev/docs/v0.11/guides/vip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/guides/vip/</guid>
      <description>One of the biggest pain points when building a high-availability controlplane is giving clients a single IP or URL at which they can reach any of the controlplane nodes. The most common approaches all require external resources: reverse proxy, load balancer, BGP, and DNS.
Using a &amp;ldquo;Virtual&amp;rdquo; IP address, on the other hand, provides high availability without external coordination or resources, so long as the controlplane members share a layer 2 network.</description>
    </item>
    
    <item>
      <title>Virtual (shared) IP</title>
      <link>https://talos.dev/docs/v0.12/guides/vip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/guides/vip/</guid>
      <description>One of the biggest pain points when building a high-availability controlplane is giving clients a single IP or URL at which they can reach any of the controlplane nodes. The most common approaches all require external resources: reverse proxy, load balancer, BGP, and DNS.
Using a &amp;ldquo;Virtual&amp;rdquo; IP address, on the other hand, provides high availability without external coordination or resources, so long as the controlplane members share a layer 2 network.</description>
    </item>
    
    <item>
      <title>Virtual (shared) IP</title>
      <link>https://talos.dev/docs/v0.13/guides/vip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/guides/vip/</guid>
      <description>One of the biggest pain points when building a high-availability controlplane is giving clients a single IP or URL at which they can reach any of the controlplane nodes. The most common approaches all require external resources: reverse proxy, load balancer, BGP, and DNS.
Using a &amp;ldquo;Virtual&amp;rdquo; IP address, on the other hand, provides high availability without external coordination or resources, so long as the controlplane members share a layer 2 network.</description>
    </item>
    
    <item>
      <title>Virtual (shared) IP</title>
      <link>https://talos.dev/docs/v0.14/guides/vip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/guides/vip/</guid>
      <description>One of the biggest pain points when building a high-availability controlplane is giving clients a single IP or URL at which they can reach any of the controlplane nodes. The most common approaches all require external resources: reverse proxy, load balancer, BGP, and DNS.
Using a &amp;ldquo;Virtual&amp;rdquo; IP address, on the other hand, provides high availability without external coordination or resources, so long as the controlplane members share a layer 2 network.</description>
    </item>
    
    <item>
      <title>Virtual (shared) IP</title>
      <link>https://talos.dev/docs/v0.9/guides/vip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/guides/vip/</guid>
      <description>One of the biggest pain points when building a high-availability controlplane is giving clients a single IP or URL at which they can reach any of the controlplane nodes. The most common approaches all require external resources: reverse proxy, load balancer, BGP, and DNS.
Using a &amp;ldquo;Virtual&amp;rdquo; IP address, on the other hand, provides high availability without external coordination or resources, so long as the controlplane members share a layer 2 network.</description>
    </item>
    
    <item>
      <title>Virtual (shared) IP</title>
      <link>https://talos.dev/docs/v1.0/guides/vip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/guides/vip/</guid>
      <description>One of the biggest pain points when building a high-availability controlplane is giving clients a single IP or URL at which they can reach any of the controlplane nodes. The most common approaches all require external resources: reverse proxy, load balancer, BGP, and DNS.
Using a &amp;ldquo;Virtual&amp;rdquo; IP address, on the other hand, provides high availability without external coordination or resources, so long as the controlplane members share a layer 2 network.</description>
    </item>
    
    <item>
      <title>VirtualBox</title>
      <link>https://talos.dev/docs/v0.10/local-platforms/virtualbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/local-platforms/virtualbox/</guid>
      <description>In this guide we will create a Kubernetes cluster using VirtualBox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get VirtualBox Install VirtualBox with your operating system package manager or from the website. For example, on Ubuntu for x86:
apt install virtualbox Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.10.0 for linux platform:</description>
    </item>
    
    <item>
      <title>VirtualBox</title>
      <link>https://talos.dev/docs/v0.11/local-platforms/virtualbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/local-platforms/virtualbox/</guid>
      <description>In this guide we will create a Kubernetes cluster using VirtualBox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get VirtualBox Install VirtualBox with your operating system package manager or from the website. For example, on Ubuntu for x86:
apt install virtualbox Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.11.0 for linux platform:</description>
    </item>
    
    <item>
      <title>VirtualBox</title>
      <link>https://talos.dev/docs/v0.12/local-platforms/virtualbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/local-platforms/virtualbox/</guid>
      <description>In this guide we will create a Kubernetes cluster using VirtualBox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get VirtualBox Install VirtualBox with your operating system package manager or from the website. For example, on Ubuntu for x86:
apt install virtualbox Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.12.0 for linux platform:</description>
    </item>
    
    <item>
      <title>VirtualBox</title>
      <link>https://talos.dev/docs/v0.13/local-platforms/virtualbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/local-platforms/virtualbox/</guid>
      <description>In this guide we will create a Kubernetes cluster using VirtualBox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get VirtualBox Install VirtualBox with your operating system package manager or from the website. For example, on Ubuntu for x86:
apt install virtualbox Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.13.0 for linux platform:</description>
    </item>
    
    <item>
      <title>VirtualBox</title>
      <link>https://talos.dev/docs/v0.14/local-platforms/virtualbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/local-platforms/virtualbox/</guid>
      <description>In this guide we will create a Kubernetes cluster using VirtualBox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get VirtualBox Install VirtualBox with your operating system package manager or from the website. For example, on Ubuntu for x86:
apt install virtualbox Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.14.0 for linux platform:</description>
    </item>
    
    <item>
      <title>VirtualBox</title>
      <link>https://talos.dev/docs/v0.7/local-platforms/virtualbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/local-platforms/virtualbox/</guid>
      <description>In this guide we will create a Kubernetes cluster using VirtualBox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get VirtualBox Install VirtualBox with your operating system package manager or from the website. For example, on Ubuntu for x86:
apt install virtualbox Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.7.0 for linux platform:</description>
    </item>
    
    <item>
      <title>VirtualBox</title>
      <link>https://talos.dev/docs/v0.8/local-platforms/virtualbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/local-platforms/virtualbox/</guid>
      <description>In this guide we will create a Kubernetes cluster using VirtualBox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get VirtualBox Install VirtualBox with your operating system package manager or from the website. For example, on Ubuntu for x86:
apt install virtualbox Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.8.0 for linux platform:</description>
    </item>
    
    <item>
      <title>VirtualBox</title>
      <link>https://talos.dev/docs/v0.9/local-platforms/virtualbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/local-platforms/virtualbox/</guid>
      <description>In this guide we will create a Kubernetes cluster using VirtualBox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get VirtualBox Install VirtualBox with your operating system package manager or from the website. For example, on Ubuntu for x86:
apt install virtualbox Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.9.0 for linux platform:</description>
    </item>
    
    <item>
      <title>VirtualBox</title>
      <link>https://talos.dev/docs/v1.0/local-platforms/virtualbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/local-platforms/virtualbox/</guid>
      <description>In this guide we will create a Kubernetes cluster using VirtualBox.
Video Walkthrough To see a live demo of this writeup, visit Youtube here:
Installation How to Get VirtualBox Install VirtualBox with your operating system package manager or from the website. For example, on Ubuntu for x86:
apt install virtualbox Install talosctl You can download talosctl via github.com/talos-systems/talos/releases
curl https://github.com/talos-systems/talos/releases/download/&amp;lt;version&amp;gt;/talosctl-&amp;lt;platform&amp;gt;-&amp;lt;arch&amp;gt; -L -o talosctl For example version v0.15.0 for linux platform:</description>
    </item>
    
    <item>
      <title>VMware</title>
      <link>https://talos.dev/docs/v0.10/virtualized-platforms/vmware/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/virtualized-platforms/vmware/</guid>
      <description>Creating a Cluster via the govc CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We will use the govc cli which can be downloaded here.
Prerequisites Prior to starting, it is important to have the following infrastructure in place and available:
 DHCP server Load Balancer or DNS address for cluster endpoint  If using a load balancer, the most common setup is to balance tcp/443 across the control plane nodes tcp/6443 If using a DNS address, the A record should return back the addresses of the control plane nodes    Create the Machine Configuration Files Generating Base Configurations Using the DNS name or name of the loadbalancer used in the prereq steps, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>VMware</title>
      <link>https://talos.dev/docs/v0.11/virtualized-platforms/vmware/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/virtualized-platforms/vmware/</guid>
      <description>Creating a Cluster via the govc CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We will use the govc cli which can be downloaded here.
Prerequisites Prior to starting, it is important to have the following infrastructure in place and available:
 DHCP server Load Balancer or DNS address for cluster endpoint  If using a load balancer, the most common setup is to balance tcp/443 across the control plane nodes tcp/6443 If using a DNS address, the A record should return back the addresses of the control plane nodes    Create the Machine Configuration Files Generating Base Configurations Using the DNS name or name of the loadbalancer used in the prereq steps, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>VMware</title>
      <link>https://talos.dev/docs/v0.12/virtualized-platforms/vmware/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/virtualized-platforms/vmware/</guid>
      <description>Creating a Cluster via the govc CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We will use the govc cli which can be downloaded here.
Prerequisites Prior to starting, it is important to have the following infrastructure in place and available:
 DHCP server Load Balancer or DNS address for cluster endpoint  If using a load balancer, the most common setup is to balance tcp/443 across the control plane nodes tcp/6443 If using a DNS address, the A record should return back the addresses of the control plane nodes    Create the Machine Configuration Files Generating Base Configurations Using the DNS name or name of the loadbalancer used in the prereq steps, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>VMware</title>
      <link>https://talos.dev/docs/v0.13/virtualized-platforms/vmware/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/virtualized-platforms/vmware/</guid>
      <description>Creating a Cluster via the govc CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We will use the govc cli which can be downloaded here.
Prerequisites Prior to starting, it is important to have the following infrastructure in place and available:
 DHCP server Load Balancer or DNS address for cluster endpoint  If using a load balancer, the most common setup is to balance tcp/443 across the control plane nodes tcp/6443 If using a DNS address, the A record should return back the addresses of the control plane nodes    Create the Machine Configuration Files Generating Base Configurations Using the DNS name or name of the loadbalancer used in the prereq steps, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>VMware</title>
      <link>https://talos.dev/docs/v0.14/virtualized-platforms/vmware/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/virtualized-platforms/vmware/</guid>
      <description>Creating a Cluster via the govc CLI In this guide we will create an HA Kubernetes cluster with 2 worker nodes. We will use the govc cli which can be downloaded here.
Prereqs/Assumptions This guide will use the virtual IP (&amp;ldquo;VIP&amp;rdquo;) functionality that is built into Talos in order to provide a stable, known IP for the Kubernetes control plane. This simply means the user should pick an IP on their &amp;ldquo;VM Network&amp;rdquo; to designate for this purpose and keep it handy for future steps.</description>
    </item>
    
    <item>
      <title>VMware</title>
      <link>https://talos.dev/docs/v0.6/virtualized-platforms/vmware/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/virtualized-platforms/vmware/</guid>
      <description>Creating a Cluster via the govc CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We will use the govc cli which can be downloaded here.
Prerequisites Prior to starting, it is important to have the following infrastructure in place and available:
 DHCP server Load Balancer or DNS address for cluster endpoint  If using a load balancer, the most common setup is to balance tcp/443 across the control plane nodes tcp/6443 If using a DNS address, the A record should return back the addresses of the control plane nodes    Create the Machine Configuration Files Generating Base Configurations Using the DNS name or name of the loadbalancer used in the prereq steps, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>VMware</title>
      <link>https://talos.dev/docs/v0.7/virtualized-platforms/vmware/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/virtualized-platforms/vmware/</guid>
      <description>Creating a Cluster via the govc CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We will use the govc cli which can be downloaded here.
Prerequisites Prior to starting, it is important to have the following infrastructure in place and available:
 DHCP server Load Balancer or DNS address for cluster endpoint  If using a load balancer, the most common setup is to balance tcp/443 across the control plane nodes tcp/6443 If using a DNS address, the A record should return back the addresses of the control plane nodes    Create the Machine Configuration Files Generating Base Configurations Using the DNS name or name of the loadbalancer used in the prereq steps, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>VMware</title>
      <link>https://talos.dev/docs/v0.8/virtualized-platforms/vmware/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/virtualized-platforms/vmware/</guid>
      <description>Creating a Cluster via the govc CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We will use the govc cli which can be downloaded here.
Prerequisites Prior to starting, it is important to have the following infrastructure in place and available:
 DHCP server Load Balancer or DNS address for cluster endpoint  If using a load balancer, the most common setup is to balance tcp/443 across the control plane nodes tcp/6443 If using a DNS address, the A record should return back the addresses of the control plane nodes    Create the Machine Configuration Files Generating Base Configurations Using the DNS name or name of the loadbalancer used in the prereq steps, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>VMware</title>
      <link>https://talos.dev/docs/v0.9/virtualized-platforms/vmware/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/virtualized-platforms/vmware/</guid>
      <description>Creating a Cluster via the govc CLI In this guide we will create an HA Kubernetes cluster with 3 worker nodes. We will use the govc cli which can be downloaded here.
Prerequisites Prior to starting, it is important to have the following infrastructure in place and available:
 DHCP server Load Balancer or DNS address for cluster endpoint  If using a load balancer, the most common setup is to balance tcp/443 across the control plane nodes tcp/6443 If using a DNS address, the A record should return back the addresses of the control plane nodes    Create the Machine Configuration Files Generating Base Configurations Using the DNS name or name of the loadbalancer used in the prereq steps, generate the base configuration files for the Talos machines:</description>
    </item>
    
    <item>
      <title>VMware</title>
      <link>https://talos.dev/docs/v1.0/virtualized-platforms/vmware/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/virtualized-platforms/vmware/</guid>
      <description>Creating a Cluster via the govc CLI In this guide we will create an HA Kubernetes cluster with 2 worker nodes. We will use the govc cli which can be downloaded here.
Prereqs/Assumptions This guide will use the virtual IP (&amp;ldquo;VIP&amp;rdquo;) functionality that is built into Talos in order to provide a stable, known IP for the Kubernetes control plane. This simply means the user should pick an IP on their &amp;ldquo;VM Network&amp;rdquo; to designate for this purpose and keep it handy for future steps.</description>
    </item>
    
    <item>
      <title>Vultr</title>
      <link>https://talos.dev/docs/v0.13/cloud-platforms/vultr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/cloud-platforms/vultr/</guid>
      <description>Talos is known to work on Vultr.com; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Vultr</title>
      <link>https://talos.dev/docs/v0.14/cloud-platforms/vultr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/cloud-platforms/vultr/</guid>
      <description>Talos is known to work on Vultr.com; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Vultr</title>
      <link>https://talos.dev/docs/v1.0/cloud-platforms/vultr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/cloud-platforms/vultr/</guid>
      <description>Talos is known to work on Vultr.com; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Xen</title>
      <link>https://talos.dev/docs/v0.10/virtualized-platforms/xen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.10/virtualized-platforms/xen/</guid>
      <description>Talos is known to work on Xen; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Xen</title>
      <link>https://talos.dev/docs/v0.11/virtualized-platforms/xen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.11/virtualized-platforms/xen/</guid>
      <description>Talos is known to work on Xen; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Xen</title>
      <link>https://talos.dev/docs/v0.12/virtualized-platforms/xen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.12/virtualized-platforms/xen/</guid>
      <description>Talos is known to work on Xen; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Xen</title>
      <link>https://talos.dev/docs/v0.13/virtualized-platforms/xen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.13/virtualized-platforms/xen/</guid>
      <description>Talos is known to work on Xen; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Xen</title>
      <link>https://talos.dev/docs/v0.14/virtualized-platforms/xen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.14/virtualized-platforms/xen/</guid>
      <description>Talos is known to work on Xen; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Xen</title>
      <link>https://talos.dev/docs/v0.6/virtualized-platforms/xen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.6/virtualized-platforms/xen/</guid>
      <description>Talos is known to work on Xen; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Xen</title>
      <link>https://talos.dev/docs/v0.7/virtualized-platforms/xen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.7/virtualized-platforms/xen/</guid>
      <description>Talos is known to work on Xen; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Xen</title>
      <link>https://talos.dev/docs/v0.8/virtualized-platforms/xen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.8/virtualized-platforms/xen/</guid>
      <description>Talos is known to work on Xen; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Xen</title>
      <link>https://talos.dev/docs/v0.9/virtualized-platforms/xen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v0.9/virtualized-platforms/xen/</guid>
      <description>Talos is known to work on Xen; however, it is currently undocumented.</description>
    </item>
    
    <item>
      <title>Xen</title>
      <link>https://talos.dev/docs/v1.0/virtualized-platforms/xen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://talos.dev/docs/v1.0/virtualized-platforms/xen/</guid>
      <description>Talos is known to work on Xen; however, it is currently undocumented.</description>
    </item>
    
  </channel>
</rss>
